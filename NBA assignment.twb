<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0420.0834                               -->
<workbook original-version='18.1' source-build='2021.4.6 (20214.22.0420.0834)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Selected Team' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;1&quot;'>
        <calculation class='tableau' formula='&quot;1&quot;' />
      </column>
    </datasource>
    <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' inline='true' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='legit  NBA Stats 202122 All Player Statistics in one Page' name='excel-direct.0432mjo1inwn7a112fvee1nnp8sc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/zaccollison/Downloads/INFO1111/legit  NBA Stats 202122 All Player Statistics in one Page.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Postalcodes NBA' name='excel-direct.040zki00ihpcuw1d8qksu0zbzui0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/zaccollison/Downloads/INFO1111/Postalcodes NBA.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0432mjo1inwn7a112fvee1nnp8sc' name='Players' table='[Players$]' type='table'>
          <columns gridOrigin='A1:AC698:no:A1:AC698:0' header='yes' outcome='2'>
            <column datatype='string' name='RANK' ordinal='0' />
            <column datatype='string' name='FULL NAME' ordinal='1' />
            <column datatype='string' name='TEAM' ordinal='2' />
            <column datatype='string' name='POS' ordinal='3' />
            <column datatype='real' name='AGE' ordinal='4' />
            <column datatype='integer' name='GP' ordinal='5' />
            <column datatype='real' name='MPG' ordinal='6' />
            <column datatype='real' name='MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor' ordinal='7' />
            <column datatype='real' name='USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was' ordinal='8' />
            <column datatype='real' name='TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions' ordinal='9' />
            <column datatype='integer' name='FTA' ordinal='10' />
            <column datatype='real' name='FT%' ordinal='11' />
            <column datatype='integer' name='2PA' ordinal='12' />
            <column datatype='real' name='2P%' ordinal='13' />
            <column datatype='integer' name='3PA' ordinal='14' />
            <column datatype='real' name='3P%' ordinal='15' />
            <column datatype='real' name='eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(' ordinal='16' />
            <column datatype='real' name='TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-' ordinal='17' />
            <column datatype='real' name='PPGPointsPoints per game.' ordinal='18' />
            <column datatype='real' name='RPGReboundsRebounds per game.' ordinal='19' />
            <column datatype='real' name='TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while ' ordinal='20' />
            <column datatype='real' name='APGAssistsAssists per game.' ordinal='21' />
            <column datatype='real' name='AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is' ordinal='22' />
            <column datatype='real' name='SPGStealsSteals per game.' ordinal='23' />
            <column datatype='real' name='BPGBlocksBlocks per game.' ordinal='24' />
            <column datatype='real' name='TOPGTurnoversTurnovers per game.' ordinal='25' />
            <column datatype='real' name='VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ' ordinal='26' />
            <column datatype='real' name='ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio' ordinal='27' />
            <column datatype='real' name='DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0432mjo1inwn7a112fvee1nnp8sc' name='TPG' table='[TPG$]' type='table'>
            <columns gridOrigin='A1:Y32:no:A1:Y32:0' header='yes' outcome='6'>
              <column datatype='integer' name='Rk' ordinal='0' />
              <column datatype='string' name='Team' ordinal='1' />
              <column datatype='integer' name='G' ordinal='2' />
              <column datatype='real' name='MP' ordinal='3' />
              <column datatype='real' name='FG' ordinal='4' />
              <column datatype='real' name='FGA' ordinal='5' />
              <column datatype='real' name='FG%' ordinal='6' />
              <column datatype='real' name='3P' ordinal='7' />
              <column datatype='real' name='3PA' ordinal='8' />
              <column datatype='real' name='3P%' ordinal='9' />
              <column datatype='real' name='2P' ordinal='10' />
              <column datatype='real' name='2PA' ordinal='11' />
              <column datatype='real' name='2P%' ordinal='12' />
              <column datatype='real' name='FT' ordinal='13' />
              <column datatype='real' name='FTA' ordinal='14' />
              <column datatype='real' name='FT%' ordinal='15' />
              <column datatype='real' name='ORB' ordinal='16' />
              <column datatype='real' name='DRB' ordinal='17' />
              <column datatype='real' name='TRB' ordinal='18' />
              <column datatype='real' name='AST' ordinal='19' />
              <column datatype='real' name='STL' ordinal='20' />
              <column datatype='real' name='BLK' ordinal='21' />
              <column datatype='real' name='TOV' ordinal='22' />
              <column datatype='real' name='PF' ordinal='23' />
              <column datatype='real' name='PTS' ordinal='24' />
            </columns>
          </relation>
          <relation connection='excel-direct.0432mjo1inwn7a112fvee1nnp8sc' name='Players' table='[Players$]' type='table'>
            <columns gridOrigin='A1:AC698:no:A1:AC698:0' header='yes' outcome='2'>
              <column datatype='string' name='RANK' ordinal='0' />
              <column datatype='string' name='FULL NAME' ordinal='1' />
              <column datatype='string' name='TEAM' ordinal='2' />
              <column datatype='string' name='POS' ordinal='3' />
              <column datatype='real' name='AGE' ordinal='4' />
              <column datatype='integer' name='GP' ordinal='5' />
              <column datatype='real' name='MPG' ordinal='6' />
              <column datatype='real' name='MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor' ordinal='7' />
              <column datatype='real' name='USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was' ordinal='8' />
              <column datatype='real' name='TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions' ordinal='9' />
              <column datatype='integer' name='FTA' ordinal='10' />
              <column datatype='real' name='FT%' ordinal='11' />
              <column datatype='integer' name='2PA' ordinal='12' />
              <column datatype='real' name='2P%' ordinal='13' />
              <column datatype='integer' name='3PA' ordinal='14' />
              <column datatype='real' name='3P%' ordinal='15' />
              <column datatype='real' name='eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(' ordinal='16' />
              <column datatype='real' name='TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-' ordinal='17' />
              <column datatype='real' name='PPGPointsPoints per game.' ordinal='18' />
              <column datatype='real' name='RPGReboundsRebounds per game.' ordinal='19' />
              <column datatype='real' name='TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while ' ordinal='20' />
              <column datatype='real' name='APGAssistsAssists per game.' ordinal='21' />
              <column datatype='real' name='AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is' ordinal='22' />
              <column datatype='real' name='SPGStealsSteals per game.' ordinal='23' />
              <column datatype='real' name='BPGBlocksBlocks per game.' ordinal='24' />
              <column datatype='real' name='TOPGTurnoversTurnovers per game.' ordinal='25' />
              <column datatype='real' name='VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ' ordinal='26' />
              <column datatype='real' name='ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio' ordinal='27' />
              <column datatype='real' name='DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall' ordinal='28' />
            </columns>
          </relation>
          <relation connection='excel-direct.040zki00ihpcuw1d8qksu0zbzui0' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:D31:no:A1:D31:0' header='yes' outcome='2'>
              <column datatype='string' name='Teams' ordinal='0' />
              <column datatype='integer' name='Postal codes' ordinal='1' />
              <column datatype='real' name='Latitude' ordinal='2' />
              <column datatype='real' name='Longitude' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0432mjo1inwn7a112fvee1nnp8sc' name='TT' table='[TT$]' type='table'>
            <columns gridOrigin='A1:X31:no:A1:X31:0' header='yes' outcome='6'>
              <column datatype='string' name='Team' ordinal='0' />
              <column datatype='integer' name='G' ordinal='1' />
              <column datatype='integer' name='MP' ordinal='2' />
              <column datatype='integer' name='FG' ordinal='3' />
              <column datatype='integer' name='FGA' ordinal='4' />
              <column datatype='real' name='FG%' ordinal='5' />
              <column datatype='integer' name='3P' ordinal='6' />
              <column datatype='integer' name='3PA' ordinal='7' />
              <column datatype='real' name='3P%' ordinal='8' />
              <column datatype='integer' name='2P' ordinal='9' />
              <column datatype='integer' name='2PA' ordinal='10' />
              <column datatype='real' name='2P%' ordinal='11' />
              <column datatype='integer' name='FT' ordinal='12' />
              <column datatype='integer' name='FTA' ordinal='13' />
              <column datatype='real' name='FT%' ordinal='14' />
              <column datatype='integer' name='ORB' ordinal='15' />
              <column datatype='integer' name='DRB' ordinal='16' />
              <column datatype='integer' name='TRB' ordinal='17' />
              <column datatype='integer' name='AST' ordinal='18' />
              <column datatype='integer' name='STL' ordinal='19' />
              <column datatype='integer' name='BLK' ordinal='20' />
              <column datatype='integer' name='TOV' ordinal='21' />
              <column datatype='integer' name='PF' ordinal='22' />
              <column datatype='integer' name='PTS' ordinal='23' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[2P (TT)]' value='[TT].[2P]' />
          <map key='[2P% (Players)]' value='[Players].[2P%]' />
          <map key='[2P% (TT)]' value='[TT].[2P%]' />
          <map key='[2P%]' value='[TPG].[2P%]' />
          <map key='[2PA (Players)]' value='[Players].[2PA]' />
          <map key='[2PA (TT)]' value='[TT].[2PA]' />
          <map key='[2PA]' value='[TPG].[2PA]' />
          <map key='[2P]' value='[TPG].[2P]' />
          <map key='[3P (TT)]' value='[TT].[3P]' />
          <map key='[3P% (Players)]' value='[Players].[3P%]' />
          <map key='[3P% (TT)]' value='[TT].[3P%]' />
          <map key='[3P%]' value='[TPG].[3P%]' />
          <map key='[3PA (Players)]' value='[Players].[3PA]' />
          <map key='[3PA (TT)]' value='[TT].[3PA]' />
          <map key='[3PA]' value='[TPG].[3PA]' />
          <map key='[3P]' value='[TPG].[3P]' />
          <map key='[AGE]' value='[Players].[AGE]' />
          <map key='[APGAssistsAssists per game.]' value='[Players].[APGAssistsAssists per game.]' />
          <map key='[AST (TT)]' value='[TT].[AST]' />
          <map key='[AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is]' value='[Players].[AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is]' />
          <map key='[AST]' value='[TPG].[AST]' />
          <map key='[BLK (TT)]' value='[TT].[BLK]' />
          <map key='[BLK]' value='[TPG].[BLK]' />
          <map key='[BPGBlocksBlocks per game.]' value='[Players].[BPGBlocksBlocks per game.]' />
          <map key='[DRB (TT)]' value='[TT].[DRB]' />
          <map key='[DRB]' value='[TPG].[DRB]' />
          <map key='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' value='[Players].[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' />
          <map key='[FG (TT)]' value='[TT].[FG]' />
          <map key='[FG% (TT)]' value='[TT].[FG%]' />
          <map key='[FG%]' value='[TPG].[FG%]' />
          <map key='[FGA (TT)]' value='[TT].[FGA]' />
          <map key='[FGA]' value='[TPG].[FGA]' />
          <map key='[FG]' value='[TPG].[FG]' />
          <map key='[FT (TT)]' value='[TT].[FT]' />
          <map key='[FT% (Players)]' value='[Players].[FT%]' />
          <map key='[FT% (TT)]' value='[TT].[FT%]' />
          <map key='[FT%]' value='[TPG].[FT%]' />
          <map key='[FTA (Players)]' value='[Players].[FTA]' />
          <map key='[FTA (TT)]' value='[TT].[FTA]' />
          <map key='[FTA]' value='[TPG].[FTA]' />
          <map key='[FT]' value='[TPG].[FT]' />
          <map key='[FULL NAME]' value='[Players].[FULL NAME]' />
          <map key='[G (TT)]' value='[TT].[G]' />
          <map key='[GP]' value='[Players].[GP]' />
          <map key='[G]' value='[TPG].[G]' />
          <map key='[Latitude]' value='[Sheet1].[Latitude]' />
          <map key='[Longitude]' value='[Sheet1].[Longitude]' />
          <map key='[MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor]' value='[Players].[MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor]' />
          <map key='[MP (TT)]' value='[TT].[MP]' />
          <map key='[MPG]' value='[Players].[MPG]' />
          <map key='[MP]' value='[TPG].[MP]' />
          <map key='[ORB (TT)]' value='[TT].[ORB]' />
          <map key='[ORB]' value='[TPG].[ORB]' />
          <map key='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' value='[Players].[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' />
          <map key='[PF (TT)]' value='[TT].[PF]' />
          <map key='[PF]' value='[TPG].[PF]' />
          <map key='[POS]' value='[Players].[POS]' />
          <map key='[PPGPointsPoints per game.]' value='[Players].[PPGPointsPoints per game.]' />
          <map key='[PTS (TT)]' value='[TT].[PTS]' />
          <map key='[PTS]' value='[TPG].[PTS]' />
          <map key='[Postal codes]' value='[Sheet1].[Postal codes]' />
          <map key='[RANK]' value='[Players].[RANK]' />
          <map key='[RPGReboundsRebounds per game.]' value='[Players].[RPGReboundsRebounds per game.]' />
          <map key='[Rk]' value='[TPG].[Rk]' />
          <map key='[SPGStealsSteals per game.]' value='[Players].[SPGStealsSteals per game.]' />
          <map key='[STL (TT)]' value='[TT].[STL]' />
          <map key='[STL]' value='[TPG].[STL]' />
          <map key='[TEAM]' value='[Players].[TEAM]' />
          <map key='[TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions]' value='[Players].[TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions]' />
          <map key='[TOPGTurnoversTurnovers per game.]' value='[Players].[TOPGTurnoversTurnovers per game.]' />
          <map key='[TOV (TT)]' value='[TT].[TOV]' />
          <map key='[TOV]' value='[TPG].[TOV]' />
          <map key='[TRB (TT)]' value='[TT].[TRB]' />
          <map key='[TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while ]' value='[Players].[TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while ]' />
          <map key='[TRB]' value='[TPG].[TRB]' />
          <map key='[TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-]' value='[Players].[TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-]' />
          <map key='[Team (TT)]' value='[TT].[Team]' />
          <map key='[Team]' value='[TPG].[Team]' />
          <map key='[Teams]' value='[Sheet1].[Teams]' />
          <map key='[USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was]' value='[Players].[USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was]' />
          <map key='[VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ]' value='[Players].[VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ]' />
          <map key='[eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(]' value='[Players].[eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[TPG]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y32:no:A1:Y32:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Players]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AC698:no:A1:AC698:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D31:no:A1:D31:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[TT]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X31:no:A1:X31:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rk]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>Rk</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>20</remote-type>
            <local-name>[G]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MP]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>MP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FG]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>FG</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FGA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FGA]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>FGA</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FG%]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>FG%</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3P]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>3P</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3PA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3PA]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>3PA</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3P%]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>3P%</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2P]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>2P</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2PA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2PA]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>2PA</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2P%]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>2P%</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FT]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>FT</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FTA]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>FTA</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FT%]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>FT%</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ORB]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>ORB</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DRB]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>DRB</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TRB]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>TRB</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AST</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AST]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>AST</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STL</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STL]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>STL</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLK</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BLK]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>BLK</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOV]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>TOV</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PF]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>PF</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PTS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PTS]</local-name>
            <parent-name>[TPG]</parent-name>
            <remote-alias>PTS</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RANK</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RANK]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>RANK</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL NAME]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>FULL NAME</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEAM</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TEAM]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>TEAM</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[POS]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>POS</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AGE]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GP]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>GP</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MPG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MPG]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>MPG</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FTA (Players)]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>FTA</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FT% (Players)]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>FT%</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2PA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2PA (Players)]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>2PA</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2P% (Players)]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>2P%</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3PA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3PA (Players)]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>3PA</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3P% (Players)]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>3P%</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(</remote-name>
            <remote-type>5</remote-type>
            <local-name>[eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPGPointsPoints per game.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPGPointsPoints per game.]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>PPGPointsPoints per game.</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RPGReboundsRebounds per game.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RPGReboundsRebounds per game.]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>RPGReboundsRebounds per game.</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while </remote-name>
            <remote-type>5</remote-type>
            <local-name>[TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while ]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while </remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APGAssistsAssists per game.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[APGAssistsAssists per game.]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>APGAssistsAssists per game.</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SPGStealsSteals per game.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SPGStealsSteals per game.]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>SPGStealsSteals per game.</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BPGBlocksBlocks per game.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BPGBlocksBlocks per game.]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>BPGBlocksBlocks per game.</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOPGTurnoversTurnovers per game.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOPGTurnoversTurnovers per game.]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>TOPGTurnoversTurnovers per game.</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. </remote-name>
            <remote-type>5</remote-type>
            <local-name>[VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. </remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]</local-name>
            <parent-name>[Players]</parent-name>
            <remote-alias>DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Players_5F313CA7674A440F895141CA65FBBCC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teams</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Teams]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Teams</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DD46C3470A3B414493524B70FB70E96A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal codes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal codes]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Postal codes</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DD46C3470A3B414493524B70FB70E96A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DD46C3470A3B414493524B70FB70E96A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DD46C3470A3B414493524B70FB70E96A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>20</remote-type>
            <local-name>[G (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MP (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>MP</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FG (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>FG</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FGA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FGA (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>FGA</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FG% (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>FG%</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3P (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>3P</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3PA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3PA (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>3PA</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3P% (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>3P%</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2P (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>2P</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2PA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2PA (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>2PA</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2P% (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>2P%</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FT (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>FT</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FTA (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>FTA</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FT% (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>FT%</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ORB (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>ORB</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DRB (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>DRB</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TRB (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>TRB</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AST</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AST (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>AST</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STL (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>STL</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BLK (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>BLK</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOV (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>TOV</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PF (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>PF</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PTS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PTS (TT)]</local-name>
            <parent-name>[TT]</parent-name>
            <remote-alias>PTS</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TT_347158CB40054B9D97E91069B2A2857E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2p (Tt)' datatype='integer' name='[2P (TT)]' role='measure' type='quantitative' />
      <column caption='2p% (Tt)' datatype='real' name='[2P% (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2P%]' role='measure' type='quantitative' />
      <column caption='2pa (Tt)' datatype='integer' name='[2PA (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[2PA]' role='measure' type='quantitative' />
      <column caption='3p (Tt)' datatype='integer' name='[3P (TT)]' role='measure' type='quantitative' />
      <column caption='3p% (Tt)' datatype='real' name='[3P% (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[3P%]' role='measure' type='quantitative' />
      <column datatype='integer' name='[3PA (Players)]' role='measure' type='quantitative' />
      <column caption='3pa (Tt)' datatype='integer' name='[3PA (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[3PA]' role='measure' type='quantitative' />
      <column datatype='real' name='[3P]' role='measure' type='quantitative' />
      <column datatype='real' name='[AGE]' role='measure' type='quantitative' />
      <column datatype='real' name='[APGAssistsAssists per game.]' role='measure' type='quantitative' />
      <column caption='Ast (Tt)' datatype='integer' name='[AST (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[AST]' role='measure' type='quantitative' />
      <column caption='Blk (Tt)' datatype='integer' name='[BLK (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[BLK]' role='measure' type='quantitative' />
      <column datatype='real' name='[BPGBlocksBlocks per game.]' role='measure' type='quantitative' />
      <column caption='Cluster match?' datatype='boolean' name='[Calculation_6613536086947639296]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters)] == [POS]' />
      </column>
      <column caption='Player value total ' datatype='real' name='[Calculation_6613536086952435713]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[APGAssistsAssists per game.] + [BPGBlocksBlocks per game.] + [PPGPointsPoints per game.] + [RPGReboundsRebounds per game.] +  [SPGStealsSteals per game.]' />
      </column>
      <column caption='Team value' datatype='real' name='[Calculation_6700652592648146951]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([2P% (TT)]+[3P% (TT)]+[FT% (TT)])/3' />
      </column>
      <column caption='Drb (Tt)' datatype='integer' name='[DRB (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' role='measure' type='quantitative' />
      <column caption='Fg (Tt)' datatype='integer' name='[FG (TT)]' role='measure' type='quantitative' />
      <column caption='Fg% (Tt)' datatype='real' name='[FG% (TT)]' role='measure' type='quantitative' />
      <column caption='Fga (Tt)' datatype='integer' name='[FGA (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[FGA]' role='measure' type='quantitative' />
      <column datatype='real' name='[FG]' role='measure' type='quantitative' />
      <column caption='Ft (Tt)' datatype='integer' name='[FT (TT)]' role='measure' type='quantitative' />
      <column caption='Ft% (Tt)' datatype='real' name='[FT% (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[FT%]' role='measure' type='quantitative' />
      <column caption='Fta (Tt)' datatype='integer' name='[FTA (TT)]' role='measure' type='quantitative' />
      <column caption='Full Name' datatype='string' name='[FULL NAME]' role='dimension' type='nominal' />
      <column datatype='string' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters) (1)]' parent-model='[AnalyticModel:{d133f12a-b3c0-4e6f-bf72-e87635e6e550}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. 1]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;Aaron Holiday&quot;,1.8999999999999999,0.22)</value>
            <value>(&quot;Alec Burks&quot;,2.7999999999999998,0.32000000000000001)</value>
            <value>(&quot;Aleksej Pokusevski&quot;,1.5,0.57999999999999996)</value>
            <value>(&quot;Alperen Sengun&quot;,2.3999999999999999,0.93000000000000005)</value>
            <value>(&quot;Andre Drummond&quot;,2.0,0.92000000000000004)</value>
            <value>(&quot;Anthony Edwards&quot;,3.7000000000000002,0.71999999999999997)</value>
            <value>(&quot;Armoni Brooks&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Austin Reaves&quot;,1.3,0.35999999999999999)</value>
            <value>(&quot;Austin Rivers&quot;,1.3,0.089999999999999997)</value>
            <value>(&quot;Avery Bradley&quot;,0.80000000000000004,0.16)</value>
            <value>(&quot;Ayo Dosunmu&quot;,3.2999999999999998,0.41999999999999998)</value>
            <value>(&quot;Ben McLemore&quot;,0.90000000000000002,0.12)</value>
            <value>(&quot;Bogdan Bogdanovic&quot;,3.2000000000000002,0.25)</value>
            <value>(&quot;Bones Hyland&quot;,2.2999999999999998,0.23000000000000001)</value>
            <value>(&quot;Brandon Boston Jr.&quot;,0.90000000000000002,0.23999999999999999)</value>
            <value>(&quot;Bryn Forbes&quot;,1.0,0.080000000000000002)</value>
            <value>(&quot;Buddy Hield&quot;,1.8999999999999999,0.27000000000000002)</value>
            <value>(&quot;Cam Thomas&quot;,1.3,0.14000000000000001)</value>
            <value>(&quot;Chris Duarte&quot;,2.1000000000000001,0.17999999999999999)</value>
            <value>(&quot;Clint Capela&quot;,1.3,1.3400000000000001)</value>
            <value>(&quot;Coby White&quot;,3.0,0.22)</value>
            <value>(&quot;Cory Joseph&quot;,3.7999999999999998,0.27000000000000002)</value>
            <value>(&quot;Damian Jones&quot;,1.1000000000000001,0.70999999999999996)</value>
            <value>(&quot;Danny Green&quot;,1.0,0.63)</value>
            <value>(&quot;Davion Mitchell&quot;,3.2999999999999998,0.27000000000000002)</value>
            <value>(&quot;De&apos;Anthony Melton&quot;,2.7000000000000002,0.56000000000000005)</value>
            <value>(&quot;Deandre Ayton&quot;,1.3999999999999999,0.72999999999999998)</value>
            <value>(&quot;Delon Wright&quot;,2.2999999999999998,0.22)</value>
            <value>(&quot;Desmond Bane&quot;,2.6000000000000001,0.40999999999999998)</value>
            <value>(&quot;Dewayne Dedmon&quot;,0.80000000000000004,0.63)</value>
            <value>(&quot;Elfrid Payton&quot;,2.0,0.089999999999999997)</value>
            <value>(&quot;Eric Gordon&quot;,2.7999999999999998,0.33000000000000002)</value>
            <value>(&quot;Evan Mobley&quot;,2.6000000000000001,1.6599999999999999)</value>
            <value>(&quot;Facundo Campazzo&quot;,3.5,0.37)</value>
            <value>(&quot;Frank Jackson&quot;,1.0,0.20000000000000001)</value>
            <value>(&quot;Frank Ntilikina&quot;,1.1000000000000001,0.12)</value>
            <value>(&quot;Gabe Vincent&quot;,3.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Garrison Mathews&quot;,1.0,0.27000000000000002)</value>
            <value>(&quot;Gary Harris&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Gary Payton II&quot;,0.80000000000000004,0.29999999999999999)</value>
            <value>(&quot;George Hill&quot;,2.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;Gorgui Dieng&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;Grayson Allen&quot;,1.6000000000000001,0.26000000000000001)</value>
            <value>(&quot;Hamidou Diallo&quot;,1.3,0.28999999999999998)</value>
            <value>(&quot;Hassan Whiteside&quot;,0.40000000000000002,1.49)</value>
            <value>(&quot;Immanuel Quickley&quot;,3.1000000000000001,0.050000000000000003)</value>
            <value>(&quot;Isaiah Joe&quot;,0.69999999999999996,0.059999999999999998)</value>
            <value>(&quot;Ivica Zubac&quot;,1.5,1.03)</value>
            <value>(&quot;Jakob Poeltl&quot;,2.8999999999999999,1.72)</value>
            <value>(&quot;Jalen Green&quot;,2.6000000000000001,0.22)</value>
            <value>(&quot;Jarrett Allen&quot;,1.6000000000000001,1.3400000000000001)</value>
            <value>(&quot;Jaylen Nowell&quot;,2.2000000000000002,0.12)</value>
            <value>(&quot;Jevon Carter&quot;,1.0,0.22)</value>
            <value>(&quot;Jock Landale&quot;,0.90000000000000002,0.29999999999999999)</value>
            <value>(&quot;John Konchar&quot;,1.3999999999999999,0.33000000000000002)</value>
            <value>(&quot;Jonas Valanciunas&quot;,2.5,0.85999999999999999)</value>
            <value>(&quot;Jordan Clarkson&quot;,2.2000000000000002,0.23000000000000001)</value>
            <value>(&quot;Jordan McLaughlin&quot;,2.8999999999999999,0.12)</value>
            <value>(&quot;Jordan Poole&quot;,3.6000000000000001,0.29999999999999999)</value>
            <value>(&quot;Jose Alvarado&quot;,2.5,0.14999999999999999)</value>
            <value>(&quot;Josh Christopher&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Josh Green&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Josh Okogie&quot;,0.5,0.23999999999999999)</value>
            <value>(&quot;Josh Richardson&quot;,1.5,0.52000000000000002)</value>
            <value>(&quot;Jusuf Nurkic&quot;,2.7999999999999998,0.60999999999999999)</value>
            <value>(&quot;Kentavious Caldwell-Pope&quot;,1.8999999999999999,0.32000000000000001)</value>
            <value>(&quot;Khem Birch&quot;,1.0,0.48999999999999999)</value>
            <value>(&quot;Landry Shamet&quot;,1.6000000000000001,0.089999999999999997)</value>
            <value>(&quot;Lou Williams&quot;,1.8999999999999999,0.059999999999999998)</value>
            <value>(&quot;Luguentz Dort&quot;,1.7,0.34999999999999998)</value>
            <value>(&quot;Luke Kennard&quot;,2.1000000000000001,0.10000000000000001)</value>
            <value>(&quot;Malachi Flynn&quot;,1.6000000000000001,0.10000000000000001)</value>
            <value>(&quot;Malik Beasley&quot;,1.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;Malik Monk&quot;,2.7000000000000002,0.38)</value>
            <value>(&quot;Mo Bamba&quot;,1.1000000000000001,1.7)</value>
            <value>(&quot;Moses Moody&quot;,0.40000000000000002,0.16)</value>
            <value>(&quot;Nick Richards&quot;,0.29999999999999999,0.41999999999999998)</value>
            <value>(&quot;Nickeil Alexander-Walker&quot;,2.7999999999999998,0.38)</value>
            <value>(&quot;Nikola Vucevic&quot;,3.3999999999999999,1.0700000000000001)</value>
            <value>(&quot;Norman Powell&quot;,2.1000000000000001,0.42999999999999999)</value>
            <value>(&quot;Omer Yurtseven&quot;,0.90000000000000002,0.39000000000000001)</value>
            <value>(&quot;Pat Connaughton&quot;,1.2,0.26000000000000001)</value>
            <value>(&quot;Patty Mills&quot;,2.3999999999999999,0.23000000000000001)</value>
            <value>(&quot;Payton Pritchard&quot;,1.7,0.070000000000000007)</value>
            <value>(&quot;Quentin Grimes&quot;,1.0,0.25)</value>
            <value>(&quot;R.J. Hampton&quot;,2.2999999999999998,0.25)</value>
            <value>(&quot;Raul Neto&quot;,3.2000000000000002,0.029999999999999999)</value>
            <value>(&quot;Rodney McGruder&quot;,0.80000000000000004,0.12)</value>
            <value>(&quot;Rudy Gobert&quot;,1.1000000000000001,2.2200000000000002)</value>
            <value>(&quot;Steven Adams&quot;,3.2999999999999998,0.76000000000000001)</value>
            <value>(&quot;Talen Horton-Tucker&quot;,2.7000000000000002,0.53000000000000003)</value>
            <value>(&quot;Theo Maledon&quot;,1.7,0.12)</value>
            <value>(&quot;Tre Jones&quot;,2.8999999999999999,0.050000000000000003)</value>
            <value>(&quot;Tre Mann&quot;,1.5,0.17999999999999999)</value>
            <value>(&quot;Trent Forrest&quot;,1.7,0.059999999999999998)</value>
            <value>(&quot;Tyler Herro&quot;,3.7999999999999998,0.14000000000000001)</value>
            <value>(&quot;Wayne Ellington&quot;,0.69999999999999996,0.10000000000000001)</value>
            <value>(&quot;Will Barton&quot;,3.7999999999999998,0.47999999999999998)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;Anfernee Simons&quot;,3.8999999999999999,0.11)</value>
            <value>(&quot;Bradley Beal&quot;,6.5999999999999996,0.38)</value>
            <value>(&quot;Cade Cunningham&quot;,5.2999999999999998,0.65000000000000002)</value>
            <value>(&quot;Cameron Payne&quot;,4.7000000000000002,0.31)</value>
            <value>(&quot;Chris Paul&quot;,10.699999999999999,0.31)</value>
            <value>(&quot;Cole Anthony&quot;,5.7000000000000002,0.28000000000000003)</value>
            <value>(&quot;D&apos;Angelo Russell&quot;,7.0999999999999996,0.39000000000000001)</value>
            <value>(&quot;Darius Garland&quot;,8.3000000000000007,0.11)</value>
            <value>(&quot;De&apos;Aaron Fox&quot;,5.5999999999999996,0.41999999999999998)</value>
            <value>(&quot;Dejounte Murray&quot;,9.4000000000000004,0.33000000000000002)</value>
            <value>(&quot;Dennis Schroder&quot;,4.2000000000000002,0.10000000000000001)</value>
            <value>(&quot;Derrick White&quot;,5.5999999999999996,0.85999999999999999)</value>
            <value>(&quot;Devin Booker&quot;,4.9000000000000004,0.41999999999999998)</value>
            <value>(&quot;Devonte&apos; Graham&quot;,4.4000000000000004,0.14999999999999999)</value>
            <value>(&quot;Donovan Mitchell&quot;,5.5,0.20999999999999999)</value>
            <value>(&quot;Eric Bledsoe&quot;,4.2000000000000002,0.34999999999999998)</value>
            <value>(&quot;Fred VanVleet&quot;,6.7000000000000002,0.52000000000000002)</value>
            <value>(&quot;Ja Morant&quot;,6.7000000000000002,0.38)</value>
            <value>(&quot;Jalen Brunson&quot;,5.2000000000000002,0.050000000000000003)</value>
            <value>(&quot;Jalen Suggs&quot;,4.4000000000000004,0.39000000000000001)</value>
            <value>(&quot;James Harden&quot;,10.199999999999999,0.69999999999999996)</value>
            <value>(&quot;Josh Giddey&quot;,6.4000000000000004,0.37)</value>
            <value>(&quot;Josh Hart&quot;,4.0999999999999996,0.27000000000000002)</value>
            <value>(&quot;Jrue Holiday&quot;,6.7000000000000002,0.46000000000000002)</value>
            <value>(&quot;Killian Hayes&quot;,4.2999999999999998,0.48999999999999999)</value>
            <value>(&quot;Kyle Lowry&quot;,7.7999999999999998,0.29999999999999999)</value>
            <value>(&quot;LaMelo Ball&quot;,7.4000000000000004,0.42999999999999999)</value>
            <value>(&quot;Marcus Smart&quot;,5.5999999999999996,0.27000000000000002)</value>
            <value>(&quot;Mike Conley&quot;,5.2999999999999998,0.33000000000000002)</value>
            <value>(&quot;Monte Morris&quot;,4.2999999999999998,0.17000000000000001)</value>
            <value>(&quot;Nikola Jokic&quot;,8.0999999999999996,0.83999999999999997)</value>
            <value>(&quot;Patrick Beverley&quot;,4.7999999999999998,0.93999999999999995)</value>
            <value>(&quot;Reggie Jackson&quot;,4.9000000000000004,0.17999999999999999)</value>
            <value>(&quot;Russell Westbrook&quot;,7.0,0.26000000000000001)</value>
            <value>(&quot;Seth Curry&quot;,4.0,0.23999999999999999)</value>
            <value>(&quot;Spencer Dinwiddie&quot;,5.7999999999999998,0.16)</value>
            <value>(&quot;Stephen Curry&quot;,6.2999999999999998,0.35999999999999999)</value>
            <value>(&quot;Terry Rozier&quot;,4.4000000000000004,0.34000000000000002)</value>
            <value>(&quot;Trae Young&quot;,9.5,0.11)</value>
            <value>(&quot;Tyrese Haliburton&quot;,7.4000000000000004,0.67000000000000004)</value>
            <value>(&quot;Tyrese Maxey&quot;,4.2999999999999998,0.44)</value>
            <value>(&quot;Tyus Jones&quot;,4.0999999999999996,0.029999999999999999)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters) (2)]' parent-model='[AnalyticModel:{44337e7e-6953-40e2-926a-b186373b56b8}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. 2]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;Aaron Gordon&quot;,2.5,0.56000000000000005)</value>
            <value>(&quot;Aaron Henry&quot;,0.0,0.33000000000000002)</value>
            <value>(&quot;Aaron Holiday&quot;,1.8999999999999999,0.22)</value>
            <value>(&quot;Aaron Nesmith&quot;,0.40000000000000002,0.089999999999999997)</value>
            <value>(&quot;Aaron Wiggins&quot;,1.1000000000000001,0.22)</value>
            <value>(&quot;Abdel Nader&quot;,0.5,0.28999999999999998)</value>
            <value>(&quot;Ade Murkey&quot;,0.0,0.0)</value>
            <value>(&quot;Admiral Schofield&quot;,0.59999999999999998,0.13)</value>
            <value>(&quot;Ahmad Caver&quot;,0.0,0.0)</value>
            <value>(&quot;Alec Burks&quot;,2.7999999999999998,0.32000000000000001)</value>
            <value>(&quot;Aleem Ford&quot;,0.40000000000000002,0.0)</value>
            <value>(&quot;Aleksej Pokusevski&quot;,1.5,0.57999999999999996)</value>
            <value>(&quot;Alex Len&quot;,1.2,0.70999999999999996)</value>
            <value>(&quot;Alfonzo McKinnie&quot;,0.29999999999999999,0.17999999999999999)</value>
            <value>(&quot;Alize Johnson&quot;,0.0,0.0)</value>
            <value>(&quot;Alize Johnson&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Alize Johnson&quot;,0.5,0.0)</value>
            <value>(&quot;Alperen Sengun&quot;,2.3999999999999999,0.93000000000000005)</value>
            <value>(&quot;Amir Coffey&quot;,1.8,0.20000000000000001)</value>
            <value>(&quot;Andre Drummond&quot;,1.7,1.0)</value>
            <value>(&quot;Andre Drummond&quot;,2.0,0.92000000000000004)</value>
            <value>(&quot;Andrew Wiggins&quot;,2.2999999999999998,0.76000000000000001)</value>
            <value>(&quot;Anthony Gill&quot;,0.5,0.20999999999999999)</value>
            <value>(&quot;Anthony Lamb&quot;,1.0,0.0)</value>
            <value>(&quot;Armoni Brooks&quot;,0.59999999999999998,0.20000000000000001)</value>
            <value>(&quot;Armoni Brooks&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Arnoldas Kulboka&quot;,0.0,0.0)</value>
            <value>(&quot;Austin Reaves&quot;,1.3,0.35999999999999999)</value>
            <value>(&quot;Austin Rivers&quot;,1.3,0.089999999999999997)</value>
            <value>(&quot;Avery Bradley&quot;,0.80000000000000004,0.16)</value>
            <value>(&quot;Ben McLemore&quot;,0.90000000000000002,0.12)</value>
            <value>(&quot;Bismack Biyombo&quot;,0.69999999999999996,0.77000000000000002)</value>
            <value>(&quot;BJ Johnson&quot;,0.0,0.25)</value>
            <value>(&quot;Blake Griffin&quot;,1.8999999999999999,0.25)</value>
            <value>(&quot;Boban Marjanovic&quot;,0.10000000000000001,0.11)</value>
            <value>(&quot;Bobby Portis&quot;,1.2,0.80000000000000004)</value>
            <value>(&quot;Bojan Bogdanovic&quot;,1.7,0.02)</value>
            <value>(&quot;Bol Bol&quot;,0.40000000000000002,0.14999999999999999)</value>
            <value>(&quot;Bones Hyland&quot;,2.2999999999999998,0.23000000000000001)</value>
            <value>(&quot;Brad Wanamaker&quot;,2.2000000000000002,0.27000000000000002)</value>
            <value>(&quot;Brandon Boston Jr.&quot;,0.90000000000000002,0.23999999999999999)</value>
            <value>(&quot;Brandon Clarke&quot;,1.3,1.0900000000000001)</value>
            <value>(&quot;Brandon Knight&quot;,2.7000000000000002,0.0)</value>
            <value>(&quot;Brandon Williams&quot;,2.3999999999999999,0.45000000000000001)</value>
            <value>(&quot;Braxton Key&quot;,0.5,0.0)</value>
            <value>(&quot;Brodric Thomas&quot;,0.69999999999999996,0.11)</value>
            <value>(&quot;Brook Lopez&quot;,0.29999999999999999,1.0)</value>
            <value>(&quot;Bruce Brown&quot;,1.8,0.52000000000000002)</value>
            <value>(&quot;Bruno Fernando&quot;,0.0,0.59999999999999998)</value>
            <value>(&quot;Bruno Fernando&quot;,0.20000000000000001,0.14999999999999999)</value>
            <value>(&quot;Bryn Forbes&quot;,1.0,0.070000000000000007)</value>
            <value>(&quot;Bryn Forbes&quot;,1.0,0.080000000000000002)</value>
            <value>(&quot;Buddy Hield&quot;,1.8999999999999999,0.27000000000000002)</value>
            <value>(&quot;Caleb Martin&quot;,1.1000000000000001,0.47999999999999998)</value>
            <value>(&quot;Cam Reddish&quot;,0.69999999999999996,0.27000000000000002)</value>
            <value>(&quot;Cam Reddish&quot;,1.1000000000000001,0.32000000000000001)</value>
            <value>(&quot;Cam Thomas&quot;,1.3,0.14000000000000001)</value>
            <value>(&quot;Cameron Johnson&quot;,1.5,0.23000000000000001)</value>
            <value>(&quot;Cameron McGriff&quot;,1.0,0.33000000000000002)</value>
            <value>(&quot;Cameron Oliver&quot;,1.5,0.5)</value>
            <value>(&quot;Carlik Jones&quot;,0.0,0.0)</value>
            <value>(&quot;Carlik Jones&quot;,1.7,0.0)</value>
            <value>(&quot;Carmelo Anthony&quot;,1.0,0.81999999999999995)</value>
            <value>(&quot;Cassius Stanley&quot;,0.40000000000000002,0.22)</value>
            <value>(&quot;Cassius Winston&quot;,1.0,0.0)</value>
            <value>(&quot;Cat Barber&quot;,1.0,0.0)</value>
            <value>(&quot;Cedi Osman&quot;,2.1000000000000001,0.14000000000000001)</value>
            <value>(&quot;Chandler Hutchison&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Charles Bassey&quot;,0.29999999999999999,0.73999999999999999)</value>
            <value>(&quot;Charlie Brown Jr.&quot;,0.29999999999999999,0.19)</value>
            <value>(&quot;Charlie Brown Jr.&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;Chaundee Brown Jr.&quot;,0.0,0.0)</value>
            <value>(&quot;Chaundee Brown Jr.&quot;,1.3,0.0)</value>
            <value>(&quot;Cheick Diallo&quot;,0.0,0.0)</value>
            <value>(&quot;Chimezie Metu&quot;,1.1000000000000001,0.53000000000000003)</value>
            <value>(&quot;Chris Boucher&quot;,0.29999999999999999,0.96999999999999997)</value>
            <value>(&quot;Chris Chiozza&quot;,1.8999999999999999,0.0)</value>
            <value>(&quot;Chris Duarte&quot;,2.1000000000000001,0.17999999999999999)</value>
            <value>(&quot;Chris Silva&quot;,0.0,0.0)</value>
            <value>(&quot;Chris Silva&quot;,0.80000000000000004,0.11)</value>
            <value>(&quot;Christian Wood&quot;,2.2000000000000002,0.94999999999999996)</value>
            <value>(&quot;Chuma Okeke&quot;,1.7,0.56000000000000005)</value>
            <value>(&quot;CJ Elleby&quot;,1.2,0.25)</value>
            <value>(&quot;CJ Miles&quot;,0.0,0.0)</value>
            <value>(&quot;Clint Capela&quot;,1.3,1.3400000000000001)</value>
            <value>(&quot;Coby White&quot;,3.0,0.22)</value>
            <value>(&quot;Cody Martin&quot;,2.3999999999999999,0.46000000000000002)</value>
            <value>(&quot;Cody Zeller&quot;,0.80000000000000004,0.22)</value>
            <value>(&quot;Collin Sexton&quot;,2.1000000000000001,0.0)</value>
            <value>(&quot;Corey Kispert&quot;,1.0,0.32000000000000001)</value>
            <value>(&quot;Craig Sword&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;D.J. Augustin&quot;,1.8999999999999999,0.0)</value>
            <value>(&quot;D.J. Augustin&quot;,2.2000000000000002,0.0)</value>
            <value>(&quot;D.J. Wilson&quot;,1.3,0.25)</value>
            <value>(&quot;Daishen Nix&quot;,1.6000000000000001,0.0)</value>
            <value>(&quot;Dakota Mathias&quot;,0.20000000000000001,0.0)</value>
            <value>(&quot;Dalano Banton&quot;,1.6000000000000001,0.17000000000000001)</value>
            <value>(&quot;Damian Jones&quot;,1.1000000000000001,0.70999999999999996)</value>
            <value>(&quot;Damion Lee&quot;,0.90000000000000002,0.089999999999999997)</value>
            <value>(&quot;Damyean Dotson&quot;,0.5,0.0)</value>
            <value>(&quot;Daniel Gafford&quot;,1.0,1.46)</value>
            <value>(&quot;Daniel Oturu&quot;,0.0,0.67000000000000004)</value>
            <value>(&quot;Daniel Theis&quot;,0.80000000000000004,0.65000000000000002)</value>
            <value>(&quot;Daniel Theis&quot;,0.90000000000000002,0.89000000000000001)</value>
            <value>(&quot;Danilo Gallinari&quot;,1.3999999999999999,0.19)</value>
            <value>(&quot;Danny Green&quot;,1.0,0.63)</value>
            <value>(&quot;Danuel House Jr.&quot;,0.0,0.0)</value>
            <value>(&quot;Danuel House Jr.&quot;,1.2,0.31)</value>
            <value>(&quot;Danuel House Jr.&quot;,1.2,0.41999999999999998)</value>
            <value>(&quot;DaQuan Jeffries&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Darius Bazley&quot;,1.3999999999999999,1.0800000000000001)</value>
            <value>(&quot;Darren Collison&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;David Duke Jr.&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;David Johnson&quot;,0.0,0.0)</value>
            <value>(&quot;David Nwaba&quot;,0.80000000000000004,0.42999999999999999)</value>
            <value>(&quot;Davis Bertans&quot;,0.5,0.17999999999999999)</value>
            <value>(&quot;Davis Bertans&quot;,0.5,0.25)</value>
            <value>(&quot;Davon Reed&quot;,1.0,0.16)</value>
            <value>(&quot;Day&apos;Ron Sharpe&quot;,0.5,0.46999999999999997)</value>
            <value>(&quot;De&apos;Andre Hunter&quot;,1.2,0.37)</value>
            <value>(&quot;De&apos;Anthony Melton&quot;,2.7000000000000002,0.56000000000000005)</value>
            <value>(&quot;Dean Wade&quot;,1.0,0.14000000000000001)</value>
            <value>(&quot;Deandre Ayton&quot;,1.3999999999999999,0.72999999999999998)</value>
            <value>(&quot;DeAndre Jordan&quot;,0.40000000000000002,0.81000000000000005)</value>
            <value>(&quot;DeAndre Jordan&quot;,0.59999999999999998,0.59999999999999998)</value>
            <value>(&quot;DeAndre&apos; Bembry&quot;,0.80000000000000004,0.0)</value>
            <value>(&quot;DeAndre&apos; Bembry&quot;,1.3,0.52000000000000002)</value>
            <value>(&quot;Deividas Sirvydis&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;DeJon Jarreau&quot;,0.0,0.0)</value>
            <value>(&quot;Delon Wright&quot;,2.2999999999999998,0.22)</value>
            <value>(&quot;DeMarcus Cousins&quot;,1.1000000000000001,0.46999999999999997)</value>
            <value>(&quot;DeMarcus Cousins&quot;,1.8,0.46999999999999997)</value>
            <value>(&quot;Deni Avdija&quot;,1.7,0.54000000000000004)</value>
            <value>(&quot;Denzel Valentine&quot;,0.0,0.0)</value>
            <value>(&quot;Denzel Valentine&quot;,0.5,0.0)</value>
            <value>(&quot;Derrick Favors&quot;,0.59999999999999998,0.31)</value>
            <value>(&quot;Derrick Jones Jr.&quot;,0.5,0.69999999999999996)</value>
            <value>(&quot;Desmond Bane&quot;,2.6000000000000001,0.40999999999999998)</value>
            <value>(&quot;Devin Vassell&quot;,1.8,0.67000000000000004)</value>
            <value>(&quot;Devon Dotson&quot;,1.3999999999999999,0.0)</value>
            <value>(&quot;Devontae Cacok&quot;,0.5,0.64000000000000001)</value>
            <value>(&quot;Dewayne Dedmon&quot;,0.80000000000000004,0.63)</value>
            <value>(&quot;Didi Louzada&quot;,0.5,0.0)</value>
            <value>(&quot;Dillon Brooks&quot;,2.7999999999999998,0.22)</value>
            <value>(&quot;Donte DiVincenzo&quot;,1.7,0.17999999999999999)</value>
            <value>(&quot;Donte DiVincenzo&quot;,3.0,0.14000000000000001)</value>
            <value>(&quot;Dorian Finney-Smith&quot;,1.8999999999999999,0.48999999999999999)</value>
            <value>(&quot;Doug McDermott&quot;,1.3,0.12)</value>
            <value>(&quot;Drew Eubanks&quot;,1.0,0.60999999999999999)</value>
            <value>(&quot;Drew Eubanks&quot;,1.6000000000000001,0.33000000000000002)</value>
            <value>(&quot;Duane Washington Jr.&quot;,1.8,0.050000000000000003)</value>
            <value>(&quot;Duncan Robinson&quot;,1.7,0.17999999999999999)</value>
            <value>(&quot;Dwight Howard&quot;,0.59999999999999998,0.63)</value>
            <value>(&quot;Dwight Powell&quot;,1.1000000000000001,0.45000000000000001)</value>
            <value>(&quot;Dylan Windler&quot;,0.69999999999999996,0.050000000000000003)</value>
            <value>(&quot;Ed Davis&quot;,0.20000000000000001,0.32000000000000001)</value>
            <value>(&quot;Elfrid Payton&quot;,2.0,0.089999999999999997)</value>
            <value>(&quot;Elijah Hughes&quot;,0.40000000000000002,0.070000000000000007)</value>
            <value>(&quot;Elijah Hughes&quot;,0.5,0.27000000000000002)</value>
            <value>(&quot;Emanuel Terry&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Emmanuel Mudiay&quot;,2.0,0.0)</value>
            <value>(&quot;Enes Freedom&quot;,0.20000000000000001,0.40000000000000002)</value>
            <value>(&quot;Eric Gordon&quot;,2.7999999999999998,0.33000000000000002)</value>
            <value>(&quot;Eric Paschall&quot;,0.59999999999999998,0.080000000000000002)</value>
            <value>(&quot;Eugene Omoruyi&quot;,0.5,0.0)</value>
            <value>(&quot;Evan Fournier&quot;,1.8999999999999999,0.27000000000000002)</value>
            <value>(&quot;Frank Jackson&quot;,1.0,0.20000000000000001)</value>
            <value>(&quot;Frank Kaminsky&quot;,1.3999999999999999,0.78000000000000003)</value>
            <value>(&quot;Frank Ntilikina&quot;,1.1000000000000001,0.12)</value>
            <value>(&quot;Franz Wagner&quot;,2.8999999999999999,0.44)</value>
            <value>(&quot;Freddie Gillespie&quot;,0.59999999999999998,1.0)</value>
            <value>(&quot;Furkan Korkmaz&quot;,2.1000000000000001,0.12)</value>
            <value>(&quot;Gabriel Deck&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Garrett Temple&quot;,1.3,0.40999999999999998)</value>
            <value>(&quot;Garrison Mathews&quot;,1.0,0.27000000000000002)</value>
            <value>(&quot;Gary Clark&quot;,0.40000000000000002,0.22)</value>
            <value>(&quot;Gary Harris&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Gary Payton II&quot;,0.80000000000000004,0.29999999999999999)</value>
            <value>(&quot;Gary Trent Jr.&quot;,2.0,0.27000000000000002)</value>
            <value>(&quot;George Hill&quot;,2.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;George King&quot;,0.0,0.0)</value>
            <value>(&quot;Georges Niang&quot;,1.3999999999999999,0.16)</value>
            <value>(&quot;Georgios Kalaitzakis&quot;,0.0,0.11)</value>
            <value>(&quot;Goga Bitadze&quot;,0.90000000000000002,0.73999999999999999)</value>
            <value>(&quot;Goran Dragic&quot;,1.8,0.20000000000000001)</value>
            <value>(&quot;Gorgui Dieng&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;Grant Williams&quot;,1.0,0.68000000000000005)</value>
            <value>(&quot;Grayson Allen&quot;,1.6000000000000001,0.26000000000000001)</value>
            <value>(&quot;Greg Brown III&quot;,0.40000000000000002,0.44)</value>
            <value>(&quot;Greg Monroe&quot;,0.40000000000000002,0.40000000000000002)</value>
            <value>(&quot;Greg Monroe&quot;,0.5,0.5)</value>
            <value>(&quot;Hamidou Diallo&quot;,1.3,0.28999999999999998)</value>
            <value>(&quot;Harrison Barnes&quot;,2.5,0.20000000000000001)</value>
            <value>(&quot;Hassan Whiteside&quot;,0.40000000000000002,1.49)</value>
            <value>(&quot;Hassani Gravett&quot;,2.5,0.13)</value>
            <value>(&quot;Haywood Highsmith&quot;,0.10000000000000001,0.14999999999999999)</value>
            <value>(&quot;Herbert Jones&quot;,2.2000000000000002,0.80000000000000004)</value>
            <value>(&quot;Ignas Brazdeikis&quot;,0.69999999999999996,0.059999999999999998)</value>
            <value>(&quot;Immanuel Quickley&quot;,3.1000000000000001,0.050000000000000003)</value>
            <value>(&quot;Isaac Bonga&quot;,0.29999999999999999,0.13)</value>
            <value>(&quot;Isaac Okoro&quot;,1.8,0.29999999999999999)</value>
            <value>(&quot;Isaiah Hartenstein&quot;,2.0,1.1200000000000001)</value>
            <value>(&quot;Isaiah Jackson&quot;,0.29999999999999999,1.3700000000000001)</value>
            <value>(&quot;Isaiah Joe&quot;,0.69999999999999996,0.059999999999999998)</value>
            <value>(&quot;Isaiah Livers&quot;,0.90000000000000002,0.27000000000000002)</value>
            <value>(&quot;Isaiah Roby&quot;,1.1000000000000001,0.5)</value>
            <value>(&quot;Isaiah Stewart&quot;,1.1000000000000001,1.1399999999999999)</value>
            <value>(&quot;Isaiah Thomas&quot;,1.5,0.5)</value>
            <value>(&quot;Isaiah Thomas&quot;,2.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Isaiah Todd&quot;,0.29999999999999999,0.20000000000000001)</value>
            <value>(&quot;Ish Smith&quot;,2.6000000000000001,0.27000000000000002)</value>
            <value>(&quot;Ish Wainright&quot;,0.29999999999999999,0.16)</value>
            <value>(&quot;Ivica Zubac&quot;,1.5,1.03)</value>
            <value>(&quot;Jabari Parker&quot;,0.5,0.080000000000000002)</value>
            <value>(&quot;Jaden McDaniels&quot;,1.1000000000000001,0.78000000000000003)</value>
            <value>(&quot;Jaden Springer&quot;,0.0,1.0)</value>
            <value>(&quot;Jae Crowder&quot;,1.8,0.41999999999999998)</value>
            <value>(&quot;Jahmi&apos;us Ramsey&quot;,0.40000000000000002,0.050000000000000003)</value>
            <value>(&quot;Jaime Echenique&quot;,0.0,0.0)</value>
            <value>(&quot;Jake Layman&quot;,0.29999999999999999,0.17999999999999999)</value>
            <value>(&quot;Jalen Green&quot;,2.6000000000000001,0.22)</value>
            <value>(&quot;Jalen Johnson&quot;,0.10000000000000001,0.059999999999999998)</value>
            <value>(&quot;Jalen McDaniels&quot;,1.0,0.40000000000000002)</value>
            <value>(&quot;Jalen Smith&quot;,0.20000000000000001,0.62)</value>
            <value>(&quot;Jalen Smith&quot;,1.1000000000000001,1.0)</value>
            <value>(&quot;James Bouknight&quot;,0.80000000000000004,0.040000000000000001)</value>
            <value>(&quot;James Ennis III&quot;,0.0,0.5)</value>
            <value>(&quot;James Ennis III&quot;,1.0,0.0)</value>
            <value>(&quot;James Johnson&quot;,2.2000000000000002,0.54000000000000004)</value>
            <value>(&quot;Jamorko Pickett&quot;,0.29999999999999999,0.38)</value>
            <value>(&quot;JaMychal Green&quot;,0.80000000000000004,0.41999999999999998)</value>
            <value>(&quot;JaQuori McLaughlin&quot;,0.5,0.0)</value>
            <value>(&quot;Jared Butler&quot;,1.2,0.20999999999999999)</value>
            <value>(&quot;Jared Harper&quot;,1.5,0.5)</value>
            <value>(&quot;Jaren Jackson Jr.&quot;,1.0,2.25)</value>
            <value>(&quot;Jarred Vanderbilt&quot;,1.3999999999999999,0.67000000000000004)</value>
            <value>(&quot;Jarrett Allen&quot;,1.6000000000000001,1.3400000000000001)</value>
            <value>(&quot;Jarrett Culver&quot;,1.0,0.13)</value>
            <value>(&quot;Jarron Cumberland&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;JaVale McGee&quot;,0.59999999999999998,1.0600000000000001)</value>
            <value>(&quot;Javin DeLaurier&quot;,0.0,0.0)</value>
            <value>(&quot;Javonte Green&quot;,1.0,0.52000000000000002)</value>
            <value>(&quot;Javonte Smart&quot;,0.0,0.0)</value>
            <value>(&quot;Javonte Smart&quot;,1.1000000000000001,0.14999999999999999)</value>
            <value>(&quot;Jaxson Hayes&quot;,0.59999999999999998,0.75)</value>
            <value>(&quot;Jay Huff&quot;,0.29999999999999999,0.25)</value>
            <value>(&quot;Jay Scrubb&quot;,0.40000000000000002,0.17000000000000001)</value>
            <value>(&quot;Jaylen Hoard&quot;,0.0,0.0)</value>
            <value>(&quot;Jaylen Morris&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Jaylen Nowell&quot;,2.2000000000000002,0.12)</value>
            <value>(&quot;Jaysean Paige&quot;,1.0,0.0)</value>
            <value>(&quot;Jeff Dowtin&quot;,0.0,0.0)</value>
            <value>(&quot;Jeff Dowtin&quot;,0.80000000000000004,0.25)</value>
            <value>(&quot;Jeff Green&quot;,1.3,0.38)</value>
            <value>(&quot;Jemerrio Jones&quot;,0.0,0.0)</value>
            <value>(&quot;Jerami Grant&quot;,2.3999999999999999,1.0900000000000001)</value>
            <value>(&quot;Jeremiah Robinson-Earl&quot;,1.0,0.34000000000000002)</value>
            <value>(&quot;Jeremy Lamb&quot;,1.3,0.35999999999999999)</value>
            <value>(&quot;Jeremy Lamb&quot;,1.8999999999999999,0.85999999999999999)</value>
            <value>(&quot;Jericho Sims&quot;,0.29999999999999999,0.39000000000000001)</value>
            <value>(&quot;Jevon Carter&quot;,1.0,0.22)</value>
            <value>(&quot;Jevon Carter&quot;,1.7,0.29999999999999999)</value>
            <value>(&quot;Jock Landale&quot;,0.90000000000000002,0.29999999999999999)</value>
            <value>(&quot;Joe Harris&quot;,1.0,0.14000000000000001)</value>
            <value>(&quot;Joe Johnson&quot;,0.0,0.0)</value>
            <value>(&quot;Joe Wieskamp&quot;,0.29999999999999999,0.10000000000000001)</value>
            <value>(&quot;Joel Ayayi&quot;,0.59999999999999998,0.0)</value>
            <value>(&quot;John Collins&quot;,1.8,1.04)</value>
            <value>(&quot;John Konchar&quot;,1.3999999999999999,0.33000000000000002)</value>
            <value>(&quot;Jon Teske&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Jonas Valanciunas&quot;,2.5,0.85999999999999999)</value>
            <value>(&quot;Jonathan Kuminga&quot;,0.80000000000000004,0.31)</value>
            <value>(&quot;Jordan Bell&quot;,0.0,0.0)</value>
            <value>(&quot;Jordan Clarkson&quot;,2.2000000000000002,0.23000000000000001)</value>
            <value>(&quot;Jordan Goodwin&quot;,0.0,0.0)</value>
            <value>(&quot;Jordan McLaughlin&quot;,2.8999999999999999,0.12)</value>
            <value>(&quot;Jordan Nwora&quot;,1.0,0.26000000000000001)</value>
            <value>(&quot;Jordan Schakel&quot;,0.0,0.0)</value>
            <value>(&quot;Jose Alvarado&quot;,2.5,0.14999999999999999)</value>
            <value>(&quot;Josh Christopher&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Josh Green&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Josh Jackson&quot;,0.20000000000000001,0.20000000000000001)</value>
            <value>(&quot;Josh Jackson&quot;,1.3,0.46000000000000002)</value>
            <value>(&quot;Josh Okogie&quot;,0.5,0.23999999999999999)</value>
            <value>(&quot;Josh Richardson&quot;,1.5,0.52000000000000002)</value>
            <value>(&quot;Josh Richardson&quot;,2.2999999999999998,0.5)</value>
            <value>(&quot;Joshua Primo&quot;,1.3999999999999999,0.45000000000000001)</value>
            <value>(&quot;JT Thor&quot;,0.69999999999999996,0.37)</value>
            <value>(&quot;Juan Toscano-Anderson&quot;,1.8,0.22)</value>
            <value>(&quot;Juancho Hernangomez&quot;,0.20000000000000001,0.11)</value>
            <value>(&quot;Juancho Hernangomez&quot;,0.40000000000000002,0.40000000000000002)</value>
            <value>(&quot;Juancho Hernangomez&quot;,0.59999999999999998,0.20000000000000001)</value>
            <value>(&quot;Justin Anderson&quot;,1.0,0.33000000000000002)</value>
            <value>(&quot;Justin Anderson&quot;,2.0,0.0)</value>
            <value>(&quot;Justin Champagnie&quot;,0.29999999999999999,0.11)</value>
            <value>(&quot;Justin Holiday&quot;,1.6000000000000001,0.64000000000000001)</value>
            <value>(&quot;Justin Holiday&quot;,1.8,0.37)</value>
            <value>(&quot;Justin Jackson&quot;,0.0,0.0)</value>
            <value>(&quot;Justin Jackson&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Justin Robinson&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Justin Robinson&quot;,1.2,0.0)</value>
            <value>(&quot;Justin Robinson&quot;,1.8,0.20000000000000001)</value>
            <value>(&quot;Justise Winslow&quot;,1.3999999999999999,0.48999999999999999)</value>
            <value>(&quot;Jusuf Nurkic&quot;,2.7999999999999998,0.60999999999999999)</value>
            <value>(&quot;Juwan Morgan&quot;,1.0,0.0)</value>
            <value>(&quot;Kai Jones&quot;,0.20000000000000001,0.0)</value>
            <value>(&quot;Keifer Sykes&quot;,2.0,0.14999999999999999)</value>
            <value>(&quot;Keita Bates-Diop&quot;,0.69999999999999996,0.27000000000000002)</value>
            <value>(&quot;Kelan Martin&quot;,0.0,0.0)</value>
            <value>(&quot;Kelan Martin&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;Keldon Johnson&quot;,1.8999999999999999,0.14000000000000001)</value>
            <value>(&quot;Keljin Blevins&quot;,0.59999999999999998,0.050000000000000003)</value>
            <value>(&quot;Kelly Olynyk&quot;,2.6000000000000001,0.41999999999999998)</value>
            <value>(&quot;Kelly Oubre Jr.&quot;,1.2,0.44)</value>
            <value>(&quot;Kenrich Williams&quot;,2.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Kent Bazemore&quot;,0.90000000000000002,0.22)</value>
            <value>(&quot;Kentavious Caldwell-Pope&quot;,1.8999999999999999,0.32000000000000001)</value>
            <value>(&quot;Kenyon Martin Jr.&quot;,1.3999999999999999,0.41999999999999998)</value>
            <value>(&quot;Keon Johnson&quot;,0.90000000000000002,0.13)</value>
            <value>(&quot;Keon Johnson&quot;,2.1000000000000001,0.33000000000000002)</value>
            <value>(&quot;Kessler Edwards&quot;,0.69999999999999996,0.46999999999999997)</value>
            <value>(&quot;Kevin Huerter&quot;,2.7000000000000002,0.35999999999999999)</value>
            <value>(&quot;Kevin Knox II&quot;,0.20000000000000001,0.080000000000000002)</value>
            <value>(&quot;Kevin Knox II&quot;,0.5,0.0)</value>
            <value>(&quot;Kevin Love&quot;,2.1000000000000001,0.23000000000000001)</value>
            <value>(&quot;Kevin Pangos&quot;,1.3,0.0)</value>
            <value>(&quot;Kevon Looney&quot;,2.0,0.72999999999999998)</value>
            <value>(&quot;Khem Birch&quot;,1.0,0.48999999999999999)</value>
            <value>(&quot;Killian Tillie&quot;,0.59999999999999998,0.41999999999999998)</value>
            <value>(&quot;Kira Lewis Jr.&quot;,2.0,0.040000000000000001)</value>
            <value>(&quot;Klay Thompson&quot;,2.7999999999999998,0.67000000000000004)</value>
            <value>(&quot;Kristaps Porzingis&quot;,2.0,1.3999999999999999)</value>
            <value>(&quot;Kristaps Porzingis&quot;,2.0,1.74)</value>
            <value>(&quot;Kyle Anderson&quot;,2.6000000000000001,0.60999999999999999)</value>
            <value>(&quot;Kyle Guy&quot;,0.90000000000000002,0.059999999999999998)</value>
            <value>(&quot;KZ Okpala&quot;,0.69999999999999996,0.33000000000000002)</value>
            <value>(&quot;Lamar Stevens&quot;,0.59999999999999998,0.26000000000000001)</value>
            <value>(&quot;LaMarcus Aldridge&quot;,0.90000000000000002,1.02)</value>
            <value>(&quot;Lance Stephenson&quot;,1.8,0.0)</value>
            <value>(&quot;Landry Shamet&quot;,1.6000000000000001,0.089999999999999997)</value>
            <value>(&quot;Langston Galloway&quot;,1.3,0.0)</value>
            <value>(&quot;Langston Galloway&quot;,2.2999999999999998,0.0)</value>
            <value>(&quot;Larry Nance Jr.&quot;,2.0,0.34999999999999998)</value>
            <value>(&quot;Lauri Markkanen&quot;,1.3999999999999999,0.54000000000000004)</value>
            <value>(&quot;Leandro Bolmaro&quot;,0.5,0.0)</value>
            <value>(&quot;Lindell Wigginton&quot;,0.5,0.070000000000000007)</value>
            <value>(&quot;Lindy Waters III&quot;,0.69999999999999996,0.42999999999999999)</value>
            <value>(&quot;Lonnie Walker IV&quot;,2.2000000000000002,0.28000000000000003)</value>
            <value>(&quot;Lou Williams&quot;,1.8999999999999999,0.059999999999999998)</value>
            <value>(&quot;Louis King&quot;,0.90000000000000002,0.10000000000000001)</value>
            <value>(&quot;Luguentz Dort&quot;,1.7,0.34999999999999998)</value>
            <value>(&quot;Luka Garza&quot;,0.5,0.13)</value>
            <value>(&quot;Luke Kennard&quot;,2.1000000000000001,0.10000000000000001)</value>
            <value>(&quot;Luke Kornet&quot;,0.0,0.0)</value>
            <value>(&quot;Luke Kornet&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Luke Kornet&quot;,0.5,0.5)</value>
            <value>(&quot;Mac McClung&quot;,0.0,0.0)</value>
            <value>(&quot;Malachi Flynn&quot;,1.6000000000000001,0.10000000000000001)</value>
            <value>(&quot;Malcolm Hill&quot;,0.29999999999999999,0.14000000000000001)</value>
            <value>(&quot;Malcolm Hill&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;Malik Beasley&quot;,1.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;Malik Fitts&quot;,0.0,0.0)</value>
            <value>(&quot;Malik Monk&quot;,2.7000000000000002,0.38)</value>
            <value>(&quot;Malik Newman&quot;,1.0,0.0)</value>
            <value>(&quot;Mamadi Diakite&quot;,0.20000000000000001,0.68999999999999995)</value>
            <value>(&quot;Marcus Garrett&quot;,0.59999999999999998,0.25)</value>
            <value>(&quot;Marcus Morris Sr.&quot;,2.2000000000000002,0.29999999999999999)</value>
            <value>(&quot;Markieff Morris&quot;,1.3,0.080000000000000002)</value>
            <value>(&quot;Marko Simonovic&quot;,0.0,0.11)</value>
            <value>(&quot;Markus Howard&quot;,0.20000000000000001,0.0)</value>
            <value>(&quot;Marquese Chriss&quot;,0.5,0.42999999999999999)</value>
            <value>(&quot;Marvin Bagley III&quot;,0.59999999999999998,0.37)</value>
            <value>(&quot;Marvin Bagley III&quot;,1.1000000000000001,0.35999999999999999)</value>
            <value>(&quot;Mason Jones&quot;,0.0,0.0)</value>
            <value>(&quot;Matisse Thybulle&quot;,1.1000000000000001,1.0800000000000001)</value>
            <value>(&quot;Matt Mooney&quot;,0.0,0.0)</value>
            <value>(&quot;Matt Thomas&quot;,0.5,0.080000000000000002)</value>
            <value>(&quot;Maurice Harkless&quot;,0.5,0.52000000000000002)</value>
            <value>(&quot;Max Strus&quot;,1.3,0.23000000000000001)</value>
            <value>(&quot;Maxi Kleber&quot;,1.2,1.0800000000000001)</value>
            <value>(&quot;McKinley Wright IV&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Micah Potter&quot;,0.0,0.33000000000000002)</value>
            <value>(&quot;Michael Porter Jr.&quot;,1.8999999999999999,0.22)</value>
            <value>(&quot;Mikal Bridges&quot;,2.2999999999999998,0.42999999999999999)</value>
            <value>(&quot;Mike Muscala&quot;,0.5,0.59999999999999998)</value>
            <value>(&quot;Miles McBride&quot;,1.1000000000000001,0.029999999999999999)</value>
            <value>(&quot;Mitchell Robinson&quot;,0.5,1.76)</value>
            <value>(&quot;Miye Oni&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;MJ Walker&quot;,0.5,0.0)</value>
            <value>(&quot;Mo Bamba&quot;,1.1000000000000001,1.7)</value>
            <value>(&quot;Montrezl Harrell&quot;,1.6000000000000001,0.42999999999999999)</value>
            <value>(&quot;Montrezl Harrell&quot;,2.1000000000000001,0.67000000000000004)</value>
            <value>(&quot;Moritz Wagner&quot;,1.2,0.20999999999999999)</value>
            <value>(&quot;Moses Brown&quot;,0.0,0.34999999999999998)</value>
            <value>(&quot;Moses Brown&quot;,0.0,0.5)</value>
            <value>(&quot;Moses Moody&quot;,0.40000000000000002,0.16)</value>
            <value>(&quot;Moses Wright&quot;,1.0,0.0)</value>
            <value>(&quot;Mychal Mulder&quot;,0.20000000000000001,0.070000000000000007)</value>
            <value>(&quot;Myles Powell&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Myles Turner&quot;,1.0,2.8100000000000001)</value>
            <value>(&quot;Naji Marshall&quot;,1.0,0.12)</value>
            <value>(&quot;Nassir Little&quot;,1.3,0.85999999999999999)</value>
            <value>(&quot;Nate Hinton&quot;,0.0,0.0)</value>
            <value>(&quot;Nathan Knight&quot;,0.5,0.20999999999999999)</value>
            <value>(&quot;Naz Reid&quot;,0.90000000000000002,0.97999999999999998)</value>
            <value>(&quot;Neemias Queta&quot;,0.40000000000000002,0.40000000000000002)</value>
            <value>(&quot;Nemanja Bjelica&quot;,2.0,0.34000000000000002)</value>
            <value>(&quot;Nerlens Noel&quot;,0.90000000000000002,1.24)</value>
            <value>(&quot;Nic Claxton&quot;,0.90000000000000002,1.0900000000000001)</value>
            <value>(&quot;Nick Richards&quot;,0.29999999999999999,0.41999999999999998)</value>
            <value>(&quot;Nickeil Alexander-Walker&quot;,0.80000000000000004,0.13)</value>
            <value>(&quot;Nickeil Alexander-Walker&quot;,2.7999999999999998,0.38)</value>
            <value>(&quot;Nicolas Batum&quot;,1.7,0.72999999999999998)</value>
            <value>(&quot;Nik Stauskas&quot;,0.0,0.0)</value>
            <value>(&quot;Nik Stauskas&quot;,0.5,0.0)</value>
            <value>(&quot;Norman Powell&quot;,2.1000000000000001,0.42999999999999999)</value>
            <value>(&quot;Norvel Pelle&quot;,0.0,0.33000000000000002)</value>
            <value>(&quot;Obi Toppin&quot;,0.90000000000000002,0.39000000000000001)</value>
            <value>(&quot;OG Anunoby&quot;,2.6000000000000001,0.56999999999999995)</value>
            <value>(&quot;Olivier Sarr&quot;,0.59999999999999998,0.54000000000000004)</value>
            <value>(&quot;Omer Yurtseven&quot;,0.90000000000000002,0.39000000000000001)</value>
            <value>(&quot;Onyeka Okongwu&quot;,1.1000000000000001,1.29)</value>
            <value>(&quot;Oshae Brissett&quot;,0.80000000000000004,0.46000000000000002)</value>
            <value>(&quot;Otto Porter Jr.&quot;,1.5,0.45000000000000001)</value>
            <value>(&quot;P.J. Dozier&quot;,1.6000000000000001,0.33000000000000002)</value>
            <value>(&quot;P.J. Tucker&quot;,2.1000000000000001,0.20999999999999999)</value>
            <value>(&quot;P.J. Washington&quot;,2.1000000000000001,0.91000000000000003)</value>
            <value>(&quot;Paris Bass&quot;,0.0,0.0)</value>
            <value>(&quot;Pat Connaughton&quot;,1.2,0.26000000000000001)</value>
            <value>(&quot;Patrick Williams&quot;,0.59999999999999998,0.40000000000000002)</value>
            <value>(&quot;Patty Mills&quot;,2.3999999999999999,0.23000000000000001)</value>
            <value>(&quot;Paul Millsap&quot;,0.59999999999999998,0.14000000000000001)</value>
            <value>(&quot;Paul Millsap&quot;,1.0,0.46000000000000002)</value>
            <value>(&quot;Paul Reed&quot;,0.40000000000000002,0.40999999999999998)</value>
            <value>(&quot;Paul Watson&quot;,0.90000000000000002,0.33000000000000002)</value>
            <value>(&quot;Payton Pritchard&quot;,1.7,0.070000000000000007)</value>
            <value>(&quot;Petr Cornelie&quot;,0.20000000000000001,0.080000000000000002)</value>
            <value>(&quot;Precious Achiuwa&quot;,1.1000000000000001,0.56999999999999995)</value>
            <value>(&quot;Quentin Grimes&quot;,1.0,0.25)</value>
            <value>(&quot;Quinndary Weatherspoon&quot;,0.40000000000000002,0.11)</value>
            <value>(&quot;R.J. Hampton&quot;,2.2999999999999998,0.25)</value>
            <value>(&quot;Raul Neto&quot;,3.2000000000000002,0.029999999999999999)</value>
            <value>(&quot;Rayjon Tucker&quot;,1.3,0.0)</value>
            <value>(&quot;Reggie Bullock&quot;,1.1000000000000001,0.23000000000000001)</value>
            <value>(&quot;Reggie Perry&quot;,0.0,0.0)</value>
            <value>(&quot;Reggie Perry&quot;,1.0,0.0)</value>
            <value>(&quot;Richaun Holmes&quot;,1.1000000000000001,0.93000000000000005)</value>
            <value>(&quot;RJ Barrett&quot;,2.8999999999999999,0.26000000000000001)</value>
            <value>(&quot;RJ Nembhard Jr.&quot;,1.1000000000000001,0.0)</value>
            <value>(&quot;Rob Edwards&quot;,0.0,0.0)</value>
            <value>(&quot;Robert Covington&quot;,1.0,1.23)</value>
            <value>(&quot;Robert Covington&quot;,1.3999999999999999,1.3100000000000001)</value>
            <value>(&quot;Robert Woodard II&quot;,0.29999999999999999,0.080000000000000002)</value>
            <value>(&quot;Robin Lopez&quot;,1.5,0.55000000000000004)</value>
            <value>(&quot;Rodney Hood&quot;,0.59999999999999998,0.14000000000000001)</value>
            <value>(&quot;Rodney Hood&quot;,0.80000000000000004,0.10000000000000001)</value>
            <value>(&quot;Rodney McGruder&quot;,0.80000000000000004,0.12)</value>
            <value>(&quot;Romeo Langford&quot;,0.0,0.0)</value>
            <value>(&quot;Romeo Langford&quot;,0.40000000000000002,0.35999999999999999)</value>
            <value>(&quot;Royce O&apos;Neale&quot;,2.6000000000000001,0.45000000000000001)</value>
            <value>(&quot;Rudy Gay&quot;,1.0,0.28999999999999998)</value>
            <value>(&quot;Rudy Gobert&quot;,1.1000000000000001,2.2200000000000002)</value>
            <value>(&quot;Rui Hachimura&quot;,1.0,0.17999999999999999)</value>
            <value>(&quot;Ryan Arcidiacono&quot;,0.0,0.0)</value>
            <value>(&quot;Saben Lee&quot;,2.3999999999999999,0.34000000000000002)</value>
            <value>(&quot;Saddiq Bey&quot;,2.8999999999999999,0.20999999999999999)</value>
            <value>(&quot;Sam Dekker&quot;,0.0,0.0)</value>
            <value>(&quot;Sam Hauser&quot;,0.29999999999999999,0.059999999999999998)</value>
            <value>(&quot;Sam Merrill&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Sandro Mamukelashvili&quot;,0.40000000000000002,0.19)</value>
            <value>(&quot;Santi Aldama&quot;,0.5,0.26000000000000001)</value>
            <value>(&quot;Scottie Lewis&quot;,0.5,0.0)</value>
            <value>(&quot;Scotty Hopson&quot;,1.0,0.0)</value>
            <value>(&quot;Sekou Doumbouya&quot;,0.0,1.0)</value>
            <value>(&quot;Semi Ojeleye&quot;,0.29999999999999999,0.25)</value>
            <value>(&quot;Semi Ojeleye&quot;,0.40000000000000002,0.14000000000000001)</value>
            <value>(&quot;Serge Ibaka&quot;,0.40000000000000002,0.46000000000000002)</value>
            <value>(&quot;Serge Ibaka&quot;,1.0,0.73999999999999999)</value>
            <value>(&quot;Shake Milton&quot;,2.3999999999999999,0.34000000000000002)</value>
            <value>(&quot;Shaq Buchanan&quot;,1.0,0.0)</value>
            <value>(&quot;Shaquille Harrison&quot;,1.5,0.5)</value>
            <value>(&quot;Sharife Cooper&quot;,0.5,0.0)</value>
            <value>(&quot;Skylar Mays&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Solomon Hill&quot;,0.90000000000000002,0.14999999999999999)</value>
            <value>(&quot;Stanley Johnson&quot;,1.3999999999999999,0.37)</value>
            <value>(&quot;Sterling Brown&quot;,0.69999999999999996,0.16)</value>
            <value>(&quot;Svi Mykhailiuk&quot;,0.80000000000000004,0.080000000000000002)</value>
            <value>(&quot;Tacko Fall&quot;,0.20000000000000001,0.55000000000000004)</value>
            <value>(&quot;Taj Gibson&quot;,0.59999999999999998,0.80000000000000004)</value>
            <value>(&quot;Talen Horton-Tucker&quot;,2.7000000000000002,0.53000000000000003)</value>
            <value>(&quot;Taurean Prince&quot;,0.90000000000000002,0.32000000000000001)</value>
            <value>(&quot;Terance Mann&quot;,2.5,0.20999999999999999)</value>
            <value>(&quot;Terence Davis&quot;,1.3,0.37)</value>
            <value>(&quot;Terrence Ross&quot;,1.8999999999999999,0.20000000000000001)</value>
            <value>(&quot;Terry Taylor&quot;,1.2,0.28999999999999998)</value>
            <value>(&quot;Thaddeus Young&quot;,1.5,0.31)</value>
            <value>(&quot;Thaddeus Young&quot;,2.2999999999999998,0.27000000000000002)</value>
            <value>(&quot;Thanasis Antetokounmpo&quot;,0.5,0.22)</value>
            <value>(&quot;Theo Maledon&quot;,1.7,0.12)</value>
            <value>(&quot;Theo Pinson&quot;,0.80000000000000004,0.13)</value>
            <value>(&quot;Thomas Bryant&quot;,1.0,0.81999999999999995)</value>
            <value>(&quot;Tim Frazier&quot;,0.5,0.0)</value>
            <value>(&quot;Tim Hardaway Jr.&quot;,2.2000000000000002,0.14000000000000001)</value>
            <value>(&quot;Timothe Luwawu-Cabarrot&quot;,0.59999999999999998,0.10000000000000001)</value>
            <value>(&quot;Tomas Satoransky&quot;,0.0,0.0)</value>
            <value>(&quot;Tomas Satoransky&quot;,2.3999999999999999,0.029999999999999999)</value>
            <value>(&quot;Tomas Satoransky&quot;,2.3999999999999999,0.38)</value>
            <value>(&quot;Tony Bradley&quot;,0.5,0.67000000000000004)</value>
            <value>(&quot;Tony Snell&quot;,0.5,0.17999999999999999)</value>
            <value>(&quot;Tony Snell&quot;,0.59999999999999998,0.17999999999999999)</value>
            <value>(&quot;Torrey Craig&quot;,1.1000000000000001,0.37)</value>
            <value>(&quot;Torrey Craig&quot;,1.3,0.87)</value>
            <value>(&quot;Trayvon Palmer&quot;,0.0,0.0)</value>
            <value>(&quot;Tre Jones&quot;,2.8999999999999999,0.050000000000000003)</value>
            <value>(&quot;Tre Mann&quot;,1.5,0.17999999999999999)</value>
            <value>(&quot;Tremont Waters&quot;,0.0,0.0)</value>
            <value>(&quot;Trendon Watford&quot;,1.3999999999999999,0.55000000000000004)</value>
            <value>(&quot;Trent Forrest&quot;,1.7,0.059999999999999998)</value>
            <value>(&quot;Trevelin Queen&quot;,0.40000000000000002,0.10000000000000001)</value>
            <value>(&quot;Trevon Scott&quot;,0.0,0.5)</value>
            <value>(&quot;Trevor Ariza&quot;,1.0,0.17999999999999999)</value>
            <value>(&quot;Trey Burke&quot;,1.3999999999999999,0.0)</value>
            <value>(&quot;Trey Lyles&quot;,0.80000000000000004,0.23000000000000001)</value>
            <value>(&quot;Trey Lyles&quot;,1.1000000000000001,0.51000000000000001)</value>
            <value>(&quot;Trey Murphy III&quot;,0.59999999999999998,0.14000000000000001)</value>
            <value>(&quot;Tristan Thompson&quot;,0.5,0.20000000000000001)</value>
            <value>(&quot;Tristan Thompson&quot;,0.5,0.5)</value>
            <value>(&quot;Tristan Thompson&quot;,0.59999999999999998,0.40000000000000002)</value>
            <value>(&quot;Troy Brown Jr.&quot;,1.0,0.070000000000000007)</value>
            <value>(&quot;Ty Jerome&quot;,2.2999999999999998,0.10000000000000001)</value>
            <value>(&quot;Tyler Cook&quot;,0.20000000000000001,0.20999999999999999)</value>
            <value>(&quot;Tyler Hall&quot;,0.0,0.0)</value>
            <value>(&quot;Tyler Johnson&quot;,0.69999999999999996,0.33000000000000002)</value>
            <value>(&quot;Tyler Johnson&quot;,1.7,0.67000000000000004)</value>
            <value>(&quot;Tyrell Terry&quot;,0.0,0.0)</value>
            <value>(&quot;Tyrone Wallace&quot;,0.0,0.5)</value>
            <value>(&quot;Udoka Azubuike&quot;,0.0,0.65000000000000002)</value>
            <value>(&quot;Udonis Haslem&quot;,0.29999999999999999,0.11)</value>
            <value>(&quot;Usman Garuba&quot;,0.5,0.44)</value>
            <value>(&quot;Vernon Carey Jr.&quot;,0.0,0.0)</value>
            <value>(&quot;Victor Oladipo&quot;,2.7999999999999998,0.25)</value>
            <value>(&quot;Vit Krejci&quot;,0.90000000000000002,0.12)</value>
            <value>(&quot;Vlatko Cancar&quot;,0.90000000000000002,0.20999999999999999)</value>
            <value>(&quot;Wayne Ellington&quot;,0.69999999999999996,0.10000000000000001)</value>
            <value>(&quot;Wayne Selden&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Wendell Carter Jr.&quot;,2.7999999999999998,0.70999999999999996)</value>
            <value>(&quot;Wenyen Gabriel&quot;,0.0,0.0)</value>
            <value>(&quot;Wenyen Gabriel&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;Wenyen Gabriel&quot;,0.5,0.17000000000000001)</value>
            <value>(&quot;Wes Iwundu&quot;,0.0,0.0)</value>
            <value>(&quot;Wesley Matthews&quot;,0.69999999999999996,0.13)</value>
            <value>(&quot;Willie Cauley-Stein&quot;,0.5,0.0)</value>
            <value>(&quot;Willie Cauley-Stein&quot;,0.5,0.17000000000000001)</value>
            <value>(&quot;Willy Hernangomez&quot;,1.2,0.40999999999999998)</value>
            <value>(&quot;Xavier Moon&quot;,1.7,0.17000000000000001)</value>
            <value>(&quot;Xavier Sneed&quot;,0.0,0.0)</value>
            <value>(&quot;Xavier Tillman&quot;,0.90000000000000002,0.33000000000000002)</value>
            <value>(&quot;Yuta Watanabe&quot;,0.59999999999999998,0.46999999999999997)</value>
            <value>(&quot;Yves Pons&quot;,0.0,0.0)</value>
            <value>(&quot;Zach Collins&quot;,1.8,0.75)</value>
            <value>(&quot;Zeke Nnaji&quot;,0.40000000000000002,0.33000000000000002)</value>
            <value>(&quot;Ziaire Williams&quot;,0.90000000000000002,0.16)</value>
            <value>(&quot;Zylan Cheatham&quot;,0.0,0.0)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;Aaron Holiday&quot;,3.8999999999999999,0.0)</value>
            <value>(&quot;Al Horford&quot;,3.2999999999999998,1.3300000000000001)</value>
            <value>(&quot;Alex Caruso&quot;,3.7000000000000002,0.45000000000000001)</value>
            <value>(&quot;Andre Iguodala&quot;,3.7999999999999998,0.81000000000000005)</value>
            <value>(&quot;Anfernee Simons&quot;,3.8999999999999999,0.11)</value>
            <value>(&quot;Anthony Davis&quot;,2.8999999999999999,2.3199999999999998)</value>
            <value>(&quot;Anthony Edwards&quot;,3.7000000000000002,0.71999999999999997)</value>
            <value>(&quot;Ayo Dosunmu&quot;,3.2999999999999998,0.41999999999999998)</value>
            <value>(&quot;Bam Adebayo&quot;,3.5,0.80000000000000004)</value>
            <value>(&quot;Bogdan Bogdanovic&quot;,3.2000000000000002,0.25)</value>
            <value>(&quot;Brad Wanamaker&quot;,7.0,0.0)</value>
            <value>(&quot;Bradley Beal&quot;,6.5999999999999996,0.38)</value>
            <value>(&quot;Brandon Goodwin&quot;,3.2999999999999998,0.040000000000000001)</value>
            <value>(&quot;Brandon Ingram&quot;,5.5,0.46000000000000002)</value>
            <value>(&quot;Buddy Hield&quot;,5.4000000000000004,0.28999999999999998)</value>
            <value>(&quot;Cade Cunningham&quot;,5.2999999999999998,0.65000000000000002)</value>
            <value>(&quot;Cameron Payne&quot;,4.7000000000000002,0.31)</value>
            <value>(&quot;Caris LeVert&quot;,4.2000000000000002,0.33000000000000002)</value>
            <value>(&quot;Caris LeVert&quot;,4.4000000000000004,0.46000000000000002)</value>
            <value>(&quot;Chris Paul&quot;,10.699999999999999,0.31)</value>
            <value>(&quot;CJ McCollum&quot;,4.5,0.57999999999999996)</value>
            <value>(&quot;CJ McCollum&quot;,6.7999999999999998,0.0)</value>
            <value>(&quot;Cole Anthony&quot;,5.7000000000000002,0.28000000000000003)</value>
            <value>(&quot;Cory Joseph&quot;,3.7999999999999998,0.27000000000000002)</value>
            <value>(&quot;D&apos;Angelo Russell&quot;,7.0999999999999996,0.39000000000000001)</value>
            <value>(&quot;Damian Lillard&quot;,7.2999999999999998,0.38)</value>
            <value>(&quot;Darius Garland&quot;,8.3000000000000007,0.11)</value>
            <value>(&quot;Davion Mitchell&quot;,3.2999999999999998,0.27000000000000002)</value>
            <value>(&quot;De&apos;Aaron Fox&quot;,5.5999999999999996,0.41999999999999998)</value>
            <value>(&quot;Dejounte Murray&quot;,9.4000000000000004,0.33000000000000002)</value>
            <value>(&quot;DeMar DeRozan&quot;,5.2000000000000002,0.31)</value>
            <value>(&quot;Dennis Schroder&quot;,4.2000000000000002,0.10000000000000001)</value>
            <value>(&quot;Dennis Schroder&quot;,7.0999999999999996,0.11)</value>
            <value>(&quot;Dennis Smith Jr.&quot;,3.6000000000000001,0.32000000000000001)</value>
            <value>(&quot;Derrick Rose&quot;,4.0,0.46000000000000002)</value>
            <value>(&quot;Derrick Walton Jr.&quot;,7.0,1.3300000000000001)</value>
            <value>(&quot;Derrick White&quot;,3.0,0.93000000000000005)</value>
            <value>(&quot;Derrick White&quot;,5.5999999999999996,0.85999999999999999)</value>
            <value>(&quot;Devin Booker&quot;,4.9000000000000004,0.41999999999999998)</value>
            <value>(&quot;Devonte&apos; Graham&quot;,4.4000000000000004,0.14999999999999999)</value>
            <value>(&quot;Domantas Sabonis&quot;,5.0,0.46999999999999997)</value>
            <value>(&quot;Domantas Sabonis&quot;,5.7999999999999998,0.31)</value>
            <value>(&quot;Donovan Mitchell&quot;,5.5,0.20999999999999999)</value>
            <value>(&quot;Draymond Green&quot;,7.2000000000000002,1.1399999999999999)</value>
            <value>(&quot;Eric Bledsoe&quot;,4.2000000000000002,0.34999999999999998)</value>
            <value>(&quot;Evan Mobley&quot;,2.6000000000000001,1.6599999999999999)</value>
            <value>(&quot;Facundo Campazzo&quot;,3.5,0.37)</value>
            <value>(&quot;Fred VanVleet&quot;,6.7000000000000002,0.52000000000000002)</value>
            <value>(&quot;Gabe Vincent&quot;,3.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Giannis Antetokounmpo&quot;,5.7999999999999998,1.3600000000000001)</value>
            <value>(&quot;Goran Dragic&quot;,4.5,0.10000000000000001)</value>
            <value>(&quot;Gordon Hayward&quot;,3.6000000000000001,0.46000000000000002)</value>
            <value>(&quot;Greg Monroe&quot;,3.7000000000000002,1.3300000000000001)</value>
            <value>(&quot;Isaiah Thomas&quot;,4.0,0.0)</value>
            <value>(&quot;Ish Smith&quot;,5.0999999999999996,0.5)</value>
            <value>(&quot;Ja Morant&quot;,6.7000000000000002,0.38)</value>
            <value>(&quot;Jae&apos;Sean Tate&quot;,3.0,0.55000000000000004)</value>
            <value>(&quot;Jakob Poeltl&quot;,2.8999999999999999,1.72)</value>
            <value>(&quot;Jalen Brunson&quot;,5.2000000000000002,0.050000000000000003)</value>
            <value>(&quot;Jalen Suggs&quot;,4.4000000000000004,0.39000000000000001)</value>
            <value>(&quot;James Harden&quot;,10.199999999999999,0.69999999999999996)</value>
            <value>(&quot;James Harden&quot;,10.6,0.11)</value>
            <value>(&quot;Jaylen Brown&quot;,3.3999999999999999,0.28999999999999998)</value>
            <value>(&quot;Jayson Tatum&quot;,4.2000000000000002,0.65000000000000002)</value>
            <value>(&quot;Jimmy Butler&quot;,5.5999999999999996,0.52000000000000002)</value>
            <value>(&quot;Joe Ingles&quot;,3.5,0.11)</value>
            <value>(&quot;Joel Embiid&quot;,4.4000000000000004,1.45)</value>
            <value>(&quot;Jordan Poole&quot;,3.6000000000000001,0.29999999999999999)</value>
            <value>(&quot;Josh Giddey&quot;,6.4000000000000004,0.37)</value>
            <value>(&quot;Josh Hart&quot;,4.0999999999999996,0.17999999999999999)</value>
            <value>(&quot;Josh Hart&quot;,4.0999999999999996,0.27000000000000002)</value>
            <value>(&quot;Jrue Holiday&quot;,6.7000000000000002,0.46000000000000002)</value>
            <value>(&quot;Julius Randle&quot;,5.2000000000000002,0.56999999999999995)</value>
            <value>(&quot;Justise Winslow&quot;,3.0,0.63)</value>
            <value>(&quot;Karl-Anthony Towns&quot;,3.7000000000000002,1.1599999999999999)</value>
            <value>(&quot;Kemba Walker&quot;,3.5,0.19)</value>
            <value>(&quot;Kevin Durant&quot;,6.0,0.88)</value>
            <value>(&quot;Kevin Porter Jr.&quot;,6.0,0.34999999999999998)</value>
            <value>(&quot;Khris Middleton&quot;,5.4000000000000004,0.26000000000000001)</value>
            <value>(&quot;Killian Hayes&quot;,4.2999999999999998,0.48999999999999999)</value>
            <value>(&quot;Kris Dunn&quot;,5.0,0.0)</value>
            <value>(&quot;Kyle Kuzma&quot;,3.3999999999999999,0.85999999999999999)</value>
            <value>(&quot;Kyle Lowry&quot;,7.7999999999999998,0.29999999999999999)</value>
            <value>(&quot;Kyrie Irving&quot;,5.2999999999999998,0.68000000000000005)</value>
            <value>(&quot;LaMelo Ball&quot;,7.4000000000000004,0.42999999999999999)</value>
            <value>(&quot;Lance Stephenson&quot;,3.7999999999999998,0.11)</value>
            <value>(&quot;LeBron James&quot;,6.2000000000000002,1.0800000000000001)</value>
            <value>(&quot;Lonzo Ball&quot;,5.0999999999999996,0.89000000000000001)</value>
            <value>(&quot;Luka Doncic&quot;,8.5999999999999996,0.56999999999999995)</value>
            <value>(&quot;Malcolm Brogdon&quot;,5.9000000000000004,0.37)</value>
            <value>(&quot;Marcus Smart&quot;,5.5999999999999996,0.27000000000000002)</value>
            <value>(&quot;Markelle Fultz&quot;,5.0999999999999996,0.38)</value>
            <value>(&quot;Mason Plumlee&quot;,3.2000000000000002,0.73999999999999999)</value>
            <value>(&quot;Mike Conley&quot;,5.2999999999999998,0.33000000000000002)</value>
            <value>(&quot;Miles Bridges&quot;,3.7999999999999998,0.88)</value>
            <value>(&quot;Monte Morris&quot;,4.2999999999999998,0.17000000000000001)</value>
            <value>(&quot;Nikola Jokic&quot;,8.0999999999999996,0.83999999999999997)</value>
            <value>(&quot;Nikola Vucevic&quot;,3.3999999999999999,1.0700000000000001)</value>
            <value>(&quot;Norman Powell&quot;,4.0,0.67000000000000004)</value>
            <value>(&quot;Pascal Siakam&quot;,5.0999999999999996,0.64000000000000001)</value>
            <value>(&quot;Patrick Beverley&quot;,4.7999999999999998,0.93999999999999995)</value>
            <value>(&quot;Paul George&quot;,5.5,0.38)</value>
            <value>(&quot;Rajon Rondo&quot;,3.7000000000000002,0.28000000000000003)</value>
            <value>(&quot;Rajon Rondo&quot;,4.5999999999999996,0.059999999999999998)</value>
            <value>(&quot;Reggie Jackson&quot;,4.9000000000000004,0.17999999999999999)</value>
            <value>(&quot;Ricky Rubio&quot;,6.5999999999999996,0.20999999999999999)</value>
            <value>(&quot;Robert Williams III&quot;,2.0,2.21)</value>
            <value>(&quot;Russell Westbrook&quot;,7.0,0.26000000000000001)</value>
            <value>(&quot;Scottie Barnes&quot;,3.2999999999999998,0.81999999999999995)</value>
            <value>(&quot;Seth Curry&quot;,3.2000000000000002,0.17999999999999999)</value>
            <value>(&quot;Seth Curry&quot;,4.0,0.23999999999999999)</value>
            <value>(&quot;Shai Gilgeous-Alexander&quot;,5.9000000000000004,0.80000000000000004)</value>
            <value>(&quot;Spencer Dinwiddie&quot;,4.2999999999999998,0.17000000000000001)</value>
            <value>(&quot;Spencer Dinwiddie&quot;,5.7999999999999998,0.16)</value>
            <value>(&quot;Stephen Curry&quot;,6.2999999999999998,0.35999999999999999)</value>
            <value>(&quot;Steven Adams&quot;,3.2999999999999998,0.76000000000000001)</value>
            <value>(&quot;T.J. McConnell&quot;,4.7999999999999998,0.38)</value>
            <value>(&quot;Terry Rozier&quot;,4.4000000000000004,0.34000000000000002)</value>
            <value>(&quot;Tim Frazier&quot;,3.2999999999999998,0.10000000000000001)</value>
            <value>(&quot;Tobias Harris&quot;,3.3999999999999999,0.64000000000000001)</value>
            <value>(&quot;Trae Young&quot;,9.5,0.11)</value>
            <value>(&quot;Tremont Waters&quot;,3.5,0.0)</value>
            <value>(&quot;Tyler Herro&quot;,3.7999999999999998,0.14000000000000001)</value>
            <value>(&quot;Tyrese Haliburton&quot;,7.4000000000000004,0.67000000000000004)</value>
            <value>(&quot;Tyrese Haliburton&quot;,9.4000000000000004,0.5)</value>
            <value>(&quot;Tyrese Maxey&quot;,4.2999999999999998,0.44)</value>
            <value>(&quot;Tyus Jones&quot;,4.0999999999999996,0.029999999999999999)</value>
            <value>(&quot;Will Barton&quot;,3.7999999999999998,0.47999999999999998)</value>
            <value>(&quot;Zach LaVine&quot;,4.5,0.38)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters) (3)]' parent-model='[AnalyticModel:{fa293136-c960-454d-846e-72e7832b3c48}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. 3]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;Aaron Gordon&quot;,2.5,0.56000000000000005)</value>
            <value>(&quot;Aaron Henry&quot;,0.0,0.33000000000000002)</value>
            <value>(&quot;Aaron Holiday&quot;,1.8999999999999999,0.22)</value>
            <value>(&quot;Aaron Nesmith&quot;,0.40000000000000002,0.089999999999999997)</value>
            <value>(&quot;Aaron Wiggins&quot;,1.1000000000000001,0.22)</value>
            <value>(&quot;Abdel Nader&quot;,0.5,0.28999999999999998)</value>
            <value>(&quot;Ade Murkey&quot;,0.0,0.0)</value>
            <value>(&quot;Admiral Schofield&quot;,0.59999999999999998,0.13)</value>
            <value>(&quot;Ahmad Caver&quot;,0.0,0.0)</value>
            <value>(&quot;Alec Burks&quot;,2.7999999999999998,0.32000000000000001)</value>
            <value>(&quot;Aleem Ford&quot;,0.40000000000000002,0.0)</value>
            <value>(&quot;Aleksej Pokusevski&quot;,1.5,0.57999999999999996)</value>
            <value>(&quot;Alex Len&quot;,1.2,0.70999999999999996)</value>
            <value>(&quot;Alfonzo McKinnie&quot;,0.29999999999999999,0.17999999999999999)</value>
            <value>(&quot;Alize Johnson&quot;,0.0,0.0)</value>
            <value>(&quot;Alize Johnson&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Alize Johnson&quot;,0.5,0.0)</value>
            <value>(&quot;Alperen Sengun&quot;,2.3999999999999999,0.93000000000000005)</value>
            <value>(&quot;Amir Coffey&quot;,1.8,0.20000000000000001)</value>
            <value>(&quot;Andre Drummond&quot;,1.7,1.0)</value>
            <value>(&quot;Andre Drummond&quot;,2.0,0.92000000000000004)</value>
            <value>(&quot;Andrew Wiggins&quot;,2.2999999999999998,0.76000000000000001)</value>
            <value>(&quot;Anthony Gill&quot;,0.5,0.20999999999999999)</value>
            <value>(&quot;Anthony Lamb&quot;,1.0,0.0)</value>
            <value>(&quot;Armoni Brooks&quot;,0.59999999999999998,0.20000000000000001)</value>
            <value>(&quot;Armoni Brooks&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Arnoldas Kulboka&quot;,0.0,0.0)</value>
            <value>(&quot;Austin Reaves&quot;,1.3,0.35999999999999999)</value>
            <value>(&quot;Austin Rivers&quot;,1.3,0.089999999999999997)</value>
            <value>(&quot;Avery Bradley&quot;,0.80000000000000004,0.16)</value>
            <value>(&quot;Ben McLemore&quot;,0.90000000000000002,0.12)</value>
            <value>(&quot;Bismack Biyombo&quot;,0.69999999999999996,0.77000000000000002)</value>
            <value>(&quot;BJ Johnson&quot;,0.0,0.25)</value>
            <value>(&quot;Blake Griffin&quot;,1.8999999999999999,0.25)</value>
            <value>(&quot;Boban Marjanovic&quot;,0.10000000000000001,0.11)</value>
            <value>(&quot;Bobby Portis&quot;,1.2,0.80000000000000004)</value>
            <value>(&quot;Bojan Bogdanovic&quot;,1.7,0.02)</value>
            <value>(&quot;Bol Bol&quot;,0.40000000000000002,0.14999999999999999)</value>
            <value>(&quot;Bones Hyland&quot;,2.2999999999999998,0.23000000000000001)</value>
            <value>(&quot;Brad Wanamaker&quot;,2.2000000000000002,0.27000000000000002)</value>
            <value>(&quot;Brandon Boston Jr.&quot;,0.90000000000000002,0.23999999999999999)</value>
            <value>(&quot;Brandon Clarke&quot;,1.3,1.0900000000000001)</value>
            <value>(&quot;Brandon Knight&quot;,2.7000000000000002,0.0)</value>
            <value>(&quot;Brandon Williams&quot;,2.3999999999999999,0.45000000000000001)</value>
            <value>(&quot;Braxton Key&quot;,0.5,0.0)</value>
            <value>(&quot;Brodric Thomas&quot;,0.69999999999999996,0.11)</value>
            <value>(&quot;Brook Lopez&quot;,0.29999999999999999,1.0)</value>
            <value>(&quot;Bruce Brown&quot;,1.8,0.52000000000000002)</value>
            <value>(&quot;Bruno Fernando&quot;,0.0,0.59999999999999998)</value>
            <value>(&quot;Bruno Fernando&quot;,0.20000000000000001,0.14999999999999999)</value>
            <value>(&quot;Bryn Forbes&quot;,1.0,0.070000000000000007)</value>
            <value>(&quot;Bryn Forbes&quot;,1.0,0.080000000000000002)</value>
            <value>(&quot;Buddy Hield&quot;,1.8999999999999999,0.27000000000000002)</value>
            <value>(&quot;Caleb Martin&quot;,1.1000000000000001,0.47999999999999998)</value>
            <value>(&quot;Cam Reddish&quot;,0.69999999999999996,0.27000000000000002)</value>
            <value>(&quot;Cam Reddish&quot;,1.1000000000000001,0.32000000000000001)</value>
            <value>(&quot;Cam Thomas&quot;,1.3,0.14000000000000001)</value>
            <value>(&quot;Cameron Johnson&quot;,1.5,0.23000000000000001)</value>
            <value>(&quot;Cameron McGriff&quot;,1.0,0.33000000000000002)</value>
            <value>(&quot;Cameron Oliver&quot;,1.5,0.5)</value>
            <value>(&quot;Carlik Jones&quot;,0.0,0.0)</value>
            <value>(&quot;Carlik Jones&quot;,1.7,0.0)</value>
            <value>(&quot;Carmelo Anthony&quot;,1.0,0.81999999999999995)</value>
            <value>(&quot;Cassius Stanley&quot;,0.40000000000000002,0.22)</value>
            <value>(&quot;Cassius Winston&quot;,1.0,0.0)</value>
            <value>(&quot;Cat Barber&quot;,1.0,0.0)</value>
            <value>(&quot;Cedi Osman&quot;,2.1000000000000001,0.14000000000000001)</value>
            <value>(&quot;Chandler Hutchison&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Charles Bassey&quot;,0.29999999999999999,0.73999999999999999)</value>
            <value>(&quot;Charlie Brown Jr.&quot;,0.29999999999999999,0.19)</value>
            <value>(&quot;Charlie Brown Jr.&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;Chaundee Brown Jr.&quot;,0.0,0.0)</value>
            <value>(&quot;Chaundee Brown Jr.&quot;,1.3,0.0)</value>
            <value>(&quot;Cheick Diallo&quot;,0.0,0.0)</value>
            <value>(&quot;Chimezie Metu&quot;,1.1000000000000001,0.53000000000000003)</value>
            <value>(&quot;Chris Boucher&quot;,0.29999999999999999,0.96999999999999997)</value>
            <value>(&quot;Chris Chiozza&quot;,1.8999999999999999,0.0)</value>
            <value>(&quot;Chris Duarte&quot;,2.1000000000000001,0.17999999999999999)</value>
            <value>(&quot;Chris Silva&quot;,0.0,0.0)</value>
            <value>(&quot;Chris Silva&quot;,0.80000000000000004,0.11)</value>
            <value>(&quot;Christian Wood&quot;,2.2000000000000002,0.94999999999999996)</value>
            <value>(&quot;Chuma Okeke&quot;,1.7,0.56000000000000005)</value>
            <value>(&quot;CJ Elleby&quot;,1.2,0.25)</value>
            <value>(&quot;CJ Miles&quot;,0.0,0.0)</value>
            <value>(&quot;Clint Capela&quot;,1.3,1.3400000000000001)</value>
            <value>(&quot;Coby White&quot;,3.0,0.22)</value>
            <value>(&quot;Cody Martin&quot;,2.3999999999999999,0.46000000000000002)</value>
            <value>(&quot;Cody Zeller&quot;,0.80000000000000004,0.22)</value>
            <value>(&quot;Collin Sexton&quot;,2.1000000000000001,0.0)</value>
            <value>(&quot;Corey Kispert&quot;,1.0,0.32000000000000001)</value>
            <value>(&quot;Craig Sword&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;D.J. Augustin&quot;,1.8999999999999999,0.0)</value>
            <value>(&quot;D.J. Augustin&quot;,2.2000000000000002,0.0)</value>
            <value>(&quot;D.J. Wilson&quot;,1.3,0.25)</value>
            <value>(&quot;Daishen Nix&quot;,1.6000000000000001,0.0)</value>
            <value>(&quot;Dakota Mathias&quot;,0.20000000000000001,0.0)</value>
            <value>(&quot;Dalano Banton&quot;,1.6000000000000001,0.17000000000000001)</value>
            <value>(&quot;Damian Jones&quot;,1.1000000000000001,0.70999999999999996)</value>
            <value>(&quot;Damion Lee&quot;,0.90000000000000002,0.089999999999999997)</value>
            <value>(&quot;Damyean Dotson&quot;,0.5,0.0)</value>
            <value>(&quot;Daniel Gafford&quot;,1.0,1.46)</value>
            <value>(&quot;Daniel Oturu&quot;,0.0,0.67000000000000004)</value>
            <value>(&quot;Daniel Theis&quot;,0.80000000000000004,0.65000000000000002)</value>
            <value>(&quot;Daniel Theis&quot;,0.90000000000000002,0.89000000000000001)</value>
            <value>(&quot;Danilo Gallinari&quot;,1.3999999999999999,0.19)</value>
            <value>(&quot;Danny Green&quot;,1.0,0.63)</value>
            <value>(&quot;Danuel House Jr.&quot;,0.0,0.0)</value>
            <value>(&quot;Danuel House Jr.&quot;,1.2,0.31)</value>
            <value>(&quot;Danuel House Jr.&quot;,1.2,0.41999999999999998)</value>
            <value>(&quot;DaQuan Jeffries&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Darius Bazley&quot;,1.3999999999999999,1.0800000000000001)</value>
            <value>(&quot;Darren Collison&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;David Duke Jr.&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;David Johnson&quot;,0.0,0.0)</value>
            <value>(&quot;David Nwaba&quot;,0.80000000000000004,0.42999999999999999)</value>
            <value>(&quot;Davis Bertans&quot;,0.5,0.17999999999999999)</value>
            <value>(&quot;Davis Bertans&quot;,0.5,0.25)</value>
            <value>(&quot;Davon Reed&quot;,1.0,0.16)</value>
            <value>(&quot;Day&apos;Ron Sharpe&quot;,0.5,0.46999999999999997)</value>
            <value>(&quot;De&apos;Andre Hunter&quot;,1.2,0.37)</value>
            <value>(&quot;De&apos;Anthony Melton&quot;,2.7000000000000002,0.56000000000000005)</value>
            <value>(&quot;Dean Wade&quot;,1.0,0.14000000000000001)</value>
            <value>(&quot;Deandre Ayton&quot;,1.3999999999999999,0.72999999999999998)</value>
            <value>(&quot;DeAndre Jordan&quot;,0.40000000000000002,0.81000000000000005)</value>
            <value>(&quot;DeAndre Jordan&quot;,0.59999999999999998,0.59999999999999998)</value>
            <value>(&quot;DeAndre&apos; Bembry&quot;,0.80000000000000004,0.0)</value>
            <value>(&quot;DeAndre&apos; Bembry&quot;,1.3,0.52000000000000002)</value>
            <value>(&quot;Deividas Sirvydis&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;DeJon Jarreau&quot;,0.0,0.0)</value>
            <value>(&quot;Delon Wright&quot;,2.2999999999999998,0.22)</value>
            <value>(&quot;DeMarcus Cousins&quot;,1.1000000000000001,0.46999999999999997)</value>
            <value>(&quot;DeMarcus Cousins&quot;,1.8,0.46999999999999997)</value>
            <value>(&quot;Deni Avdija&quot;,1.7,0.54000000000000004)</value>
            <value>(&quot;Denzel Valentine&quot;,0.0,0.0)</value>
            <value>(&quot;Denzel Valentine&quot;,0.5,0.0)</value>
            <value>(&quot;Derrick Favors&quot;,0.59999999999999998,0.31)</value>
            <value>(&quot;Derrick Jones Jr.&quot;,0.5,0.69999999999999996)</value>
            <value>(&quot;Desmond Bane&quot;,2.6000000000000001,0.40999999999999998)</value>
            <value>(&quot;Devin Vassell&quot;,1.8,0.67000000000000004)</value>
            <value>(&quot;Devon Dotson&quot;,1.3999999999999999,0.0)</value>
            <value>(&quot;Devontae Cacok&quot;,0.5,0.64000000000000001)</value>
            <value>(&quot;Dewayne Dedmon&quot;,0.80000000000000004,0.63)</value>
            <value>(&quot;Didi Louzada&quot;,0.5,0.0)</value>
            <value>(&quot;Dillon Brooks&quot;,2.7999999999999998,0.22)</value>
            <value>(&quot;Donte DiVincenzo&quot;,1.7,0.17999999999999999)</value>
            <value>(&quot;Donte DiVincenzo&quot;,3.0,0.14000000000000001)</value>
            <value>(&quot;Dorian Finney-Smith&quot;,1.8999999999999999,0.48999999999999999)</value>
            <value>(&quot;Doug McDermott&quot;,1.3,0.12)</value>
            <value>(&quot;Drew Eubanks&quot;,1.0,0.60999999999999999)</value>
            <value>(&quot;Drew Eubanks&quot;,1.6000000000000001,0.33000000000000002)</value>
            <value>(&quot;Duane Washington Jr.&quot;,1.8,0.050000000000000003)</value>
            <value>(&quot;Duncan Robinson&quot;,1.7,0.17999999999999999)</value>
            <value>(&quot;Dwight Howard&quot;,0.59999999999999998,0.63)</value>
            <value>(&quot;Dwight Powell&quot;,1.1000000000000001,0.45000000000000001)</value>
            <value>(&quot;Dylan Windler&quot;,0.69999999999999996,0.050000000000000003)</value>
            <value>(&quot;Ed Davis&quot;,0.20000000000000001,0.32000000000000001)</value>
            <value>(&quot;Elfrid Payton&quot;,2.0,0.089999999999999997)</value>
            <value>(&quot;Elijah Hughes&quot;,0.40000000000000002,0.070000000000000007)</value>
            <value>(&quot;Elijah Hughes&quot;,0.5,0.27000000000000002)</value>
            <value>(&quot;Emanuel Terry&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Emmanuel Mudiay&quot;,2.0,0.0)</value>
            <value>(&quot;Enes Freedom&quot;,0.20000000000000001,0.40000000000000002)</value>
            <value>(&quot;Eric Gordon&quot;,2.7999999999999998,0.33000000000000002)</value>
            <value>(&quot;Eric Paschall&quot;,0.59999999999999998,0.080000000000000002)</value>
            <value>(&quot;Eugene Omoruyi&quot;,0.5,0.0)</value>
            <value>(&quot;Evan Fournier&quot;,1.8999999999999999,0.27000000000000002)</value>
            <value>(&quot;Frank Jackson&quot;,1.0,0.20000000000000001)</value>
            <value>(&quot;Frank Kaminsky&quot;,1.3999999999999999,0.78000000000000003)</value>
            <value>(&quot;Frank Ntilikina&quot;,1.1000000000000001,0.12)</value>
            <value>(&quot;Franz Wagner&quot;,2.8999999999999999,0.44)</value>
            <value>(&quot;Freddie Gillespie&quot;,0.59999999999999998,1.0)</value>
            <value>(&quot;Furkan Korkmaz&quot;,2.1000000000000001,0.12)</value>
            <value>(&quot;Gabriel Deck&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Garrett Temple&quot;,1.3,0.40999999999999998)</value>
            <value>(&quot;Garrison Mathews&quot;,1.0,0.27000000000000002)</value>
            <value>(&quot;Gary Clark&quot;,0.40000000000000002,0.22)</value>
            <value>(&quot;Gary Harris&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Gary Payton II&quot;,0.80000000000000004,0.29999999999999999)</value>
            <value>(&quot;Gary Trent Jr.&quot;,2.0,0.27000000000000002)</value>
            <value>(&quot;George Hill&quot;,2.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;George King&quot;,0.0,0.0)</value>
            <value>(&quot;Georges Niang&quot;,1.3999999999999999,0.16)</value>
            <value>(&quot;Georgios Kalaitzakis&quot;,0.0,0.11)</value>
            <value>(&quot;Goga Bitadze&quot;,0.90000000000000002,0.73999999999999999)</value>
            <value>(&quot;Goran Dragic&quot;,1.8,0.20000000000000001)</value>
            <value>(&quot;Gorgui Dieng&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;Grant Williams&quot;,1.0,0.68000000000000005)</value>
            <value>(&quot;Grayson Allen&quot;,1.6000000000000001,0.26000000000000001)</value>
            <value>(&quot;Greg Brown III&quot;,0.40000000000000002,0.44)</value>
            <value>(&quot;Greg Monroe&quot;,0.40000000000000002,0.40000000000000002)</value>
            <value>(&quot;Greg Monroe&quot;,0.5,0.5)</value>
            <value>(&quot;Hamidou Diallo&quot;,1.3,0.28999999999999998)</value>
            <value>(&quot;Harrison Barnes&quot;,2.5,0.20000000000000001)</value>
            <value>(&quot;Hassan Whiteside&quot;,0.40000000000000002,1.49)</value>
            <value>(&quot;Hassani Gravett&quot;,2.5,0.13)</value>
            <value>(&quot;Haywood Highsmith&quot;,0.10000000000000001,0.14999999999999999)</value>
            <value>(&quot;Herbert Jones&quot;,2.2000000000000002,0.80000000000000004)</value>
            <value>(&quot;Ignas Brazdeikis&quot;,0.69999999999999996,0.059999999999999998)</value>
            <value>(&quot;Immanuel Quickley&quot;,3.1000000000000001,0.050000000000000003)</value>
            <value>(&quot;Isaac Bonga&quot;,0.29999999999999999,0.13)</value>
            <value>(&quot;Isaac Okoro&quot;,1.8,0.29999999999999999)</value>
            <value>(&quot;Isaiah Hartenstein&quot;,2.0,1.1200000000000001)</value>
            <value>(&quot;Isaiah Jackson&quot;,0.29999999999999999,1.3700000000000001)</value>
            <value>(&quot;Isaiah Joe&quot;,0.69999999999999996,0.059999999999999998)</value>
            <value>(&quot;Isaiah Livers&quot;,0.90000000000000002,0.27000000000000002)</value>
            <value>(&quot;Isaiah Roby&quot;,1.1000000000000001,0.5)</value>
            <value>(&quot;Isaiah Stewart&quot;,1.1000000000000001,1.1399999999999999)</value>
            <value>(&quot;Isaiah Thomas&quot;,1.5,0.5)</value>
            <value>(&quot;Isaiah Thomas&quot;,2.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Isaiah Todd&quot;,0.29999999999999999,0.20000000000000001)</value>
            <value>(&quot;Ish Smith&quot;,2.6000000000000001,0.27000000000000002)</value>
            <value>(&quot;Ish Wainright&quot;,0.29999999999999999,0.16)</value>
            <value>(&quot;Ivica Zubac&quot;,1.5,1.03)</value>
            <value>(&quot;Jabari Parker&quot;,0.5,0.080000000000000002)</value>
            <value>(&quot;Jaden McDaniels&quot;,1.1000000000000001,0.78000000000000003)</value>
            <value>(&quot;Jaden Springer&quot;,0.0,1.0)</value>
            <value>(&quot;Jae Crowder&quot;,1.8,0.41999999999999998)</value>
            <value>(&quot;Jahmi&apos;us Ramsey&quot;,0.40000000000000002,0.050000000000000003)</value>
            <value>(&quot;Jaime Echenique&quot;,0.0,0.0)</value>
            <value>(&quot;Jake Layman&quot;,0.29999999999999999,0.17999999999999999)</value>
            <value>(&quot;Jalen Green&quot;,2.6000000000000001,0.22)</value>
            <value>(&quot;Jalen Johnson&quot;,0.10000000000000001,0.059999999999999998)</value>
            <value>(&quot;Jalen McDaniels&quot;,1.0,0.40000000000000002)</value>
            <value>(&quot;Jalen Smith&quot;,0.20000000000000001,0.62)</value>
            <value>(&quot;Jalen Smith&quot;,1.1000000000000001,1.0)</value>
            <value>(&quot;James Bouknight&quot;,0.80000000000000004,0.040000000000000001)</value>
            <value>(&quot;James Ennis III&quot;,0.0,0.5)</value>
            <value>(&quot;James Ennis III&quot;,1.0,0.0)</value>
            <value>(&quot;James Johnson&quot;,2.2000000000000002,0.54000000000000004)</value>
            <value>(&quot;Jamorko Pickett&quot;,0.29999999999999999,0.38)</value>
            <value>(&quot;JaMychal Green&quot;,0.80000000000000004,0.41999999999999998)</value>
            <value>(&quot;JaQuori McLaughlin&quot;,0.5,0.0)</value>
            <value>(&quot;Jared Butler&quot;,1.2,0.20999999999999999)</value>
            <value>(&quot;Jared Harper&quot;,1.5,0.5)</value>
            <value>(&quot;Jaren Jackson Jr.&quot;,1.0,2.25)</value>
            <value>(&quot;Jarred Vanderbilt&quot;,1.3999999999999999,0.67000000000000004)</value>
            <value>(&quot;Jarrett Allen&quot;,1.6000000000000001,1.3400000000000001)</value>
            <value>(&quot;Jarrett Culver&quot;,1.0,0.13)</value>
            <value>(&quot;Jarron Cumberland&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;JaVale McGee&quot;,0.59999999999999998,1.0600000000000001)</value>
            <value>(&quot;Javin DeLaurier&quot;,0.0,0.0)</value>
            <value>(&quot;Javonte Green&quot;,1.0,0.52000000000000002)</value>
            <value>(&quot;Javonte Smart&quot;,0.0,0.0)</value>
            <value>(&quot;Javonte Smart&quot;,1.1000000000000001,0.14999999999999999)</value>
            <value>(&quot;Jaxson Hayes&quot;,0.59999999999999998,0.75)</value>
            <value>(&quot;Jay Huff&quot;,0.29999999999999999,0.25)</value>
            <value>(&quot;Jay Scrubb&quot;,0.40000000000000002,0.17000000000000001)</value>
            <value>(&quot;Jaylen Hoard&quot;,0.0,0.0)</value>
            <value>(&quot;Jaylen Morris&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Jaylen Nowell&quot;,2.2000000000000002,0.12)</value>
            <value>(&quot;Jaysean Paige&quot;,1.0,0.0)</value>
            <value>(&quot;Jeff Dowtin&quot;,0.0,0.0)</value>
            <value>(&quot;Jeff Dowtin&quot;,0.80000000000000004,0.25)</value>
            <value>(&quot;Jeff Green&quot;,1.3,0.38)</value>
            <value>(&quot;Jemerrio Jones&quot;,0.0,0.0)</value>
            <value>(&quot;Jerami Grant&quot;,2.3999999999999999,1.0900000000000001)</value>
            <value>(&quot;Jeremiah Robinson-Earl&quot;,1.0,0.34000000000000002)</value>
            <value>(&quot;Jeremy Lamb&quot;,1.3,0.35999999999999999)</value>
            <value>(&quot;Jeremy Lamb&quot;,1.8999999999999999,0.85999999999999999)</value>
            <value>(&quot;Jericho Sims&quot;,0.29999999999999999,0.39000000000000001)</value>
            <value>(&quot;Jevon Carter&quot;,1.0,0.22)</value>
            <value>(&quot;Jevon Carter&quot;,1.7,0.29999999999999999)</value>
            <value>(&quot;Jock Landale&quot;,0.90000000000000002,0.29999999999999999)</value>
            <value>(&quot;Joe Harris&quot;,1.0,0.14000000000000001)</value>
            <value>(&quot;Joe Johnson&quot;,0.0,0.0)</value>
            <value>(&quot;Joe Wieskamp&quot;,0.29999999999999999,0.10000000000000001)</value>
            <value>(&quot;Joel Ayayi&quot;,0.59999999999999998,0.0)</value>
            <value>(&quot;John Collins&quot;,1.8,1.04)</value>
            <value>(&quot;John Konchar&quot;,1.3999999999999999,0.33000000000000002)</value>
            <value>(&quot;Jon Teske&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Jonas Valanciunas&quot;,2.5,0.85999999999999999)</value>
            <value>(&quot;Jonathan Kuminga&quot;,0.80000000000000004,0.31)</value>
            <value>(&quot;Jordan Bell&quot;,0.0,0.0)</value>
            <value>(&quot;Jordan Clarkson&quot;,2.2000000000000002,0.23000000000000001)</value>
            <value>(&quot;Jordan Goodwin&quot;,0.0,0.0)</value>
            <value>(&quot;Jordan McLaughlin&quot;,2.8999999999999999,0.12)</value>
            <value>(&quot;Jordan Nwora&quot;,1.0,0.26000000000000001)</value>
            <value>(&quot;Jordan Schakel&quot;,0.0,0.0)</value>
            <value>(&quot;Jose Alvarado&quot;,2.5,0.14999999999999999)</value>
            <value>(&quot;Josh Christopher&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Josh Green&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Josh Jackson&quot;,0.20000000000000001,0.20000000000000001)</value>
            <value>(&quot;Josh Jackson&quot;,1.3,0.46000000000000002)</value>
            <value>(&quot;Josh Okogie&quot;,0.5,0.23999999999999999)</value>
            <value>(&quot;Josh Richardson&quot;,1.5,0.52000000000000002)</value>
            <value>(&quot;Josh Richardson&quot;,2.2999999999999998,0.5)</value>
            <value>(&quot;Joshua Primo&quot;,1.3999999999999999,0.45000000000000001)</value>
            <value>(&quot;JT Thor&quot;,0.69999999999999996,0.37)</value>
            <value>(&quot;Juan Toscano-Anderson&quot;,1.8,0.22)</value>
            <value>(&quot;Juancho Hernangomez&quot;,0.20000000000000001,0.11)</value>
            <value>(&quot;Juancho Hernangomez&quot;,0.40000000000000002,0.40000000000000002)</value>
            <value>(&quot;Juancho Hernangomez&quot;,0.59999999999999998,0.20000000000000001)</value>
            <value>(&quot;Justin Anderson&quot;,1.0,0.33000000000000002)</value>
            <value>(&quot;Justin Anderson&quot;,2.0,0.0)</value>
            <value>(&quot;Justin Champagnie&quot;,0.29999999999999999,0.11)</value>
            <value>(&quot;Justin Holiday&quot;,1.6000000000000001,0.64000000000000001)</value>
            <value>(&quot;Justin Holiday&quot;,1.8,0.37)</value>
            <value>(&quot;Justin Jackson&quot;,0.0,0.0)</value>
            <value>(&quot;Justin Jackson&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Justin Robinson&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Justin Robinson&quot;,1.2,0.0)</value>
            <value>(&quot;Justin Robinson&quot;,1.8,0.20000000000000001)</value>
            <value>(&quot;Justise Winslow&quot;,1.3999999999999999,0.48999999999999999)</value>
            <value>(&quot;Jusuf Nurkic&quot;,2.7999999999999998,0.60999999999999999)</value>
            <value>(&quot;Juwan Morgan&quot;,1.0,0.0)</value>
            <value>(&quot;Kai Jones&quot;,0.20000000000000001,0.0)</value>
            <value>(&quot;Keifer Sykes&quot;,2.0,0.14999999999999999)</value>
            <value>(&quot;Keita Bates-Diop&quot;,0.69999999999999996,0.27000000000000002)</value>
            <value>(&quot;Kelan Martin&quot;,0.0,0.0)</value>
            <value>(&quot;Kelan Martin&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;Keldon Johnson&quot;,1.8999999999999999,0.14000000000000001)</value>
            <value>(&quot;Keljin Blevins&quot;,0.59999999999999998,0.050000000000000003)</value>
            <value>(&quot;Kelly Olynyk&quot;,2.6000000000000001,0.41999999999999998)</value>
            <value>(&quot;Kelly Oubre Jr.&quot;,1.2,0.44)</value>
            <value>(&quot;Kenrich Williams&quot;,2.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Kent Bazemore&quot;,0.90000000000000002,0.22)</value>
            <value>(&quot;Kentavious Caldwell-Pope&quot;,1.8999999999999999,0.32000000000000001)</value>
            <value>(&quot;Kenyon Martin Jr.&quot;,1.3999999999999999,0.41999999999999998)</value>
            <value>(&quot;Keon Johnson&quot;,0.90000000000000002,0.13)</value>
            <value>(&quot;Keon Johnson&quot;,2.1000000000000001,0.33000000000000002)</value>
            <value>(&quot;Kessler Edwards&quot;,0.69999999999999996,0.46999999999999997)</value>
            <value>(&quot;Kevin Huerter&quot;,2.7000000000000002,0.35999999999999999)</value>
            <value>(&quot;Kevin Knox II&quot;,0.20000000000000001,0.080000000000000002)</value>
            <value>(&quot;Kevin Knox II&quot;,0.5,0.0)</value>
            <value>(&quot;Kevin Love&quot;,2.1000000000000001,0.23000000000000001)</value>
            <value>(&quot;Kevin Pangos&quot;,1.3,0.0)</value>
            <value>(&quot;Kevon Looney&quot;,2.0,0.72999999999999998)</value>
            <value>(&quot;Khem Birch&quot;,1.0,0.48999999999999999)</value>
            <value>(&quot;Killian Tillie&quot;,0.59999999999999998,0.41999999999999998)</value>
            <value>(&quot;Kira Lewis Jr.&quot;,2.0,0.040000000000000001)</value>
            <value>(&quot;Klay Thompson&quot;,2.7999999999999998,0.67000000000000004)</value>
            <value>(&quot;Kristaps Porzingis&quot;,2.0,1.3999999999999999)</value>
            <value>(&quot;Kristaps Porzingis&quot;,2.0,1.74)</value>
            <value>(&quot;Kyle Anderson&quot;,2.6000000000000001,0.60999999999999999)</value>
            <value>(&quot;Kyle Guy&quot;,0.90000000000000002,0.059999999999999998)</value>
            <value>(&quot;KZ Okpala&quot;,0.69999999999999996,0.33000000000000002)</value>
            <value>(&quot;Lamar Stevens&quot;,0.59999999999999998,0.26000000000000001)</value>
            <value>(&quot;LaMarcus Aldridge&quot;,0.90000000000000002,1.02)</value>
            <value>(&quot;Lance Stephenson&quot;,1.8,0.0)</value>
            <value>(&quot;Landry Shamet&quot;,1.6000000000000001,0.089999999999999997)</value>
            <value>(&quot;Langston Galloway&quot;,1.3,0.0)</value>
            <value>(&quot;Langston Galloway&quot;,2.2999999999999998,0.0)</value>
            <value>(&quot;Larry Nance Jr.&quot;,2.0,0.34999999999999998)</value>
            <value>(&quot;Lauri Markkanen&quot;,1.3999999999999999,0.54000000000000004)</value>
            <value>(&quot;Leandro Bolmaro&quot;,0.5,0.0)</value>
            <value>(&quot;Lindell Wigginton&quot;,0.5,0.070000000000000007)</value>
            <value>(&quot;Lindy Waters III&quot;,0.69999999999999996,0.42999999999999999)</value>
            <value>(&quot;Lonnie Walker IV&quot;,2.2000000000000002,0.28000000000000003)</value>
            <value>(&quot;Lou Williams&quot;,1.8999999999999999,0.059999999999999998)</value>
            <value>(&quot;Louis King&quot;,0.90000000000000002,0.10000000000000001)</value>
            <value>(&quot;Luguentz Dort&quot;,1.7,0.34999999999999998)</value>
            <value>(&quot;Luka Garza&quot;,0.5,0.13)</value>
            <value>(&quot;Luke Kennard&quot;,2.1000000000000001,0.10000000000000001)</value>
            <value>(&quot;Luke Kornet&quot;,0.0,0.0)</value>
            <value>(&quot;Luke Kornet&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Luke Kornet&quot;,0.5,0.5)</value>
            <value>(&quot;Mac McClung&quot;,0.0,0.0)</value>
            <value>(&quot;Malachi Flynn&quot;,1.6000000000000001,0.10000000000000001)</value>
            <value>(&quot;Malcolm Hill&quot;,0.29999999999999999,0.14000000000000001)</value>
            <value>(&quot;Malcolm Hill&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;Malik Beasley&quot;,1.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;Malik Fitts&quot;,0.0,0.0)</value>
            <value>(&quot;Malik Monk&quot;,2.7000000000000002,0.38)</value>
            <value>(&quot;Malik Newman&quot;,1.0,0.0)</value>
            <value>(&quot;Mamadi Diakite&quot;,0.20000000000000001,0.68999999999999995)</value>
            <value>(&quot;Marcus Garrett&quot;,0.59999999999999998,0.25)</value>
            <value>(&quot;Marcus Morris Sr.&quot;,2.2000000000000002,0.29999999999999999)</value>
            <value>(&quot;Markieff Morris&quot;,1.3,0.080000000000000002)</value>
            <value>(&quot;Marko Simonovic&quot;,0.0,0.11)</value>
            <value>(&quot;Markus Howard&quot;,0.20000000000000001,0.0)</value>
            <value>(&quot;Marquese Chriss&quot;,0.5,0.42999999999999999)</value>
            <value>(&quot;Marvin Bagley III&quot;,0.59999999999999998,0.37)</value>
            <value>(&quot;Marvin Bagley III&quot;,1.1000000000000001,0.35999999999999999)</value>
            <value>(&quot;Mason Jones&quot;,0.0,0.0)</value>
            <value>(&quot;Matisse Thybulle&quot;,1.1000000000000001,1.0800000000000001)</value>
            <value>(&quot;Matt Mooney&quot;,0.0,0.0)</value>
            <value>(&quot;Matt Thomas&quot;,0.5,0.080000000000000002)</value>
            <value>(&quot;Maurice Harkless&quot;,0.5,0.52000000000000002)</value>
            <value>(&quot;Max Strus&quot;,1.3,0.23000000000000001)</value>
            <value>(&quot;Maxi Kleber&quot;,1.2,1.0800000000000001)</value>
            <value>(&quot;McKinley Wright IV&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Micah Potter&quot;,0.0,0.33000000000000002)</value>
            <value>(&quot;Michael Porter Jr.&quot;,1.8999999999999999,0.22)</value>
            <value>(&quot;Mikal Bridges&quot;,2.2999999999999998,0.42999999999999999)</value>
            <value>(&quot;Mike Muscala&quot;,0.5,0.59999999999999998)</value>
            <value>(&quot;Miles McBride&quot;,1.1000000000000001,0.029999999999999999)</value>
            <value>(&quot;Mitchell Robinson&quot;,0.5,1.76)</value>
            <value>(&quot;Miye Oni&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;MJ Walker&quot;,0.5,0.0)</value>
            <value>(&quot;Mo Bamba&quot;,1.1000000000000001,1.7)</value>
            <value>(&quot;Montrezl Harrell&quot;,1.6000000000000001,0.42999999999999999)</value>
            <value>(&quot;Montrezl Harrell&quot;,2.1000000000000001,0.67000000000000004)</value>
            <value>(&quot;Moritz Wagner&quot;,1.2,0.20999999999999999)</value>
            <value>(&quot;Moses Brown&quot;,0.0,0.34999999999999998)</value>
            <value>(&quot;Moses Brown&quot;,0.0,0.5)</value>
            <value>(&quot;Moses Moody&quot;,0.40000000000000002,0.16)</value>
            <value>(&quot;Moses Wright&quot;,1.0,0.0)</value>
            <value>(&quot;Mychal Mulder&quot;,0.20000000000000001,0.070000000000000007)</value>
            <value>(&quot;Myles Powell&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Myles Turner&quot;,1.0,2.8100000000000001)</value>
            <value>(&quot;Naji Marshall&quot;,1.0,0.12)</value>
            <value>(&quot;Nassir Little&quot;,1.3,0.85999999999999999)</value>
            <value>(&quot;Nate Hinton&quot;,0.0,0.0)</value>
            <value>(&quot;Nathan Knight&quot;,0.5,0.20999999999999999)</value>
            <value>(&quot;Naz Reid&quot;,0.90000000000000002,0.97999999999999998)</value>
            <value>(&quot;Neemias Queta&quot;,0.40000000000000002,0.40000000000000002)</value>
            <value>(&quot;Nemanja Bjelica&quot;,2.0,0.34000000000000002)</value>
            <value>(&quot;Nerlens Noel&quot;,0.90000000000000002,1.24)</value>
            <value>(&quot;Nic Claxton&quot;,0.90000000000000002,1.0900000000000001)</value>
            <value>(&quot;Nick Richards&quot;,0.29999999999999999,0.41999999999999998)</value>
            <value>(&quot;Nickeil Alexander-Walker&quot;,0.80000000000000004,0.13)</value>
            <value>(&quot;Nickeil Alexander-Walker&quot;,2.7999999999999998,0.38)</value>
            <value>(&quot;Nicolas Batum&quot;,1.7,0.72999999999999998)</value>
            <value>(&quot;Nik Stauskas&quot;,0.0,0.0)</value>
            <value>(&quot;Nik Stauskas&quot;,0.5,0.0)</value>
            <value>(&quot;Norman Powell&quot;,2.1000000000000001,0.42999999999999999)</value>
            <value>(&quot;Norvel Pelle&quot;,0.0,0.33000000000000002)</value>
            <value>(&quot;Obi Toppin&quot;,0.90000000000000002,0.39000000000000001)</value>
            <value>(&quot;OG Anunoby&quot;,2.6000000000000001,0.56999999999999995)</value>
            <value>(&quot;Olivier Sarr&quot;,0.59999999999999998,0.54000000000000004)</value>
            <value>(&quot;Omer Yurtseven&quot;,0.90000000000000002,0.39000000000000001)</value>
            <value>(&quot;Onyeka Okongwu&quot;,1.1000000000000001,1.29)</value>
            <value>(&quot;Oshae Brissett&quot;,0.80000000000000004,0.46000000000000002)</value>
            <value>(&quot;Otto Porter Jr.&quot;,1.5,0.45000000000000001)</value>
            <value>(&quot;P.J. Dozier&quot;,1.6000000000000001,0.33000000000000002)</value>
            <value>(&quot;P.J. Tucker&quot;,2.1000000000000001,0.20999999999999999)</value>
            <value>(&quot;P.J. Washington&quot;,2.1000000000000001,0.91000000000000003)</value>
            <value>(&quot;Paris Bass&quot;,0.0,0.0)</value>
            <value>(&quot;Pat Connaughton&quot;,1.2,0.26000000000000001)</value>
            <value>(&quot;Patrick Williams&quot;,0.59999999999999998,0.40000000000000002)</value>
            <value>(&quot;Patty Mills&quot;,2.3999999999999999,0.23000000000000001)</value>
            <value>(&quot;Paul Millsap&quot;,0.59999999999999998,0.14000000000000001)</value>
            <value>(&quot;Paul Millsap&quot;,1.0,0.46000000000000002)</value>
            <value>(&quot;Paul Reed&quot;,0.40000000000000002,0.40999999999999998)</value>
            <value>(&quot;Paul Watson&quot;,0.90000000000000002,0.33000000000000002)</value>
            <value>(&quot;Payton Pritchard&quot;,1.7,0.070000000000000007)</value>
            <value>(&quot;Petr Cornelie&quot;,0.20000000000000001,0.080000000000000002)</value>
            <value>(&quot;Precious Achiuwa&quot;,1.1000000000000001,0.56999999999999995)</value>
            <value>(&quot;Quentin Grimes&quot;,1.0,0.25)</value>
            <value>(&quot;Quinndary Weatherspoon&quot;,0.40000000000000002,0.11)</value>
            <value>(&quot;R.J. Hampton&quot;,2.2999999999999998,0.25)</value>
            <value>(&quot;Raul Neto&quot;,3.2000000000000002,0.029999999999999999)</value>
            <value>(&quot;Rayjon Tucker&quot;,1.3,0.0)</value>
            <value>(&quot;Reggie Bullock&quot;,1.1000000000000001,0.23000000000000001)</value>
            <value>(&quot;Reggie Perry&quot;,0.0,0.0)</value>
            <value>(&quot;Reggie Perry&quot;,1.0,0.0)</value>
            <value>(&quot;Richaun Holmes&quot;,1.1000000000000001,0.93000000000000005)</value>
            <value>(&quot;RJ Barrett&quot;,2.8999999999999999,0.26000000000000001)</value>
            <value>(&quot;RJ Nembhard Jr.&quot;,1.1000000000000001,0.0)</value>
            <value>(&quot;Rob Edwards&quot;,0.0,0.0)</value>
            <value>(&quot;Robert Covington&quot;,1.0,1.23)</value>
            <value>(&quot;Robert Covington&quot;,1.3999999999999999,1.3100000000000001)</value>
            <value>(&quot;Robert Woodard II&quot;,0.29999999999999999,0.080000000000000002)</value>
            <value>(&quot;Robin Lopez&quot;,1.5,0.55000000000000004)</value>
            <value>(&quot;Rodney Hood&quot;,0.59999999999999998,0.14000000000000001)</value>
            <value>(&quot;Rodney Hood&quot;,0.80000000000000004,0.10000000000000001)</value>
            <value>(&quot;Rodney McGruder&quot;,0.80000000000000004,0.12)</value>
            <value>(&quot;Romeo Langford&quot;,0.0,0.0)</value>
            <value>(&quot;Romeo Langford&quot;,0.40000000000000002,0.35999999999999999)</value>
            <value>(&quot;Royce O&apos;Neale&quot;,2.6000000000000001,0.45000000000000001)</value>
            <value>(&quot;Rudy Gay&quot;,1.0,0.28999999999999998)</value>
            <value>(&quot;Rudy Gobert&quot;,1.1000000000000001,2.2200000000000002)</value>
            <value>(&quot;Rui Hachimura&quot;,1.0,0.17999999999999999)</value>
            <value>(&quot;Ryan Arcidiacono&quot;,0.0,0.0)</value>
            <value>(&quot;Saben Lee&quot;,2.3999999999999999,0.34000000000000002)</value>
            <value>(&quot;Saddiq Bey&quot;,2.8999999999999999,0.20999999999999999)</value>
            <value>(&quot;Sam Dekker&quot;,0.0,0.0)</value>
            <value>(&quot;Sam Hauser&quot;,0.29999999999999999,0.059999999999999998)</value>
            <value>(&quot;Sam Merrill&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Sandro Mamukelashvili&quot;,0.40000000000000002,0.19)</value>
            <value>(&quot;Santi Aldama&quot;,0.5,0.26000000000000001)</value>
            <value>(&quot;Scottie Lewis&quot;,0.5,0.0)</value>
            <value>(&quot;Scotty Hopson&quot;,1.0,0.0)</value>
            <value>(&quot;Sekou Doumbouya&quot;,0.0,1.0)</value>
            <value>(&quot;Semi Ojeleye&quot;,0.29999999999999999,0.25)</value>
            <value>(&quot;Semi Ojeleye&quot;,0.40000000000000002,0.14000000000000001)</value>
            <value>(&quot;Serge Ibaka&quot;,0.40000000000000002,0.46000000000000002)</value>
            <value>(&quot;Serge Ibaka&quot;,1.0,0.73999999999999999)</value>
            <value>(&quot;Shake Milton&quot;,2.3999999999999999,0.34000000000000002)</value>
            <value>(&quot;Shaq Buchanan&quot;,1.0,0.0)</value>
            <value>(&quot;Shaquille Harrison&quot;,1.5,0.5)</value>
            <value>(&quot;Sharife Cooper&quot;,0.5,0.0)</value>
            <value>(&quot;Skylar Mays&quot;,0.69999999999999996,0.0)</value>
            <value>(&quot;Solomon Hill&quot;,0.90000000000000002,0.14999999999999999)</value>
            <value>(&quot;Stanley Johnson&quot;,1.3999999999999999,0.37)</value>
            <value>(&quot;Sterling Brown&quot;,0.69999999999999996,0.16)</value>
            <value>(&quot;Svi Mykhailiuk&quot;,0.80000000000000004,0.080000000000000002)</value>
            <value>(&quot;Tacko Fall&quot;,0.20000000000000001,0.55000000000000004)</value>
            <value>(&quot;Taj Gibson&quot;,0.59999999999999998,0.80000000000000004)</value>
            <value>(&quot;Talen Horton-Tucker&quot;,2.7000000000000002,0.53000000000000003)</value>
            <value>(&quot;Taurean Prince&quot;,0.90000000000000002,0.32000000000000001)</value>
            <value>(&quot;Terance Mann&quot;,2.5,0.20999999999999999)</value>
            <value>(&quot;Terence Davis&quot;,1.3,0.37)</value>
            <value>(&quot;Terrence Ross&quot;,1.8999999999999999,0.20000000000000001)</value>
            <value>(&quot;Terry Taylor&quot;,1.2,0.28999999999999998)</value>
            <value>(&quot;Thaddeus Young&quot;,1.5,0.31)</value>
            <value>(&quot;Thaddeus Young&quot;,2.2999999999999998,0.27000000000000002)</value>
            <value>(&quot;Thanasis Antetokounmpo&quot;,0.5,0.22)</value>
            <value>(&quot;Theo Maledon&quot;,1.7,0.12)</value>
            <value>(&quot;Theo Pinson&quot;,0.80000000000000004,0.13)</value>
            <value>(&quot;Thomas Bryant&quot;,1.0,0.81999999999999995)</value>
            <value>(&quot;Tim Frazier&quot;,0.5,0.0)</value>
            <value>(&quot;Tim Hardaway Jr.&quot;,2.2000000000000002,0.14000000000000001)</value>
            <value>(&quot;Timothe Luwawu-Cabarrot&quot;,0.59999999999999998,0.10000000000000001)</value>
            <value>(&quot;Tomas Satoransky&quot;,0.0,0.0)</value>
            <value>(&quot;Tomas Satoransky&quot;,2.3999999999999999,0.029999999999999999)</value>
            <value>(&quot;Tomas Satoransky&quot;,2.3999999999999999,0.38)</value>
            <value>(&quot;Tony Bradley&quot;,0.5,0.67000000000000004)</value>
            <value>(&quot;Tony Snell&quot;,0.5,0.17999999999999999)</value>
            <value>(&quot;Tony Snell&quot;,0.59999999999999998,0.17999999999999999)</value>
            <value>(&quot;Torrey Craig&quot;,1.1000000000000001,0.37)</value>
            <value>(&quot;Torrey Craig&quot;,1.3,0.87)</value>
            <value>(&quot;Trayvon Palmer&quot;,0.0,0.0)</value>
            <value>(&quot;Tre Jones&quot;,2.8999999999999999,0.050000000000000003)</value>
            <value>(&quot;Tre Mann&quot;,1.5,0.17999999999999999)</value>
            <value>(&quot;Tremont Waters&quot;,0.0,0.0)</value>
            <value>(&quot;Trendon Watford&quot;,1.3999999999999999,0.55000000000000004)</value>
            <value>(&quot;Trent Forrest&quot;,1.7,0.059999999999999998)</value>
            <value>(&quot;Trevelin Queen&quot;,0.40000000000000002,0.10000000000000001)</value>
            <value>(&quot;Trevon Scott&quot;,0.0,0.5)</value>
            <value>(&quot;Trevor Ariza&quot;,1.0,0.17999999999999999)</value>
            <value>(&quot;Trey Burke&quot;,1.3999999999999999,0.0)</value>
            <value>(&quot;Trey Lyles&quot;,0.80000000000000004,0.23000000000000001)</value>
            <value>(&quot;Trey Lyles&quot;,1.1000000000000001,0.51000000000000001)</value>
            <value>(&quot;Trey Murphy III&quot;,0.59999999999999998,0.14000000000000001)</value>
            <value>(&quot;Tristan Thompson&quot;,0.5,0.20000000000000001)</value>
            <value>(&quot;Tristan Thompson&quot;,0.5,0.5)</value>
            <value>(&quot;Tristan Thompson&quot;,0.59999999999999998,0.40000000000000002)</value>
            <value>(&quot;Troy Brown Jr.&quot;,1.0,0.070000000000000007)</value>
            <value>(&quot;Ty Jerome&quot;,2.2999999999999998,0.10000000000000001)</value>
            <value>(&quot;Tyler Cook&quot;,0.20000000000000001,0.20999999999999999)</value>
            <value>(&quot;Tyler Hall&quot;,0.0,0.0)</value>
            <value>(&quot;Tyler Johnson&quot;,0.69999999999999996,0.33000000000000002)</value>
            <value>(&quot;Tyler Johnson&quot;,1.7,0.67000000000000004)</value>
            <value>(&quot;Tyrell Terry&quot;,0.0,0.0)</value>
            <value>(&quot;Tyrone Wallace&quot;,0.0,0.5)</value>
            <value>(&quot;Udoka Azubuike&quot;,0.0,0.65000000000000002)</value>
            <value>(&quot;Udonis Haslem&quot;,0.29999999999999999,0.11)</value>
            <value>(&quot;Usman Garuba&quot;,0.5,0.44)</value>
            <value>(&quot;Vernon Carey Jr.&quot;,0.0,0.0)</value>
            <value>(&quot;Victor Oladipo&quot;,2.7999999999999998,0.25)</value>
            <value>(&quot;Vit Krejci&quot;,0.90000000000000002,0.12)</value>
            <value>(&quot;Vlatko Cancar&quot;,0.90000000000000002,0.20999999999999999)</value>
            <value>(&quot;Wayne Ellington&quot;,0.69999999999999996,0.10000000000000001)</value>
            <value>(&quot;Wayne Selden&quot;,0.29999999999999999,0.0)</value>
            <value>(&quot;Wendell Carter Jr.&quot;,2.7999999999999998,0.70999999999999996)</value>
            <value>(&quot;Wenyen Gabriel&quot;,0.0,0.0)</value>
            <value>(&quot;Wenyen Gabriel&quot;,0.29999999999999999,0.33000000000000002)</value>
            <value>(&quot;Wenyen Gabriel&quot;,0.5,0.17000000000000001)</value>
            <value>(&quot;Wes Iwundu&quot;,0.0,0.0)</value>
            <value>(&quot;Wesley Matthews&quot;,0.69999999999999996,0.13)</value>
            <value>(&quot;Willie Cauley-Stein&quot;,0.5,0.0)</value>
            <value>(&quot;Willie Cauley-Stein&quot;,0.5,0.17000000000000001)</value>
            <value>(&quot;Willy Hernangomez&quot;,1.2,0.40999999999999998)</value>
            <value>(&quot;Xavier Moon&quot;,1.7,0.17000000000000001)</value>
            <value>(&quot;Xavier Sneed&quot;,0.0,0.0)</value>
            <value>(&quot;Xavier Tillman&quot;,0.90000000000000002,0.33000000000000002)</value>
            <value>(&quot;Yuta Watanabe&quot;,0.59999999999999998,0.46999999999999997)</value>
            <value>(&quot;Yves Pons&quot;,0.0,0.0)</value>
            <value>(&quot;Zach Collins&quot;,1.8,0.75)</value>
            <value>(&quot;Zeke Nnaji&quot;,0.40000000000000002,0.33000000000000002)</value>
            <value>(&quot;Ziaire Williams&quot;,0.90000000000000002,0.16)</value>
            <value>(&quot;Zylan Cheatham&quot;,0.0,0.0)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;Aaron Holiday&quot;,3.8999999999999999,0.0)</value>
            <value>(&quot;Al Horford&quot;,3.2999999999999998,1.3300000000000001)</value>
            <value>(&quot;Alex Caruso&quot;,3.7000000000000002,0.45000000000000001)</value>
            <value>(&quot;Andre Iguodala&quot;,3.7999999999999998,0.81000000000000005)</value>
            <value>(&quot;Anfernee Simons&quot;,3.8999999999999999,0.11)</value>
            <value>(&quot;Anthony Davis&quot;,2.8999999999999999,2.3199999999999998)</value>
            <value>(&quot;Anthony Edwards&quot;,3.7000000000000002,0.71999999999999997)</value>
            <value>(&quot;Ayo Dosunmu&quot;,3.2999999999999998,0.41999999999999998)</value>
            <value>(&quot;Bam Adebayo&quot;,3.5,0.80000000000000004)</value>
            <value>(&quot;Bogdan Bogdanovic&quot;,3.2000000000000002,0.25)</value>
            <value>(&quot;Brad Wanamaker&quot;,7.0,0.0)</value>
            <value>(&quot;Bradley Beal&quot;,6.5999999999999996,0.38)</value>
            <value>(&quot;Brandon Goodwin&quot;,3.2999999999999998,0.040000000000000001)</value>
            <value>(&quot;Brandon Ingram&quot;,5.5,0.46000000000000002)</value>
            <value>(&quot;Buddy Hield&quot;,5.4000000000000004,0.28999999999999998)</value>
            <value>(&quot;Cade Cunningham&quot;,5.2999999999999998,0.65000000000000002)</value>
            <value>(&quot;Cameron Payne&quot;,4.7000000000000002,0.31)</value>
            <value>(&quot;Caris LeVert&quot;,4.2000000000000002,0.33000000000000002)</value>
            <value>(&quot;Caris LeVert&quot;,4.4000000000000004,0.46000000000000002)</value>
            <value>(&quot;Chris Paul&quot;,10.699999999999999,0.31)</value>
            <value>(&quot;CJ McCollum&quot;,4.5,0.57999999999999996)</value>
            <value>(&quot;CJ McCollum&quot;,6.7999999999999998,0.0)</value>
            <value>(&quot;Cole Anthony&quot;,5.7000000000000002,0.28000000000000003)</value>
            <value>(&quot;Cory Joseph&quot;,3.7999999999999998,0.27000000000000002)</value>
            <value>(&quot;D&apos;Angelo Russell&quot;,7.0999999999999996,0.39000000000000001)</value>
            <value>(&quot;Damian Lillard&quot;,7.2999999999999998,0.38)</value>
            <value>(&quot;Darius Garland&quot;,8.3000000000000007,0.11)</value>
            <value>(&quot;Davion Mitchell&quot;,3.2999999999999998,0.27000000000000002)</value>
            <value>(&quot;De&apos;Aaron Fox&quot;,5.5999999999999996,0.41999999999999998)</value>
            <value>(&quot;Dejounte Murray&quot;,9.4000000000000004,0.33000000000000002)</value>
            <value>(&quot;DeMar DeRozan&quot;,5.2000000000000002,0.31)</value>
            <value>(&quot;Dennis Schroder&quot;,4.2000000000000002,0.10000000000000001)</value>
            <value>(&quot;Dennis Schroder&quot;,7.0999999999999996,0.11)</value>
            <value>(&quot;Dennis Smith Jr.&quot;,3.6000000000000001,0.32000000000000001)</value>
            <value>(&quot;Derrick Rose&quot;,4.0,0.46000000000000002)</value>
            <value>(&quot;Derrick Walton Jr.&quot;,7.0,1.3300000000000001)</value>
            <value>(&quot;Derrick White&quot;,3.0,0.93000000000000005)</value>
            <value>(&quot;Derrick White&quot;,5.5999999999999996,0.85999999999999999)</value>
            <value>(&quot;Devin Booker&quot;,4.9000000000000004,0.41999999999999998)</value>
            <value>(&quot;Devonte&apos; Graham&quot;,4.4000000000000004,0.14999999999999999)</value>
            <value>(&quot;Domantas Sabonis&quot;,5.0,0.46999999999999997)</value>
            <value>(&quot;Domantas Sabonis&quot;,5.7999999999999998,0.31)</value>
            <value>(&quot;Donovan Mitchell&quot;,5.5,0.20999999999999999)</value>
            <value>(&quot;Draymond Green&quot;,7.2000000000000002,1.1399999999999999)</value>
            <value>(&quot;Eric Bledsoe&quot;,4.2000000000000002,0.34999999999999998)</value>
            <value>(&quot;Evan Mobley&quot;,2.6000000000000001,1.6599999999999999)</value>
            <value>(&quot;Facundo Campazzo&quot;,3.5,0.37)</value>
            <value>(&quot;Fred VanVleet&quot;,6.7000000000000002,0.52000000000000002)</value>
            <value>(&quot;Gabe Vincent&quot;,3.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Giannis Antetokounmpo&quot;,5.7999999999999998,1.3600000000000001)</value>
            <value>(&quot;Goran Dragic&quot;,4.5,0.10000000000000001)</value>
            <value>(&quot;Gordon Hayward&quot;,3.6000000000000001,0.46000000000000002)</value>
            <value>(&quot;Greg Monroe&quot;,3.7000000000000002,1.3300000000000001)</value>
            <value>(&quot;Isaiah Thomas&quot;,4.0,0.0)</value>
            <value>(&quot;Ish Smith&quot;,5.0999999999999996,0.5)</value>
            <value>(&quot;Ja Morant&quot;,6.7000000000000002,0.38)</value>
            <value>(&quot;Jae&apos;Sean Tate&quot;,3.0,0.55000000000000004)</value>
            <value>(&quot;Jakob Poeltl&quot;,2.8999999999999999,1.72)</value>
            <value>(&quot;Jalen Brunson&quot;,5.2000000000000002,0.050000000000000003)</value>
            <value>(&quot;Jalen Suggs&quot;,4.4000000000000004,0.39000000000000001)</value>
            <value>(&quot;James Harden&quot;,10.199999999999999,0.69999999999999996)</value>
            <value>(&quot;James Harden&quot;,10.6,0.11)</value>
            <value>(&quot;Jaylen Brown&quot;,3.3999999999999999,0.28999999999999998)</value>
            <value>(&quot;Jayson Tatum&quot;,4.2000000000000002,0.65000000000000002)</value>
            <value>(&quot;Jimmy Butler&quot;,5.5999999999999996,0.52000000000000002)</value>
            <value>(&quot;Joe Ingles&quot;,3.5,0.11)</value>
            <value>(&quot;Joel Embiid&quot;,4.4000000000000004,1.45)</value>
            <value>(&quot;Jordan Poole&quot;,3.6000000000000001,0.29999999999999999)</value>
            <value>(&quot;Josh Giddey&quot;,6.4000000000000004,0.37)</value>
            <value>(&quot;Josh Hart&quot;,4.0999999999999996,0.17999999999999999)</value>
            <value>(&quot;Josh Hart&quot;,4.0999999999999996,0.27000000000000002)</value>
            <value>(&quot;Jrue Holiday&quot;,6.7000000000000002,0.46000000000000002)</value>
            <value>(&quot;Julius Randle&quot;,5.2000000000000002,0.56999999999999995)</value>
            <value>(&quot;Justise Winslow&quot;,3.0,0.63)</value>
            <value>(&quot;Karl-Anthony Towns&quot;,3.7000000000000002,1.1599999999999999)</value>
            <value>(&quot;Kemba Walker&quot;,3.5,0.19)</value>
            <value>(&quot;Kevin Durant&quot;,6.0,0.88)</value>
            <value>(&quot;Kevin Porter Jr.&quot;,6.0,0.34999999999999998)</value>
            <value>(&quot;Khris Middleton&quot;,5.4000000000000004,0.26000000000000001)</value>
            <value>(&quot;Killian Hayes&quot;,4.2999999999999998,0.48999999999999999)</value>
            <value>(&quot;Kris Dunn&quot;,5.0,0.0)</value>
            <value>(&quot;Kyle Kuzma&quot;,3.3999999999999999,0.85999999999999999)</value>
            <value>(&quot;Kyle Lowry&quot;,7.7999999999999998,0.29999999999999999)</value>
            <value>(&quot;Kyrie Irving&quot;,5.2999999999999998,0.68000000000000005)</value>
            <value>(&quot;LaMelo Ball&quot;,7.4000000000000004,0.42999999999999999)</value>
            <value>(&quot;Lance Stephenson&quot;,3.7999999999999998,0.11)</value>
            <value>(&quot;LeBron James&quot;,6.2000000000000002,1.0800000000000001)</value>
            <value>(&quot;Lonzo Ball&quot;,5.0999999999999996,0.89000000000000001)</value>
            <value>(&quot;Luka Doncic&quot;,8.5999999999999996,0.56999999999999995)</value>
            <value>(&quot;Malcolm Brogdon&quot;,5.9000000000000004,0.37)</value>
            <value>(&quot;Marcus Smart&quot;,5.5999999999999996,0.27000000000000002)</value>
            <value>(&quot;Markelle Fultz&quot;,5.0999999999999996,0.38)</value>
            <value>(&quot;Mason Plumlee&quot;,3.2000000000000002,0.73999999999999999)</value>
            <value>(&quot;Mike Conley&quot;,5.2999999999999998,0.33000000000000002)</value>
            <value>(&quot;Miles Bridges&quot;,3.7999999999999998,0.88)</value>
            <value>(&quot;Monte Morris&quot;,4.2999999999999998,0.17000000000000001)</value>
            <value>(&quot;Nikola Jokic&quot;,8.0999999999999996,0.83999999999999997)</value>
            <value>(&quot;Nikola Vucevic&quot;,3.3999999999999999,1.0700000000000001)</value>
            <value>(&quot;Norman Powell&quot;,4.0,0.67000000000000004)</value>
            <value>(&quot;Pascal Siakam&quot;,5.0999999999999996,0.64000000000000001)</value>
            <value>(&quot;Patrick Beverley&quot;,4.7999999999999998,0.93999999999999995)</value>
            <value>(&quot;Paul George&quot;,5.5,0.38)</value>
            <value>(&quot;Rajon Rondo&quot;,3.7000000000000002,0.28000000000000003)</value>
            <value>(&quot;Rajon Rondo&quot;,4.5999999999999996,0.059999999999999998)</value>
            <value>(&quot;Reggie Jackson&quot;,4.9000000000000004,0.17999999999999999)</value>
            <value>(&quot;Ricky Rubio&quot;,6.5999999999999996,0.20999999999999999)</value>
            <value>(&quot;Robert Williams III&quot;,2.0,2.21)</value>
            <value>(&quot;Russell Westbrook&quot;,7.0,0.26000000000000001)</value>
            <value>(&quot;Scottie Barnes&quot;,3.2999999999999998,0.81999999999999995)</value>
            <value>(&quot;Seth Curry&quot;,3.2000000000000002,0.17999999999999999)</value>
            <value>(&quot;Seth Curry&quot;,4.0,0.23999999999999999)</value>
            <value>(&quot;Shai Gilgeous-Alexander&quot;,5.9000000000000004,0.80000000000000004)</value>
            <value>(&quot;Spencer Dinwiddie&quot;,4.2999999999999998,0.17000000000000001)</value>
            <value>(&quot;Spencer Dinwiddie&quot;,5.7999999999999998,0.16)</value>
            <value>(&quot;Stephen Curry&quot;,6.2999999999999998,0.35999999999999999)</value>
            <value>(&quot;Steven Adams&quot;,3.2999999999999998,0.76000000000000001)</value>
            <value>(&quot;T.J. McConnell&quot;,4.7999999999999998,0.38)</value>
            <value>(&quot;Terry Rozier&quot;,4.4000000000000004,0.34000000000000002)</value>
            <value>(&quot;Tim Frazier&quot;,3.2999999999999998,0.10000000000000001)</value>
            <value>(&quot;Tobias Harris&quot;,3.3999999999999999,0.64000000000000001)</value>
            <value>(&quot;Trae Young&quot;,9.5,0.11)</value>
            <value>(&quot;Tremont Waters&quot;,3.5,0.0)</value>
            <value>(&quot;Tyler Herro&quot;,3.7999999999999998,0.14000000000000001)</value>
            <value>(&quot;Tyrese Haliburton&quot;,7.4000000000000004,0.67000000000000004)</value>
            <value>(&quot;Tyrese Haliburton&quot;,9.4000000000000004,0.5)</value>
            <value>(&quot;Tyrese Maxey&quot;,4.2999999999999998,0.44)</value>
            <value>(&quot;Tyus Jones&quot;,4.0999999999999996,0.029999999999999999)</value>
            <value>(&quot;Will Barton&quot;,3.7999999999999998,0.47999999999999998)</value>
            <value>(&quot;Zach LaVine&quot;,4.5,0.38)</value>
          </bin>
        </calculation>
      </column>
      <column caption='G vs C' datatype='string' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters)]' parent-model='[AnalyticModel:{7ccd61d9-5239-424f-a51a-d0eef471d733}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game.]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;Aaron Holiday&quot;,1.8999999999999999,0.22)</value>
            <value>(&quot;Alec Burks&quot;,2.7999999999999998,0.32000000000000001)</value>
            <value>(&quot;Aleksej Pokusevski&quot;,1.5,0.57999999999999996)</value>
            <value>(&quot;Alperen Sengun&quot;,2.3999999999999999,0.93000000000000005)</value>
            <value>(&quot;Andre Drummond&quot;,2.0,0.92000000000000004)</value>
            <value>(&quot;Anthony Edwards&quot;,3.7000000000000002,0.71999999999999997)</value>
            <value>(&quot;Armoni Brooks&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Austin Reaves&quot;,1.3,0.35999999999999999)</value>
            <value>(&quot;Austin Rivers&quot;,1.3,0.089999999999999997)</value>
            <value>(&quot;Avery Bradley&quot;,0.80000000000000004,0.16)</value>
            <value>(&quot;Ayo Dosunmu&quot;,3.2999999999999998,0.41999999999999998)</value>
            <value>(&quot;Ben McLemore&quot;,0.90000000000000002,0.12)</value>
            <value>(&quot;Bogdan Bogdanovic&quot;,3.2000000000000002,0.25)</value>
            <value>(&quot;Bones Hyland&quot;,2.2999999999999998,0.23000000000000001)</value>
            <value>(&quot;Brandon Boston Jr.&quot;,0.90000000000000002,0.23999999999999999)</value>
            <value>(&quot;Bryn Forbes&quot;,1.0,0.080000000000000002)</value>
            <value>(&quot;Buddy Hield&quot;,1.8999999999999999,0.27000000000000002)</value>
            <value>(&quot;Cam Thomas&quot;,1.3,0.14000000000000001)</value>
            <value>(&quot;Chris Duarte&quot;,2.1000000000000001,0.17999999999999999)</value>
            <value>(&quot;Clint Capela&quot;,1.3,1.3400000000000001)</value>
            <value>(&quot;Coby White&quot;,3.0,0.22)</value>
            <value>(&quot;Cory Joseph&quot;,3.7999999999999998,0.27000000000000002)</value>
            <value>(&quot;Damian Jones&quot;,1.1000000000000001,0.70999999999999996)</value>
            <value>(&quot;Danny Green&quot;,1.0,0.63)</value>
            <value>(&quot;Davion Mitchell&quot;,3.2999999999999998,0.27000000000000002)</value>
            <value>(&quot;De&apos;Anthony Melton&quot;,2.7000000000000002,0.56000000000000005)</value>
            <value>(&quot;Deandre Ayton&quot;,1.3999999999999999,0.72999999999999998)</value>
            <value>(&quot;Delon Wright&quot;,2.2999999999999998,0.22)</value>
            <value>(&quot;Desmond Bane&quot;,2.6000000000000001,0.40999999999999998)</value>
            <value>(&quot;Dewayne Dedmon&quot;,0.80000000000000004,0.63)</value>
            <value>(&quot;Elfrid Payton&quot;,2.0,0.089999999999999997)</value>
            <value>(&quot;Eric Gordon&quot;,2.7999999999999998,0.33000000000000002)</value>
            <value>(&quot;Evan Mobley&quot;,2.6000000000000001,1.6599999999999999)</value>
            <value>(&quot;Facundo Campazzo&quot;,3.5,0.37)</value>
            <value>(&quot;Frank Jackson&quot;,1.0,0.20000000000000001)</value>
            <value>(&quot;Frank Ntilikina&quot;,1.1000000000000001,0.12)</value>
            <value>(&quot;Gabe Vincent&quot;,3.2000000000000002,0.20000000000000001)</value>
            <value>(&quot;Garrison Mathews&quot;,1.0,0.27000000000000002)</value>
            <value>(&quot;Gary Harris&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Gary Payton II&quot;,0.80000000000000004,0.29999999999999999)</value>
            <value>(&quot;George Hill&quot;,2.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;Gorgui Dieng&quot;,0.80000000000000004,0.33000000000000002)</value>
            <value>(&quot;Grayson Allen&quot;,1.6000000000000001,0.26000000000000001)</value>
            <value>(&quot;Hamidou Diallo&quot;,1.3,0.28999999999999998)</value>
            <value>(&quot;Hassan Whiteside&quot;,0.40000000000000002,1.49)</value>
            <value>(&quot;Immanuel Quickley&quot;,3.1000000000000001,0.050000000000000003)</value>
            <value>(&quot;Isaiah Joe&quot;,0.69999999999999996,0.059999999999999998)</value>
            <value>(&quot;Ivica Zubac&quot;,1.5,1.03)</value>
            <value>(&quot;Jakob Poeltl&quot;,2.8999999999999999,1.72)</value>
            <value>(&quot;Jalen Green&quot;,2.6000000000000001,0.22)</value>
            <value>(&quot;Jarrett Allen&quot;,1.6000000000000001,1.3400000000000001)</value>
            <value>(&quot;Jaylen Nowell&quot;,2.2000000000000002,0.12)</value>
            <value>(&quot;Jevon Carter&quot;,1.0,0.22)</value>
            <value>(&quot;Jock Landale&quot;,0.90000000000000002,0.29999999999999999)</value>
            <value>(&quot;John Konchar&quot;,1.3999999999999999,0.33000000000000002)</value>
            <value>(&quot;Jonas Valanciunas&quot;,2.5,0.85999999999999999)</value>
            <value>(&quot;Jordan Clarkson&quot;,2.2000000000000002,0.23000000000000001)</value>
            <value>(&quot;Jordan McLaughlin&quot;,2.8999999999999999,0.12)</value>
            <value>(&quot;Jordan Poole&quot;,3.6000000000000001,0.29999999999999999)</value>
            <value>(&quot;Jose Alvarado&quot;,2.5,0.14999999999999999)</value>
            <value>(&quot;Josh Christopher&quot;,1.8,0.14999999999999999)</value>
            <value>(&quot;Josh Green&quot;,1.2,0.20000000000000001)</value>
            <value>(&quot;Josh Okogie&quot;,0.5,0.23999999999999999)</value>
            <value>(&quot;Josh Richardson&quot;,1.5,0.52000000000000002)</value>
            <value>(&quot;Jusuf Nurkic&quot;,2.7999999999999998,0.60999999999999999)</value>
            <value>(&quot;Kentavious Caldwell-Pope&quot;,1.8999999999999999,0.32000000000000001)</value>
            <value>(&quot;Khem Birch&quot;,1.0,0.48999999999999999)</value>
            <value>(&quot;Landry Shamet&quot;,1.6000000000000001,0.089999999999999997)</value>
            <value>(&quot;Lou Williams&quot;,1.8999999999999999,0.059999999999999998)</value>
            <value>(&quot;Luguentz Dort&quot;,1.7,0.34999999999999998)</value>
            <value>(&quot;Luke Kennard&quot;,2.1000000000000001,0.10000000000000001)</value>
            <value>(&quot;Malachi Flynn&quot;,1.6000000000000001,0.10000000000000001)</value>
            <value>(&quot;Malik Beasley&quot;,1.3999999999999999,0.14000000000000001)</value>
            <value>(&quot;Malik Monk&quot;,2.7000000000000002,0.38)</value>
            <value>(&quot;Mo Bamba&quot;,1.1000000000000001,1.7)</value>
            <value>(&quot;Moses Moody&quot;,0.40000000000000002,0.16)</value>
            <value>(&quot;Nick Richards&quot;,0.29999999999999999,0.41999999999999998)</value>
            <value>(&quot;Nickeil Alexander-Walker&quot;,2.7999999999999998,0.38)</value>
            <value>(&quot;Nikola Vucevic&quot;,3.3999999999999999,1.0700000000000001)</value>
            <value>(&quot;Norman Powell&quot;,2.1000000000000001,0.42999999999999999)</value>
            <value>(&quot;Omer Yurtseven&quot;,0.90000000000000002,0.39000000000000001)</value>
            <value>(&quot;Pat Connaughton&quot;,1.2,0.26000000000000001)</value>
            <value>(&quot;Patty Mills&quot;,2.3999999999999999,0.23000000000000001)</value>
            <value>(&quot;Payton Pritchard&quot;,1.7,0.070000000000000007)</value>
            <value>(&quot;Quentin Grimes&quot;,1.0,0.25)</value>
            <value>(&quot;R.J. Hampton&quot;,2.2999999999999998,0.25)</value>
            <value>(&quot;Raul Neto&quot;,3.2000000000000002,0.029999999999999999)</value>
            <value>(&quot;Rodney McGruder&quot;,0.80000000000000004,0.12)</value>
            <value>(&quot;Rudy Gobert&quot;,1.1000000000000001,2.2200000000000002)</value>
            <value>(&quot;Steven Adams&quot;,3.2999999999999998,0.76000000000000001)</value>
            <value>(&quot;Talen Horton-Tucker&quot;,2.7000000000000002,0.53000000000000003)</value>
            <value>(&quot;Theo Maledon&quot;,1.7,0.12)</value>
            <value>(&quot;Tre Jones&quot;,2.8999999999999999,0.050000000000000003)</value>
            <value>(&quot;Tre Mann&quot;,1.5,0.17999999999999999)</value>
            <value>(&quot;Trent Forrest&quot;,1.7,0.059999999999999998)</value>
            <value>(&quot;Tyler Herro&quot;,3.7999999999999998,0.14000000000000001)</value>
            <value>(&quot;Wayne Ellington&quot;,0.69999999999999996,0.10000000000000001)</value>
            <value>(&quot;Will Barton&quot;,3.7999999999999998,0.47999999999999998)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;Anfernee Simons&quot;,3.8999999999999999,0.11)</value>
            <value>(&quot;Bradley Beal&quot;,6.5999999999999996,0.38)</value>
            <value>(&quot;Cade Cunningham&quot;,5.2999999999999998,0.65000000000000002)</value>
            <value>(&quot;Cameron Payne&quot;,4.7000000000000002,0.31)</value>
            <value>(&quot;Chris Paul&quot;,10.699999999999999,0.31)</value>
            <value>(&quot;Cole Anthony&quot;,5.7000000000000002,0.28000000000000003)</value>
            <value>(&quot;D&apos;Angelo Russell&quot;,7.0999999999999996,0.39000000000000001)</value>
            <value>(&quot;Darius Garland&quot;,8.3000000000000007,0.11)</value>
            <value>(&quot;De&apos;Aaron Fox&quot;,5.5999999999999996,0.41999999999999998)</value>
            <value>(&quot;Dejounte Murray&quot;,9.4000000000000004,0.33000000000000002)</value>
            <value>(&quot;Dennis Schroder&quot;,4.2000000000000002,0.10000000000000001)</value>
            <value>(&quot;Derrick White&quot;,5.5999999999999996,0.85999999999999999)</value>
            <value>(&quot;Devin Booker&quot;,4.9000000000000004,0.41999999999999998)</value>
            <value>(&quot;Devonte&apos; Graham&quot;,4.4000000000000004,0.14999999999999999)</value>
            <value>(&quot;Donovan Mitchell&quot;,5.5,0.20999999999999999)</value>
            <value>(&quot;Eric Bledsoe&quot;,4.2000000000000002,0.34999999999999998)</value>
            <value>(&quot;Fred VanVleet&quot;,6.7000000000000002,0.52000000000000002)</value>
            <value>(&quot;Ja Morant&quot;,6.7000000000000002,0.38)</value>
            <value>(&quot;Jalen Brunson&quot;,5.2000000000000002,0.050000000000000003)</value>
            <value>(&quot;Jalen Suggs&quot;,4.4000000000000004,0.39000000000000001)</value>
            <value>(&quot;James Harden&quot;,10.199999999999999,0.69999999999999996)</value>
            <value>(&quot;Josh Giddey&quot;,6.4000000000000004,0.37)</value>
            <value>(&quot;Josh Hart&quot;,4.0999999999999996,0.27000000000000002)</value>
            <value>(&quot;Jrue Holiday&quot;,6.7000000000000002,0.46000000000000002)</value>
            <value>(&quot;Killian Hayes&quot;,4.2999999999999998,0.48999999999999999)</value>
            <value>(&quot;Kyle Lowry&quot;,7.7999999999999998,0.29999999999999999)</value>
            <value>(&quot;LaMelo Ball&quot;,7.4000000000000004,0.42999999999999999)</value>
            <value>(&quot;Marcus Smart&quot;,5.5999999999999996,0.27000000000000002)</value>
            <value>(&quot;Mike Conley&quot;,5.2999999999999998,0.33000000000000002)</value>
            <value>(&quot;Monte Morris&quot;,4.2999999999999998,0.17000000000000001)</value>
            <value>(&quot;Nikola Jokic&quot;,8.0999999999999996,0.83999999999999997)</value>
            <value>(&quot;Patrick Beverley&quot;,4.7999999999999998,0.93999999999999995)</value>
            <value>(&quot;Reggie Jackson&quot;,4.9000000000000004,0.17999999999999999)</value>
            <value>(&quot;Russell Westbrook&quot;,7.0,0.26000000000000001)</value>
            <value>(&quot;Seth Curry&quot;,4.0,0.23999999999999999)</value>
            <value>(&quot;Spencer Dinwiddie&quot;,5.7999999999999998,0.16)</value>
            <value>(&quot;Stephen Curry&quot;,6.2999999999999998,0.35999999999999999)</value>
            <value>(&quot;Terry Rozier&quot;,4.4000000000000004,0.34000000000000002)</value>
            <value>(&quot;Trae Young&quot;,9.5,0.11)</value>
            <value>(&quot;Tyrese Haliburton&quot;,7.4000000000000004,0.67000000000000004)</value>
            <value>(&quot;Tyrese Maxey&quot;,4.2999999999999998,0.44)</value>
            <value>(&quot;Tyus Jones&quot;,4.0999999999999996,0.029999999999999999)</value>
          </bin>
        </calculation>
      </column>
      <column caption='G (Tt)' datatype='integer' name='[G (TT)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[GP]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mp (Tt)' datatype='integer' name='[MP (TT)]' role='measure' type='quantitative' />
      <column caption='Orb (Tt)' datatype='integer' name='[ORB (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' role='measure' type='quantitative' />
      <column caption='Pf (Tt)' datatype='integer' name='[PF (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[PF]' role='measure' type='quantitative' />
      <column datatype='real' name='[PPGPointsPoints per game.]' role='measure' type='quantitative' />
      <column caption='Pts (Tt)' datatype='integer' name='[PTS (TT)]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*0000' name='[Postal codes]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Rank' datatype='string' name='[RANK]' role='dimension' type='nominal' />
      <column datatype='real' name='[RPGReboundsRebounds per game.]' role='measure' type='quantitative' />
      <column datatype='real' name='[SPGStealsSteals per game.]' role='measure' type='quantitative' />
      <column caption='Stl (Tt)' datatype='integer' name='[STL (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[STL]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[TEAM]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Det&quot;' value='28.Det' />
          <alias key='&quot;Gol&quot;' value='3.Gol' />
          <alias key='&quot;Hou&quot;' value='30.Hou' />
          <alias key='&quot;Ind&quot;' value='26.Ind' />
          <alias key='&quot;Mem&quot;' value='2.Mem' />
          <alias key='&quot;Mia&quot;' value='4.Mia' />
          <alias key='&quot;Mil&quot;' value='5.Mil' />
          <alias key='&quot;Okc&quot;' value='27.Okc' />
          <alias key='&quot;Orl&quot;' value='29.Orl' />
          <alias key='&quot;Pho&quot;' value='1.Pho' />
        </aliases>
      </column>
      <column caption='Tov (Tt)' datatype='integer' name='[TOV (TT)]' role='measure' type='quantitative' />
      <column datatype='real' name='[TOV]' role='measure' type='quantitative' />
      <column caption='Trb (Tt)' datatype='integer' name='[TRB (TT)]' role='measure' type='quantitative' />
      <column caption='TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while' datatype='real' name='[TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while ]' role='measure' type='quantitative' />
      <column datatype='string' name='[Team1, Player value total , GP and 1 more (clusters)]' parent-model='[AnalyticModel:{06f59ee1-3775-4494-b259-461408c275ff}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Team1, Player value total , GP and 1 more]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;Atl&quot;,10.549999999999999,64,6.7000000000000002)</value>
            <value>(&quot;Atl&quot;,17.450000000000003,57,6.7000000000000002)</value>
            <value>(&quot;Atl&quot;,18.830000000000002,61,6.4000000000000004)</value>
            <value>(&quot;Atl&quot;,22.350000000000001,51,7.5999999999999996)</value>
            <value>(&quot;Atl&quot;,26.039999999999999,61,7.9000000000000004)</value>
            <value>(&quot;Bos&quot;,8.8100000000000005,59,7.5)</value>
            <value>(&quot;Bos&quot;,13.09,65,5.0)</value>
            <value>(&quot;Bos&quot;,22.84,49,8.0)</value>
            <value>(&quot;Bos&quot;,23.100000000000001,60,8.6999999999999993)</value>
            <value>(&quot;Bos&quot;,23.75,60,7.7999999999999998)</value>
            <value>(&quot;Bos&quot;,24.82,57,7.7000000000000002)</value>
            <value>(&quot;Bro&quot;,12.82,54,7.2999999999999998)</value>
            <value>(&quot;Bro&quot;,13.16,53,8.5)</value>
            <value>(&quot;Bro&quot;,13.44,58,6.5999999999999996)</value>
            <value>(&quot;Bro&quot;,15.9,61,6.9000000000000004)</value>
            <value>(&quot;Bro&quot;,17.710000000000001,69,5.2000000000000002)</value>
            <value>(&quot;Cha&quot;,16.25,59,6.4000000000000004)</value>
            <value>(&quot;Cha&quot;,19.379999999999999,53,7.2999999999999998)</value>
            <value>(&quot;Cha&quot;,19.530000000000001,61,8.8000000000000007)</value>
            <value>(&quot;Cha&quot;,22.57,64,6.0999999999999996)</value>
            <value>(&quot;Chi&quot;,9.0999999999999996,57,5.7000000000000002)</value>
            <value>(&quot;Chi&quot;,14.26,52,5.2999999999999998)</value>
            <value>(&quot;Chi&quot;,15.930000000000001,64,6.4000000000000004)</value>
            <value>(&quot;Cle&quot;,15.31,54,5.0999999999999996)</value>
            <value>(&quot;Cle&quot;,16.300000000000001,56,6.4000000000000004)</value>
            <value>(&quot;Dal&quot;,9.0999999999999996,54,6.2000000000000002)</value>
            <value>(&quot;Dal&quot;,13.51,57,4.7000000000000002)</value>
            <value>(&quot;Dal&quot;,14.710000000000001,69,6.5)</value>
            <value>(&quot;Dal&quot;,19.120000000000001,67,5.5999999999999996)</value>
            <value>(&quot;Dal&quot;,25.84,66,8.4000000000000004)</value>
            <value>(&quot;Den&quot;,10.19,55,4.4000000000000004)</value>
            <value>(&quot;Den&quot;,12.050000000000001,62,7.0)</value>
            <value>(&quot;Den&quot;,12.889999999999999,57,7.0)</value>
            <value>(&quot;Den&quot;,15.169999999999998,57,8.5999999999999996)</value>
            <value>(&quot;Den&quot;,15.549999999999999,65,5.7000000000000002)</value>
            <value>(&quot;Den&quot;,21.189999999999998,64,7.4000000000000004)</value>
            <value>(&quot;Den&quot;,23.600000000000001,64,7.5)</value>
            <value>(&quot;Den&quot;,24.699999999999999,60,8.1999999999999993)</value>
            <value>(&quot;Det&quot;,14.829999999999998,55,7.0)</value>
            <value>(&quot;Det&quot;,15.4,59,6.9000000000000004)</value>
            <value>(&quot;Det&quot;,17.239999999999998,51,7.7999999999999998)</value>
            <value>(&quot;Det&quot;,18.609999999999999,58,7.5)</value>
            <value>(&quot;Det&quot;,19.379999999999999,59,6.5999999999999996)</value>
            <value>(&quot;Det&quot;,26.050000000000001,70,7.7000000000000002)</value>
            <value>(&quot;Gol&quot;,9.3900000000000006,67,7.7000000000000002)</value>
            <value>(&quot;Gol&quot;,12.24,54,5.5999999999999996)</value>
            <value>(&quot;Gol&quot;,12.73,61,9.1999999999999993)</value>
            <value>(&quot;Gol&quot;,12.98,60,6.2999999999999998)</value>
            <value>(&quot;Gol&quot;,13.84,58,7.0)</value>
            <value>(&quot;Gol&quot;,16.499999999999996,55,7.5)</value>
            <value>(&quot;Gol&quot;,17.390000000000001,70,8.5)</value>
            <value>(&quot;Gol&quot;,24.960000000000001,64,7.9000000000000004)</value>
            <value>(&quot;Gol&quot;,25.859999999999999,62,7.0)</value>
            <value>(&quot;Hou&quot;,12.550000000000001,61,7.2999999999999998)</value>
            <value>(&quot;Hou&quot;,15.06,66,7.0)</value>
            <value>(&quot;Hou&quot;,15.919999999999998,52,4.7999999999999998)</value>
            <value>(&quot;Hou&quot;,18.169999999999998,61,9.8000000000000007)</value>
            <value>(&quot;Hou&quot;,19.43,54,5.7999999999999998)</value>
            <value>(&quot;Hou&quot;,22.290000000000003,65,8.6999999999999993)</value>
            <value>(&quot;Hou&quot;,22.420000000000002,54,6.5)</value>
            <value>(&quot;Ind&quot;,14.620000000000001,57,5.7999999999999998)</value>
            <value>(&quot;Ind&quot;,20.499999999999996,55,6.9000000000000004)</value>
            <value>(&quot;Lac&quot;,14.160000000000002,59,6.0999999999999996)</value>
            <value>(&quot;Lac&quot;,16.140000000000001,58,9.8000000000000007)</value>
            <value>(&quot;Lac&quot;,16.190000000000001,51,6.2999999999999998)</value>
            <value>(&quot;Lac&quot;,17.889999999999997,61,6.2999999999999998)</value>
            <value>(&quot;Lac&quot;,19.129999999999999,54,8.3000000000000007)</value>
            <value>(&quot;Lac&quot;,19.559999999999999,71,7.2999999999999998)</value>
            <value>(&quot;Lac&quot;,21.850000000000001,66,8.3000000000000007)</value>
            <value>(&quot;Lac&quot;,26.609999999999999,67,8.5999999999999996)</value>
            <value>(&quot;Lal&quot;,10.550000000000001,55,4.0)</value>
            <value>(&quot;Lal&quot;,17.050000000000001,51,6.9000000000000004)</value>
            <value>(&quot;Lal&quot;,20.239999999999998,63,7.0999999999999996)</value>
            <value>(&quot;Lal&quot;,20.439999999999998,61,5.7999999999999998)</value>
            <value>(&quot;Mem&quot;,11.460000000000001,60,6.7999999999999998)</value>
            <value>(&quot;Mem&quot;,15.649999999999999,63,8.5)</value>
            <value>(&quot;Mem&quot;,17.030000000000001,57,8.8000000000000007)</value>
            <value>(&quot;Mem&quot;,18.869999999999997,55,8.6999999999999993)</value>
            <value>(&quot;Mem&quot;,19.150000000000002,61,8.6999999999999993)</value>
            <value>(&quot;Mem&quot;,21.98,66,9.4000000000000004)</value>
            <value>(&quot;Mem&quot;,26.489999999999998,69,6.7000000000000002)</value>
            <value>(&quot;Mem&quot;,26.550000000000001,66,7.9000000000000004)</value>
            <value>(&quot;Mia&quot;,13.880000000000001,60,7.7000000000000002)</value>
            <value>(&quot;Mia&quot;,15.23,61,6.4000000000000004)</value>
            <value>(&quot;Mia&quot;,15.719999999999999,57,6.0999999999999996)</value>
            <value>(&quot;Mia&quot;,16.0,52,6.0999999999999996)</value>
            <value>(&quot;Mia&quot;,16.419999999999998,67,5.7000000000000002)</value>
            <value>(&quot;Mia&quot;,16.580000000000002,62,6.4000000000000004)</value>
            <value>(&quot;Mil&quot;,13.0,54,6.2999999999999998)</value>
            <value>(&quot;Mil&quot;,16.899999999999999,54,5.5999999999999996)</value>
            <value>(&quot;Mil&quot;,17.02,58,5.5999999999999996)</value>
            <value>(&quot;Mil&quot;,27.169999999999998,61,7.5999999999999996)</value>
            <value>(&quot;Min&quot;,11.1,59,5.9000000000000004)</value>
            <value>(&quot;Min&quot;,13.080000000000002,52,8.5999999999999996)</value>
            <value>(&quot;Min&quot;,14.780000000000001,66,7.7999999999999998)</value>
            <value>(&quot;Min&quot;,16.340000000000003,67,5.4000000000000004)</value>
            <value>(&quot;Min&quot;,17.25,70,5.7999999999999998)</value>
            <value>(&quot;Min&quot;,19.07,63,6.7999999999999998)</value>
            <value>(&quot;Nor&quot;,10.359999999999999,56,5.5)</value>
            <value>(&quot;Nor&quot;,14.889999999999999,57,6.0999999999999996)</value>
            <value>(&quot;Nor&quot;,18.129999999999999,66,5.7999999999999998)</value>
            <value>(&quot;Nor&quot;,20.100000000000001,50,7.5)</value>
            <value>(&quot;Nor&quot;,20.490000000000002,65,6.9000000000000004)</value>
            <value>(&quot;Nyk&quot;,12.24,59,7.5999999999999996)</value>
            <value>(&quot;Nyk&quot;,16.699999999999999,65,8.0999999999999996)</value>
            <value>(&quot;Nyk&quot;,19.959999999999997,68,7.7000000000000002)</value>
            <value>(&quot;Nyk&quot;,19.969999999999999,63,5.2999999999999998)</value>
            <value>(&quot;Nyk&quot;,20.199999999999999,67,5.7000000000000002)</value>
            <value>(&quot;Okc&quot;,14.350000000000001,53,8.0)</value>
            <value>(&quot;Okc&quot;,14.48,55,6.0)</value>
            <value>(&quot;Okc&quot;,20.34,64,6.5999999999999996)</value>
            <value>(&quot;Okc&quot;,24.349999999999998,51,6.0999999999999996)</value>
            <value>(&quot;Orl&quot;,13.190000000000001,53,7.0)</value>
            <value>(&quot;Orl&quot;,13.299999999999999,52,9.3000000000000007)</value>
            <value>(&quot;Orl&quot;,15.17,60,6.2999999999999998)</value>
            <value>(&quot;Orl&quot;,16.18,59,4.7999999999999998)</value>
            <value>(&quot;Orl&quot;,16.780000000000001,59,6.7000000000000002)</value>
            <value>(&quot;Orl&quot;,21.670000000000002,60,6.9000000000000004)</value>
            <value>(&quot;Orl&quot;,24.200000000000003,71,7.5)</value>
            <value>(&quot;Phi&quot;,12.000000000000002,53,3.7999999999999998)</value>
            <value>(&quot;Phi&quot;,13.859999999999999,57,6.5)</value>
            <value>(&quot;Phi&quot;,14.040000000000001,64,5.7000000000000002)</value>
            <value>(&quot;Phi&quot;,26.279999999999998,61,7.0999999999999996)</value>
            <value>(&quot;Pho&quot;,11.529999999999999,57,5.5)</value>
            <value>(&quot;Pho&quot;,18.060000000000002,64,8.5)</value>
            <value>(&quot;Pho&quot;,18.48,59,6.4000000000000004)</value>
            <value>(&quot;Pho&quot;,19.460000000000001,60,6.5)</value>
            <value>(&quot;Pho&quot;,22.240000000000002,70,5.9000000000000004)</value>
            <value>(&quot;Por&quot;,24.440000000000005,57,7.5999999999999996)</value>
            <value>(&quot;Sac&quot;,16.699999999999999,64,6.5999999999999996)</value>
            <value>(&quot;Sac&quot;,21.440000000000001,55,6.7000000000000002)</value>
            <value>(&quot;Sac&quot;,26.23,66,7.4000000000000004)</value>
            <value>(&quot;San&quot;,10.579999999999998,57,8.1999999999999993)</value>
            <value>(&quot;San&quot;,15.289999999999999,51,5.4000000000000004)</value>
            <value>(&quot;San&quot;,18.09,64,7.0999999999999996)</value>
            <value>(&quot;San&quot;,19.439999999999998,61,6.7000000000000002)</value>
            <value>(&quot;San&quot;,25.27,64,7.2999999999999998)</value>
            <value>(&quot;Tor&quot;,7.6200000000000001,58,7.7000000000000002)</value>
            <value>(&quot;Tor&quot;,16.979999999999997,67,5.0)</value>
            <value>(&quot;Tor&quot;,17.5,60,6.9000000000000004)</value>
            <value>(&quot;Tor&quot;,25.020000000000003,60,5.4000000000000004)</value>
            <value>(&quot;Uta&quot;,7.0600000000000005,54,6.5)</value>
            <value>(&quot;Uta&quot;,17.030000000000001,65,5.9000000000000004)</value>
            <value>(&quot;Uta&quot;,18.360000000000003,57,6.5)</value>
            <value>(&quot;Uta&quot;,22.52,66,7.4000000000000004)</value>
            <value>(&quot;Uta&quot;,23.469999999999999,61,8.5)</value>
            <value>(&quot;Uta&quot;,24.540000000000003,64,6.5999999999999996)</value>
            <value>(&quot;Was&quot;,11.770000000000001,63,5.0)</value>
            <value>(&quot;Was&quot;,14.08,59,7.2999999999999998)</value>
            <value>(&quot;Was&quot;,15.59,68,6.9000000000000004)</value>
            <value>(&quot;Was&quot;,17.75,59,7.4000000000000004)</value>
            <value>(&quot;Was&quot;,19.109999999999999,65,5.7000000000000002)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;Atl&quot;,27.449999999999999,54,7.9000000000000004)</value>
            <value>(&quot;Atl&quot;,42.389999999999993,64,11.5)</value>
            <value>(&quot;Bos&quot;,33.789999999999999,55,9.3000000000000007)</value>
            <value>(&quot;Bos&quot;,40.789999999999999,66,10.699999999999999)</value>
            <value>(&quot;Bro&quot;,42.670000000000002,44,13.199999999999999)</value>
            <value>(&quot;Bro&quot;,44.07,43,11.800000000000001)</value>
            <value>(&quot;Cha&quot;,25.720000000000006,48,8.0)</value>
            <value>(&quot;Cha&quot;,30.07,61,8.5)</value>
            <value>(&quot;Cha&quot;,32.649999999999999,68,9.0)</value>
            <value>(&quot;Cha&quot;,35.939999999999998,63,12.5)</value>
            <value>(&quot;Chi&quot;,34.849999999999994,61,10.6)</value>
            <value>(&quot;Chi&quot;,35.109999999999999,56,9.3000000000000007)</value>
            <value>(&quot;Chi&quot;,39.719999999999992,65,10.199999999999999)</value>
            <value>(&quot;Cle&quot;,23.57,61,10.699999999999999)</value>
            <value>(&quot;Cle&quot;,28.5,61,8.0)</value>
            <value>(&quot;Cle&quot;,30.510000000000002,56,8.0999999999999996)</value>
            <value>(&quot;Cle&quot;,34.229999999999997,55,9.5999999999999996)</value>
            <value>(&quot;Dal&quot;,47.899999999999999,53,14.699999999999999)</value>
            <value>(&quot;Den&quot;,49.990000000000002,63,17.300000000000001)</value>
            <value>(&quot;Det&quot;,29.899999999999999,54,10.0)</value>
            <value>(&quot;Gol&quot;,38.689999999999998,64,10.9)</value>
            <value>(&quot;Hou&quot;,25.600000000000001,48,9.1999999999999993)</value>
            <value>(&quot;Hou&quot;,31.789999999999999,62,9.5)</value>
            <value>(&quot;Ind&quot;,37.449999999999996,47,12.1)</value>
            <value>(&quot;Lal&quot;,33.549999999999997,68,11.4)</value>
            <value>(&quot;Lal&quot;,39.239999999999995,37,9.9000000000000004)</value>
            <value>(&quot;Lal&quot;,46.270000000000003,51,12.4)</value>
            <value>(&quot;Mem&quot;,41.579999999999998,55,12.300000000000001)</value>
            <value>(&quot;Mia&quot;,26.479999999999997,53,9.0)</value>
            <value>(&quot;Mia&quot;,30.420000000000002,57,8.9000000000000004)</value>
            <value>(&quot;Mia&quot;,34.969999999999999,48,10.6)</value>
            <value>(&quot;Mia&quot;,35.109999999999999,45,10.699999999999999)</value>
            <value>(&quot;Mil&quot;,31.869999999999997,57,10.0)</value>
            <value>(&quot;Mil&quot;,32.579999999999998,58,10.300000000000001)</value>
            <value>(&quot;Mil&quot;,49.530000000000001,59,15.300000000000001)</value>
            <value>(&quot;Min&quot;,30.449999999999999,56,9.5)</value>
            <value>(&quot;Min&quot;,31.640000000000001,61,8.3000000000000007)</value>
            <value>(&quot;Min&quot;,40.629999999999995,64,11.6)</value>
            <value>(&quot;Nor&quot;,33.18,63,10.4)</value>
            <value>(&quot;Nor&quot;,35.100000000000001,50,10.5)</value>
            <value>(&quot;Nyk&quot;,28.949999999999999,58,8.0)</value>
            <value>(&quot;Nyk&quot;,36.829999999999998,67,11.5)</value>
            <value>(&quot;Okc&quot;,28.010000000000002,54,10.9)</value>
            <value>(&quot;Okc&quot;,37.310000000000002,54,10.300000000000001)</value>
            <value>(&quot;Orl&quot;,29.169999999999998,59,10.1)</value>
            <value>(&quot;Orl&quot;,29.550000000000001,57,10.0)</value>
            <value>(&quot;Phi&quot;,29.519999999999996,59,8.5)</value>
            <value>(&quot;Phi&quot;,48.189999999999998,56,13.699999999999999)</value>
            <value>(&quot;Pho&quot;,29.760000000000002,49,8.4000000000000004)</value>
            <value>(&quot;Pho&quot;,32.270000000000003,58,10.9)</value>
            <value>(&quot;Pho&quot;,37.420000000000002,59,10.1)</value>
            <value>(&quot;Por&quot;,30.619999999999997,56,11.0)</value>
            <value>(&quot;Sac&quot;,27.960000000000001,51,8.6999999999999993)</value>
            <value>(&quot;Sac&quot;,34.269999999999996,59,9.0)</value>
            <value>(&quot;San&quot;,25.359999999999999,49,8.6999999999999993)</value>
            <value>(&quot;San&quot;,28.140000000000001,58,9.8000000000000007)</value>
            <value>(&quot;San&quot;,41.140000000000001,61,13.6)</value>
            <value>(&quot;Tor&quot;,28.180000000000003,61,8.1999999999999993)</value>
            <value>(&quot;Tor&quot;,34.469999999999999,56,9.0999999999999996)</value>
            <value>(&quot;Tor&quot;,37.369999999999997,56,10.4)</value>
            <value>(&quot;Uta&quot;,34.209999999999994,54,7.9000000000000004)</value>
            <value>(&quot;Uta&quot;,37.049999999999997,57,9.9000000000000004)</value>
            <value>(&quot;Was&quot;,23.960000000000001,46,9.5999999999999996)</value>
            <value>(&quot;Was&quot;,30.609999999999999,65,9.5)</value>
            <value>(&quot;Was&quot;,35.780000000000001,40,10.0)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 3&quot;'>
            <value>(&quot;Atl&quot;,6.2199999999999998,41,5.0)</value>
            <value>(&quot;Atl&quot;,7.910000000000001,40,9.0999999999999996)</value>
            <value>(&quot;Atl&quot;,10.470000000000001,49,7.2999999999999998)</value>
            <value>(&quot;Atl&quot;,16.850000000000001,34,5.5)</value>
            <value>(&quot;Atl&quot;,17.460000000000001,35,7.2999999999999998)</value>
            <value>(&quot;Atl&quot;,18.850000000000001,41,4.9000000000000004)</value>
            <value>(&quot;Bos&quot;,5.8999999999999995,45,5.0)</value>
            <value>(&quot;Bos&quot;,8.3399999999999999,44,4.0)</value>
            <value>(&quot;Bos&quot;,9.0400000000000009,35,5.0999999999999996)</value>
            <value>(&quot;Bos&quot;,15.289999999999999,44,5.5999999999999996)</value>
            <value>(&quot;Bro&quot;,6.6200000000000001,46,5.7999999999999998)</value>
            <value>(&quot;Bro&quot;,11.800000000000001,48,5.7999999999999998)</value>
            <value>(&quot;Bro&quot;,12.039999999999999,36,4.7000000000000002)</value>
            <value>(&quot;Bro&quot;,12.48,32,8.1999999999999993)</value>
            <value>(&quot;Bro&quot;,16.48,35,6.7999999999999998)</value>
            <value>(&quot;Bro&quot;,21.329999999999998,45,7.2000000000000002)</value>
            <value>(&quot;Cha&quot;,5.9199999999999999,45,6.2000000000000002)</value>
            <value>(&quot;Cha&quot;,9.4100000000000001,37,7.5)</value>
            <value>(&quot;Cha&quot;,11.389999999999999,43,6.4000000000000004)</value>
            <value>(&quot;Chi&quot;,6.0899999999999999,38,4.5999999999999996)</value>
            <value>(&quot;Chi&quot;,8.0,48,6.5999999999999996)</value>
            <value>(&quot;Chi&quot;,10.699999999999999,44,4.7999999999999998)</value>
            <value>(&quot;Chi&quot;,17.849999999999998,31,6.9000000000000004)</value>
            <value>(&quot;Chi&quot;,20.170000000000002,49,7.0999999999999996)</value>
            <value>(&quot;Chi&quot;,26.219999999999999,35,8.1999999999999993)</value>
            <value>(&quot;Cle&quot;,5.2300000000000004,40,6.2000000000000002)</value>
            <value>(&quot;Cle&quot;,8.4000000000000004,50,5.2000000000000002)</value>
            <value>(&quot;Cle&quot;,9.9100000000000001,51,5.2000000000000002)</value>
            <value>(&quot;Cle&quot;,22.309999999999999,48,6.2000000000000002)</value>
            <value>(&quot;Cle&quot;,25.449999999999999,34,9.9000000000000004)</value>
            <value>(&quot;Dal&quot;,7.1100000000000003,49,5.9000000000000004)</value>
            <value>(&quot;Dal&quot;,7.4299999999999997,45,5.9000000000000004)</value>
            <value>(&quot;Dal&quot;,8.1099999999999994,36,6.7999999999999998)</value>
            <value>(&quot;Dal&quot;,15.9,50,5.9000000000000004)</value>
            <value>(&quot;Dal&quot;,21.139999999999997,42,6.5999999999999996)</value>
            <value>(&quot;Dal&quot;,31.379999999999995,34,9.0)</value>
            <value>(&quot;Den&quot;,8.2899999999999991,38,6.4000000000000004)</value>
            <value>(&quot;Den&quot;,11.33,40,5.0)</value>
            <value>(&quot;Det&quot;,8.0899999999999999,43,5.7000000000000002)</value>
            <value>(&quot;Det&quot;,9.0,30,6.9000000000000004)</value>
            <value>(&quot;Det&quot;,11.050000000000001,32,8.0999999999999996)</value>
            <value>(&quot;Det&quot;,12.599999999999998,39,6.7999999999999998)</value>
            <value>(&quot;Det&quot;,14.019999999999998,44,4.5999999999999996)</value>
            <value>(&quot;Det&quot;,17.309999999999999,33,9.9000000000000004)</value>
            <value>(&quot;Det&quot;,27.540000000000003,44,7.0)</value>
            <value>(&quot;Gol&quot;,5.3300000000000001,30,6.0)</value>
            <value>(&quot;Gol&quot;,6.7700000000000014,45,4.9000000000000004)</value>
            <value>(&quot;Gol&quot;,25.030000000000001,36,10.199999999999999)</value>
            <value>(&quot;Hou&quot;,9.0899999999999999,34,6.5)</value>
            <value>(&quot;Hou&quot;,10.109999999999999,41,5.9000000000000004)</value>
            <value>(&quot;Hou&quot;,10.539999999999999,44,7.2999999999999998)</value>
            <value>(&quot;Ind&quot;,10.67,42,8.1999999999999993)</value>
            <value>(&quot;Ind&quot;,11.75,39,7.2000000000000002)</value>
            <value>(&quot;Ind&quot;,12.24,51,5.9000000000000004)</value>
            <value>(&quot;Ind&quot;,13.579999999999998,38,6.2000000000000002)</value>
            <value>(&quot;Ind&quot;,14.040000000000001,30,6.2999999999999998)</value>
            <value>(&quot;Ind&quot;,16.699999999999999,49,5.2999999999999998)</value>
            <value>(&quot;Ind&quot;,24.480000000000004,42,6.0999999999999996)</value>
            <value>(&quot;Ind&quot;,28.259999999999998,39,8.6999999999999993)</value>
            <value>(&quot;Ind&quot;,31.259999999999998,35,10.0)</value>
            <value>(&quot;Lac&quot;,10.25,49,6.4000000000000004)</value>
            <value>(&quot;Lac&quot;,10.26,37,8.5)</value>
            <value>(&quot;Lac&quot;,12.84,35,7.9000000000000004)</value>
            <value>(&quot;Lac&quot;,23.939999999999998,46,7.4000000000000004)</value>
            <value>(&quot;Lal&quot;,7.1700000000000008,37,5.0999999999999996)</value>
            <value>(&quot;Lal&quot;,9.379999999999999,40,4.2000000000000002)</value>
            <value>(&quot;Lal&quot;,11.020000000000001,32,6.5)</value>
            <value>(&quot;Lal&quot;,11.32,50,5.0999999999999996)</value>
            <value>(&quot;Lal&quot;,11.5,35,5.5)</value>
            <value>(&quot;Lal&quot;,12.619999999999999,49,7.0)</value>
            <value>(&quot;Mem&quot;,6.5,30,7.4000000000000004)</value>
            <value>(&quot;Mem&quot;,6.6600000000000001,36,4.7000000000000002)</value>
            <value>(&quot;Mem&quot;,9.2800000000000011,43,7.2000000000000002)</value>
            <value>(&quot;Mem&quot;,11.300000000000001,50,4.4000000000000004)</value>
            <value>(&quot;Mia&quot;,12.700000000000001,49,9.5)</value>
            <value>(&quot;Mil&quot;,5.6800000000000006,36,5.7000000000000002)</value>
            <value>(&quot;Mil&quot;,5.8599999999999994,41,6.2000000000000002)</value>
            <value>(&quot;Mil&quot;,6.21,39,4.4000000000000004)</value>
            <value>(&quot;Mil&quot;,7.9900000000000002,39,3.7999999999999998)</value>
            <value>(&quot;Mil&quot;,13.450000000000001,43,6.0)</value>
            <value>(&quot;Min&quot;,5.3499999999999996,41,4.5)</value>
            <value>(&quot;Min&quot;,6.4199999999999999,33,8.5)</value>
            <value>(&quot;Min&quot;,8.5400000000000009,51,6.9000000000000004)</value>
            <value>(&quot;Min&quot;,20.560000000000002,49,8.9000000000000004)</value>
            <value>(&quot;Nor&quot;,5.96,32,5.4000000000000004)</value>
            <value>(&quot;Nor&quot;,7.6699999999999999,32,6.2999999999999998)</value>
            <value>(&quot;Nor&quot;,7.8899999999999997,49,5.7000000000000002)</value>
            <value>(&quot;Nor&quot;,9.1900000000000013,42,7.7999999999999998)</value>
            <value>(&quot;Nor&quot;,10.649999999999999,41,7.9000000000000004)</value>
            <value>(&quot;Nor&quot;,17.850000000000001,39,10.1)</value>
            <value>(&quot;Nor&quot;,26.670000000000002,41,9.0)</value>
            <value>(&quot;Nyk&quot;,4.2000000000000002,30,5.5)</value>
            <value>(&quot;Nyk&quot;,10.1,40,5.2999999999999998)</value>
            <value>(&quot;Nyk&quot;,10.210000000000001,44,4.9000000000000004)</value>
            <value>(&quot;Nyk&quot;,18.989999999999998,37,7.7000000000000002)</value>
            <value>(&quot;Okc&quot;,9.7699999999999996,42,6.7000000000000002)</value>
            <value>(&quot;Okc&quot;,11.35,39,5.9000000000000004)</value>
            <value>(&quot;Okc&quot;,11.73,48,7.0999999999999996)</value>
            <value>(&quot;Okc&quot;,12.52,43,6.5999999999999996)</value>
            <value>(&quot;Okc&quot;,13.1,41,5.2999999999999998)</value>
            <value>(&quot;Okc&quot;,14.82,32,7.4000000000000004)</value>
            <value>(&quot;Okc&quot;,14.849999999999998,44,6.0)</value>
            <value>(&quot;Okc&quot;,15.200000000000001,49,7.5999999999999996)</value>
            <value>(&quot;Orl&quot;,5.7000000000000002,33,6.0999999999999996)</value>
            <value>(&quot;Orl&quot;,6.1599999999999993,31,5.9000000000000004)</value>
            <value>(&quot;Orl&quot;,21.809999999999999,46,8.4000000000000004)</value>
            <value>(&quot;Phi&quot;,5.6100000000000003,48,4.7000000000000002)</value>
            <value>(&quot;Phi&quot;,11.029999999999999,48,4.4000000000000004)</value>
            <value>(&quot;Phi&quot;,14.300000000000002,41,6.9000000000000004)</value>
            <value>(&quot;Phi&quot;,18.98,49,10.300000000000001)</value>
            <value>(&quot;Phi&quot;,23.440000000000001,45,6.7999999999999998)</value>
            <value>(&quot;Pho&quot;,3.5200000000000005,38,4.5)</value>
            <value>(&quot;Pho&quot;,7.4399999999999995,44,8.3000000000000007)</value>
            <value>(&quot;Pho&quot;,19.82,49,9.6999999999999993)</value>
            <value>(&quot;Por&quot;,5.4899999999999993,38,4.0)</value>
            <value>(&quot;Por&quot;,7.1800000000000006,36,5.7000000000000002)</value>
            <value>(&quot;Por&quot;,10.5,44,6.2000000000000002)</value>
            <value>(&quot;Por&quot;,11.539999999999999,50,4.9000000000000004)</value>
            <value>(&quot;Por&quot;,13.030000000000001,42,8.1999999999999993)</value>
            <value>(&quot;Por&quot;,13.140000000000001,37,8.4000000000000004)</value>
            <value>(&quot;Por&quot;,15.879999999999999,37,7.2999999999999998)</value>
            <value>(&quot;Por&quot;,17.549999999999997,48,5.2999999999999998)</value>
            <value>(&quot;Por&quot;,18.160000000000004,42,6.4000000000000004)</value>
            <value>(&quot;Por&quot;,25.530000000000001,40,6.0999999999999996)</value>
            <value>(&quot;Por&quot;,30.849999999999998,36,8.3000000000000007)</value>
            <value>(&quot;Sac&quot;,8.7500000000000018,46,3.7999999999999998)</value>
            <value>(&quot;Sac&quot;,12.510000000000002,45,7.5999999999999996)</value>
            <value>(&quot;Sac&quot;,12.75,35,7.7999999999999998)</value>
            <value>(&quot;Sac&quot;,12.970000000000001,30,7.2000000000000002)</value>
            <value>(&quot;Sac&quot;,16.0,30,7.7999999999999998)</value>
            <value>(&quot;Sac&quot;,16.550000000000001,49,7.0999999999999996)</value>
            <value>(&quot;Sac&quot;,17.770000000000003,30,6.2999999999999998)</value>
            <value>(&quot;Sac&quot;,19.809999999999999,45,7.2000000000000002)</value>
            <value>(&quot;San&quot;,8.6999999999999993,44,8.3000000000000007)</value>
            <value>(&quot;San&quot;,9.2899999999999991,38,5.9000000000000004)</value>
            <value>(&quot;San&quot;,10.58,49,8.8000000000000007)</value>
            <value>(&quot;San&quot;,10.66,51,6.0999999999999996)</value>
            <value>(&quot;San&quot;,12.209999999999999,40,5.7999999999999998)</value>
            <value>(&quot;Tor&quot;,4.8100000000000005,35,5.5999999999999996)</value>
            <value>(&quot;Tor&quot;,7.8500000000000005,40,7.0999999999999996)</value>
            <value>(&quot;Tor&quot;,7.9499999999999993,51,5.5999999999999996)</value>
            <value>(&quot;Tor&quot;,8.4199999999999999,32,6.0)</value>
            <value>(&quot;Tor&quot;,11.290000000000001,43,6.0)</value>
            <value>(&quot;Tor&quot;,27.720000000000002,42,6.9000000000000004)</value>
            <value>(&quot;Uta&quot;,5.8099999999999996,33,7.9000000000000004)</value>
            <value>(&quot;Uta&quot;,8.2200000000000006,50,5.7999999999999998)</value>
            <value>(&quot;Uta&quot;,14.08,45,6.9000000000000004)</value>
            <value>(&quot;Uta&quot;,14.220000000000001,45,6.7000000000000002)</value>
            <value>(&quot;Was&quot;,5.6299999999999999,33,6.7000000000000002)</value>
            <value>(&quot;Was&quot;,8.5,34,4.7000000000000002)</value>
            <value>(&quot;Was&quot;,10.409999999999998,41,6.5)</value>
            <value>(&quot;Was&quot;,23.869999999999997,44,9.3000000000000007)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Team]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Boston Celtics&quot;' value='4.Boston Celtics' />
          <alias key='&quot;Chicago Bulls&quot;' value='5.Chicago Bulls' />
          <alias key='&quot;Detroit Pistons&quot;' value='28.Detroit Pistons' />
          <alias key='&quot;Golden State Warriors&quot;' value='3.Golden State Warriors' />
          <alias key='&quot;Houston Rockets&quot;' value='30.Houston Rockets' />
          <alias key='&quot;Indiana Pacers&quot;' value='26.Indiana Pacers' />
          <alias key='&quot;Memphis Grizzlies&quot;' value='2.Memphis Grizzlies' />
          <alias key='&quot;Miami Heat&quot;' value='4.Miami Heat' />
          <alias key='&quot;Milwaukee Bucks&quot;' value='5.Milwaukee Bucks' />
          <alias key='&quot;New York Knicks&quot;' value='12.New York Knicks' />
          <alias key='&quot;Oklahoma City Thunder&quot;' value='27.Oklahoma City Thunder' />
          <alias key='&quot;Orlando Magic&quot;' value='29.Orlando Magic' />
          <alias key='&quot;Philadelphia 76ers&quot;' value='3.Philadelphia 76ers' />
          <alias key='&quot;Phoenix Suns&quot;' value='1.Phoenix Suns' />
          <alias key='&quot;Washington Wizards&quot;' value='11.Washington Wizards' />
        </aliases>
      </column>
      <column caption='VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds.' datatype='real' name='[VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Players' datatype='table' name='[__tableau_internal_object_id__].[Players_5F313CA7674A440F895141CA65FBBCC8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_DD46C3470A3B414493524B70FB70E96A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='TPG' datatype='table' name='[__tableau_internal_object_id__].[TPG_A55FDFDD16354BFEA0A53B62BC81C91E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='TT' datatype='table' name='[__tableau_internal_object_id__].[TT_347158CB40054B9D97E91069B2A2857E]' role='measure' type='quantitative' />
      <column-instance column='[FULL NAME]' derivation='Attribute' name='[attr:FULL NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[TEAM]' derivation='Attribute' name='[attr:TEAM:nk]' pivot='key' type='nominal' />
      <column-instance column='[FULL NAME]' derivation='None' name='[none:FULL NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
      <column-instance column='[2P%]' derivation='Sum' name='[sum:2P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2PA]' derivation='Sum' name='[sum:2PA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='Sum' name='[sum:3P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P]' derivation='Sum' name='[sum:3P:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3PA (Players)]' derivation='Sum' name='[sum:3PA (Players):qk]' pivot='key' type='quantitative' />
      <column-instance column='[3PA]' derivation='Sum' name='[sum:3PA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AGE]' derivation='Sum' name='[sum:AGE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[APGAssistsAssists per game.]' derivation='Sum' name='[sum:APGAssistsAssists per game.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AST (TT)]' derivation='Sum' name='[sum:AST (TT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[AST]' derivation='Sum' name='[sum:AST:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BLK (TT)]' derivation='Sum' name='[sum:BLK (TT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[BLK]' derivation='Sum' name='[sum:BLK:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BPGBlocksBlocks per game.]' derivation='Sum' name='[sum:BPGBlocksBlocks per game.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6613536086952435713]' derivation='Sum' name='[sum:Calculation_6613536086952435713:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' derivation='Sum' name='[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FG]' derivation='Sum' name='[sum:FG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FGA]' derivation='Sum' name='[sum:FGA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT%]' derivation='Sum' name='[sum:FT%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' derivation='Sum' name='[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PF]' derivation='Sum' name='[sum:PF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PPGPointsPoints per game.]' derivation='Sum' name='[sum:PPGPointsPoints per game.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PTS (TT)]' derivation='Sum' name='[sum:PTS (TT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RPGReboundsRebounds per game.]' derivation='Sum' name='[sum:RPGReboundsRebounds per game.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SPGStealsSteals per game.]' derivation='Sum' name='[sum:SPGStealsSteals per game.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STL (TT)]' derivation='Sum' name='[sum:STL (TT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[STL]' derivation='Sum' name='[sum:STL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TOV]' derivation='Sum' name='[sum:TOV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TRB (TT)]' derivation='Sum' name='[sum:TRB (TT):qk]' pivot='key' type='quantitative' />
      <column-instance column='[VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ]' derivation='Sum' name='[sum:VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. :qk]' pivot='key' type='quantitative' />
      <group auto-hidden='true' hidden='true' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. 1]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[FULL NAME]' />
          <groupfilter function='level-members' level='[APGAssistsAssists per game.]' />
          <groupfilter function='level-members' level='[BPGBlocksBlocks per game.]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. 2]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[FULL NAME]' />
          <groupfilter function='level-members' level='[APGAssistsAssists per game.]' />
          <groupfilter function='level-members' level='[BPGBlocksBlocks per game.]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. 3]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[FULL NAME]' />
          <groupfilter function='level-members' level='[APGAssistsAssists per game.]' />
          <groupfilter function='level-members' level='[BPGBlocksBlocks per game.]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game.]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[FULL NAME]' />
          <groupfilter function='level-members' level='[APGAssistsAssists per game.]' />
          <groupfilter function='level-members' level='[BPGBlocksBlocks per game.]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Team1, Player value total , GP and 1 more]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[TEAM]' />
          <groupfilter function='level-members' level='[Calculation_6613536086952435713]' />
          <groupfilter function='level-members' level='[GP]' />
          <groupfilter function='level-members' level='[VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:FULL NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chandler Hutchison&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cole Anthony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Kaminsky&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moses Moody&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyus Jones&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wendell Carter Jr.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Holiday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandon Clarke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Javin DeLaurier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan Poole&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Josh Giddey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KZ Okpala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mo Bamba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Semi Ojeleye&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caris LeVert&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Donte DiVincenzo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duncan Robinson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juan Toscano-Anderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Kornet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bogdan Bogdanovic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dakota Mathias&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haywood Highsmith&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jalen Suggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Max Strus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Xavier Sneed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Chiozza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Darius Bazley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgios Kalaitzakis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nemanja Bjelica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chris Duarte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Konchar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marcus Garrett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thanasis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;De&apos;Andre Hunter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garrison Mathews&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jarrett Culver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyle Guy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malcolm Brogdon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sandro Mamukelashvili&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abdel Nader&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bobby Portis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameron Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desmond Bane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamidou Diallo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ja Morant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Javonte Smart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Landry Shamet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myles Turner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trae Young&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frank Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jalen Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Killian Tillie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabe Vincent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grayson Allen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jae&apos;Sean Tate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrey Craig&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trey Lyles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cam Reddish&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Damion Lee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ish Wainright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justin Robinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pat Connaughton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Xavier Tillman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameron Oliver&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DaQuan Jeffries&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Domantas Sabonis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jonathan Kuminga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Porter Jr.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevon Looney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paris Bass&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyler Herro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeAndre&apos; Bembry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franz Wagner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan Nwora&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luguentz Dort&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sam Merrill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emanuel Terry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kevin Huerter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marvin Bagley III&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P.J. Tucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santi Aldama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christian Wood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jalen Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Collins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jon Teske&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Caleb Martin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dillon Brooks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gary Payton II&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MJ Walker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyrell Terry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyrese Haliburton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Buddy Hield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cameron Payne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deandre Ayton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devin Booker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeff Dowtin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saddiq Bey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaq Buchanan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;De&apos;Anthony Melton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Otto Porter Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quinndary Weatherspoon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ziaire Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bam Adebayo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chris Silva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dennis Schroder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mikal Bridges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Omer Yurtseven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cade Cunningham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jevon Carter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindell Wigginton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shai Gilgeous-Alexander&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yves Pons&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:FULL NAME:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Bam Adebayo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Andrew Wiggins&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Bam Adebayo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Chris Paul&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Chris Paul&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Deandre Ayton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Desmond Bane&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Devin Booker&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Ja Morant&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Jimmy Butler&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Jordan Poole&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Jrue Holiday&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Khris Middleton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Kyle Lowry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Stephen Curry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Andrew Wiggins&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Bam Adebayo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Chris Paul&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Deandre Ayton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Desmond Bane&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Devin Booker&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Ja Morant&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Jimmy Butler&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Jordan Poole&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Jrue Holiday&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Khris Middleton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Kyle Lowry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Stephen Curry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Stephen Curry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Jimmy Butler&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Kyle Lowry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Desmond Bane&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Khris Middleton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Jrue Holiday&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Andrew Wiggins&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Devin Booker&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Jordan Poole&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Andrew Wiggins&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Bam Adebayo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Andrew Wiggins&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Bam Adebayo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Chris Paul&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Deandre Ayton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Desmond Bane&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Desmond Bane&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Devin Booker&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Ja Morant&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Jimmy Butler&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Jordan Poole&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Jrue Holiday&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Khris Middleton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Kyle Lowry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Stephen Curry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Ja Morant&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Kyle Lowry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Jimmy Butler&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Stephen Curry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Andrew Wiggins&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Bam Adebayo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Chris Paul&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Deandre Ayton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Desmond Bane&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Devin Booker&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Ja Morant&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Jimmy Butler&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Jordan Poole&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Jrue Holiday&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Khris Middleton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Khris Middleton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Kyle Lowry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Stephen Curry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Andrew Wiggins&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Bam Adebayo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Chris Paul&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Deandre Ayton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Deandre Ayton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Desmond Bane&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Devin Booker&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Ja Morant&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Jimmy Butler&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Jordan Poole&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Jrue Holiday&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Khris Middleton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Kyle Lowry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Stephen Curry&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Deandre Ayton&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Chris Paul&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Ja Morant&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Jordan Poole&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Devin Booker&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Jrue Holiday&quot;</bucket>
                <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:FG:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PF:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TRB (TT):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:3P\%:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PTS (TT):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:3P:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:3PA:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BLK (TT):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:2PA:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:STL:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:3PA (Players):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:AST:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:STL (TT):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:2P\%:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:AGE:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:AST (TT):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BLK:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:Calculation_6613536086952435713:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:FGA:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:FT\%:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:TEAM:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Was&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Orl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nyk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Okc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Den&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gol&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Ind&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atl&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Det&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Por&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters) (1)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters) (2)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters) (3)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[Full Name, APGAssistsAssists per game., BPGBlocksBlocks per game. (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[Team1, Player value total , GP and 1 more (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selected Team' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;1&quot;'>
          <calculation class='tableau' formula='&quot;1&quot;' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{06f59ee1-3775-4494-b259-461408c275ff}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[attr:TEAM:nk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:Calculation_6613536086952435713:qk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:GP:qk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. :qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>true</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{44337e7e-6953-40e2-926a-b186373b56b8}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[attr:FULL NAME:nk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>true</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{57cb4c81-7e5a-4643-b286-318489976382}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:Calculation_6613536086952435713:qk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:GP:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{7ccd61d9-5239-424f-a51a-d0eef471d733}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[attr:FULL NAME:nk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>true</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{d133f12a-b3c0-4e6f-bf72-e87635e6e550}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[attr:FULL NAME:nk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>true</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{fa293136-c960-454d-846e-72e7832b3c48}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[attr:FULL NAME:nk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
            <field name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>true</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Players' id='Players_5F313CA7674A440F895141CA65FBBCC8'>
            <properties context=''>
              <relation connection='excel-direct.0432mjo1inwn7a112fvee1nnp8sc' name='Players' table='[Players$]' type='table'>
                <columns gridOrigin='A1:AC698:no:A1:AC698:0' header='yes' outcome='2'>
                  <column datatype='string' name='RANK' ordinal='0' />
                  <column datatype='string' name='FULL NAME' ordinal='1' />
                  <column datatype='string' name='TEAM' ordinal='2' />
                  <column datatype='string' name='POS' ordinal='3' />
                  <column datatype='real' name='AGE' ordinal='4' />
                  <column datatype='integer' name='GP' ordinal='5' />
                  <column datatype='real' name='MPG' ordinal='6' />
                  <column datatype='real' name='MIN%Minutes PercentagePercentage of team minutes used by a player while he was on the floor' ordinal='7' />
                  <column datatype='real' name='USG%Usage RateUsage rate, a.k.a., usage percentage is an estimate of the percentage of team plays used by a player while he was' ordinal='8' />
                  <column datatype='real' name='TO%Turnover RateA metric that estimates the number of turnovers a player commits per 100 possessions' ordinal='9' />
                  <column datatype='integer' name='FTA' ordinal='10' />
                  <column datatype='real' name='FT%' ordinal='11' />
                  <column datatype='integer' name='2PA' ordinal='12' />
                  <column datatype='real' name='2P%' ordinal='13' />
                  <column datatype='integer' name='3PA' ordinal='14' />
                  <column datatype='real' name='3P%' ordinal='15' />
                  <column datatype='real' name='eFG%Effective Shooting PercentageWith eFG%, three-point shots made are worth 50% more than two-point shots made. eFG% Formula=(' ordinal='16' />
                  <column datatype='real' name='TS%True Shooting PercentageTrue shooting percentage is a measure of shooting efficiency that takes into account field goals, 3-' ordinal='17' />
                  <column datatype='real' name='PPGPointsPoints per game.' ordinal='18' />
                  <column datatype='real' name='RPGReboundsRebounds per game.' ordinal='19' />
                  <column datatype='real' name='TRB%Total Rebound PercentageTotal rebound percentage is estimated percentage of available rebounds grabbed by the player while ' ordinal='20' />
                  <column datatype='real' name='APGAssistsAssists per game.' ordinal='21' />
                  <column datatype='real' name='AST%Assist PercentageAssist percentage is an estimated percentage of teammate field goals a player assisted while the player is' ordinal='22' />
                  <column datatype='real' name='SPGStealsSteals per game.' ordinal='23' />
                  <column datatype='real' name='BPGBlocksBlocks per game.' ordinal='24' />
                  <column datatype='real' name='TOPGTurnoversTurnovers per game.' ordinal='25' />
                  <column datatype='real' name='VIVersatility IndexVersatility index is a metric that measures a playerâ€™s ability to produce in points, assists, and rebounds. ' ordinal='26' />
                  <column datatype='real' name='ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio' ordinal='27' />
                  <column datatype='real' name='DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sheet1' id='Sheet1_DD46C3470A3B414493524B70FB70E96A'>
            <properties context=''>
              <relation connection='excel-direct.040zki00ihpcuw1d8qksu0zbzui0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D31:no:A1:D31:0' header='yes' outcome='2'>
                  <column datatype='string' name='Teams' ordinal='0' />
                  <column datatype='integer' name='Postal codes' ordinal='1' />
                  <column datatype='real' name='Latitude' ordinal='2' />
                  <column datatype='real' name='Longitude' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='TPG' id='TPG_A55FDFDD16354BFEA0A53B62BC81C91E'>
            <properties context=''>
              <relation connection='excel-direct.0432mjo1inwn7a112fvee1nnp8sc' name='TPG' table='[TPG$]' type='table'>
                <columns gridOrigin='A1:Y32:no:A1:Y32:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rk' ordinal='0' />
                  <column datatype='string' name='Team' ordinal='1' />
                  <column datatype='integer' name='G' ordinal='2' />
                  <column datatype='real' name='MP' ordinal='3' />
                  <column datatype='real' name='FG' ordinal='4' />
                  <column datatype='real' name='FGA' ordinal='5' />
                  <column datatype='real' name='FG%' ordinal='6' />
                  <column datatype='real' name='3P' ordinal='7' />
                  <column datatype='real' name='3PA' ordinal='8' />
                  <column datatype='real' name='3P%' ordinal='9' />
                  <column datatype='real' name='2P' ordinal='10' />
                  <column datatype='real' name='2PA' ordinal='11' />
                  <column datatype='real' name='2P%' ordinal='12' />
                  <column datatype='real' name='FT' ordinal='13' />
                  <column datatype='real' name='FTA' ordinal='14' />
                  <column datatype='real' name='FT%' ordinal='15' />
                  <column datatype='real' name='ORB' ordinal='16' />
                  <column datatype='real' name='DRB' ordinal='17' />
                  <column datatype='real' name='TRB' ordinal='18' />
                  <column datatype='real' name='AST' ordinal='19' />
                  <column datatype='real' name='STL' ordinal='20' />
                  <column datatype='real' name='BLK' ordinal='21' />
                  <column datatype='real' name='TOV' ordinal='22' />
                  <column datatype='real' name='PF' ordinal='23' />
                  <column datatype='real' name='PTS' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='TT' id='TT_347158CB40054B9D97E91069B2A2857E'>
            <properties context=''>
              <relation connection='excel-direct.0432mjo1inwn7a112fvee1nnp8sc' name='TT' table='[TT$]' type='table'>
                <columns gridOrigin='A1:X31:no:A1:X31:0' header='yes' outcome='6'>
                  <column datatype='string' name='Team' ordinal='0' />
                  <column datatype='integer' name='G' ordinal='1' />
                  <column datatype='integer' name='MP' ordinal='2' />
                  <column datatype='integer' name='FG' ordinal='3' />
                  <column datatype='integer' name='FGA' ordinal='4' />
                  <column datatype='real' name='FG%' ordinal='5' />
                  <column datatype='integer' name='3P' ordinal='6' />
                  <column datatype='integer' name='3PA' ordinal='7' />
                  <column datatype='real' name='3P%' ordinal='8' />
                  <column datatype='integer' name='2P' ordinal='9' />
                  <column datatype='integer' name='2PA' ordinal='10' />
                  <column datatype='real' name='2P%' ordinal='11' />
                  <column datatype='integer' name='FT' ordinal='12' />
                  <column datatype='integer' name='FTA' ordinal='13' />
                  <column datatype='real' name='FT%' ordinal='14' />
                  <column datatype='integer' name='ORB' ordinal='15' />
                  <column datatype='integer' name='DRB' ordinal='16' />
                  <column datatype='integer' name='TRB' ordinal='17' />
                  <column datatype='integer' name='AST' ordinal='18' />
                  <column datatype='integer' name='STL' ordinal='19' />
                  <column datatype='integer' name='BLK' ordinal='20' />
                  <column datatype='integer' name='TOV' ordinal='21' />
                  <column datatype='integer' name='PF' ordinal='22' />
                  <column datatype='integer' name='PTS' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Team]' />
              <expression op='[TEAM]' />
            </expression>
            <first-end-point object-id='TPG_A55FDFDD16354BFEA0A53B62BC81C91E' />
            <second-end-point object-id='Players_5F313CA7674A440F895141CA65FBBCC8' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Team]' />
              <expression op='[Teams]' />
            </expression>
            <first-end-point object-id='TPG_A55FDFDD16354BFEA0A53B62BC81C91E' />
            <second-end-point object-id='Sheet1_DD46C3470A3B414493524B70FB70E96A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Team]' />
              <expression op='[Team (TT)]' />
            </expression>
            <first-end-point object-id='TPG_A55FDFDD16354BFEA0A53B62BC81C91E' />
            <second-end-point object-id='TT_347158CB40054B9D97E91069B2A2857E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_6BABAFC828D24BA888786B19A55A74E9]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Top' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Full Name' />
        <param name='target' value='Top' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bottom'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 3 players from bottom 5 teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' />
          </datasources>
          <datasource-dependencies datasource='federated.0kzed1m1o7u4ol1et66d00s36ojw'>
            <column datatype='real' name='[APGAssistsAssists per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' role='measure' type='quantitative' />
            <column caption='Full Name' datatype='string' name='[FULL NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' role='measure' type='quantitative' />
            <column datatype='real' name='[PPGPointsPoints per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[RPGReboundsRebounds per game.]' role='measure' type='quantitative' />
            <column caption='Team1' datatype='string' name='[TEAM]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Det&quot;' value='28.Det' />
                <alias key='&quot;Gol&quot;' value='3.Gol' />
                <alias key='&quot;Hou&quot;' value='30.Hou' />
                <alias key='&quot;Ind&quot;' value='26.Ind' />
                <alias key='&quot;Mem&quot;' value='2.Mem' />
                <alias key='&quot;Mia&quot;' value='4.Mia' />
                <alias key='&quot;Mil&quot;' value='5.Mil' />
                <alias key='&quot;Okc&quot;' value='27.Okc' />
                <alias key='&quot;Orl&quot;' value='29.Orl' />
                <alias key='&quot;Pho&quot;' value='1.Pho' />
              </aliases>
            </column>
            <column-instance column='[PPGPointsPoints per game.]' derivation='Max' name='[max:PPGPointsPoints per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FULL NAME]' derivation='None' name='[none:FULL NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[APGAssistsAssists per game.]' derivation='Sum' name='[sum:APGAssistsAssists per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' derivation='Sum' name='[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' derivation='Sum' name='[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPGPointsPoints per game.]' derivation='Sum' name='[sum:PPGPointsPoints per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RPGReboundsRebounds per game.]' derivation='Sum' name='[sum:RPGReboundsRebounds per game.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[max:PPGPointsPoints per game.:qk]' included-values='in-range'>
            <min>10.5</min>
            <max>24.300000000000001</max>
          </filter>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cade Cunningham&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Caris LeVert&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Christian Wood&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cole Anthony&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Darius Bazley&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Domantas Sabonis&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Franz Wagner&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jae&apos;Sean Tate&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jerami Grant&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Josh Giddey&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Kevin Porter Jr.&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Myles Turner&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Saddiq Bey&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Shai Gilgeous-Alexander&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Wendell Carter Jr.&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Det&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Hou&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Ind&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Okc&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Orl&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[max:PPGPointsPoints per game.:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk] + ([federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values] + ([federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk] + [federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk])))</rows>
        <cols>([federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk] / [federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk])</cols>
      </table>
      <simple-id uuid='{820FCB38-921E-4827-B6CE-0C7C84A1C27B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' />
          </datasources>
          <datasource-dependencies datasource='federated.0kzed1m1o7u4ol1et66d00s36ojw'>
            <column datatype='real' name='[PF]' role='measure' type='quantitative' />
            <column datatype='real' name='[TOV]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Boston Celtics&quot;' value='4.Boston Celtics' />
                <alias key='&quot;Chicago Bulls&quot;' value='5.Chicago Bulls' />
                <alias key='&quot;Detroit Pistons&quot;' value='28.Detroit Pistons' />
                <alias key='&quot;Golden State Warriors&quot;' value='3.Golden State Warriors' />
                <alias key='&quot;Houston Rockets&quot;' value='30.Houston Rockets' />
                <alias key='&quot;Indiana Pacers&quot;' value='26.Indiana Pacers' />
                <alias key='&quot;Memphis Grizzlies&quot;' value='2.Memphis Grizzlies' />
                <alias key='&quot;Miami Heat&quot;' value='4.Miami Heat' />
                <alias key='&quot;Milwaukee Bucks&quot;' value='5.Milwaukee Bucks' />
                <alias key='&quot;New York Knicks&quot;' value='12.New York Knicks' />
                <alias key='&quot;Oklahoma City Thunder&quot;' value='27.Oklahoma City Thunder' />
                <alias key='&quot;Orlando Magic&quot;' value='29.Orlando Magic' />
                <alias key='&quot;Philadelphia 76ers&quot;' value='3.Philadelphia 76ers' />
                <alias key='&quot;Phoenix Suns&quot;' value='1.Phoenix Suns' />
                <alias key='&quot;Washington Wizards&quot;' value='11.Washington Wizards' />
              </aliases>
            </column>
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[PF]' derivation='Sum' name='[sum:PF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOV]' derivation='Sum' name='[sum:TOV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Detroit Pistons&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Golden State Warriors&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Houston Rockets&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Indiana Pacers&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Memphis Grizzlies&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Miami Heat&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Milwaukee Bucks&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Oklahoma City Thunder&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Orlando Magic&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Phoenix Suns&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PF:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='height' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]' value='133' />
            <format attr='width' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk]' value='62' />
            <format attr='width' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PF:qk]' value='62' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]' value='61' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline0' value='#f7f1f67f' />
            <format attr='stroke-color' id='refline0' value='#59a14f4b' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-size' id='refline1' value='3' />
            <format attr='stroke-color' id='refline1' value='#e157594b' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk]' z-order='1' />
            <reference-line axis-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PF:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PF:qk]' z-order='2' />
            <reference-line axis-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk]' z-order='3' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PF:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TOV:qk] + [federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PF:qk])</rows>
        <cols>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]</cols>
      </table>
      <simple-id uuid='{B2BF0377-064C-4F77-9996-500535DB19A4}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Impactful players on top and bottom teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' />
          </datasources>
          <datasource-dependencies datasource='federated.0kzed1m1o7u4ol1et66d00s36ojw'>
            <column datatype='real' name='[APGAssistsAssists per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[BPGBlocksBlocks per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' role='measure' type='quantitative' />
            <column caption='Full Name' datatype='string' name='[FULL NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' role='measure' type='quantitative' />
            <column datatype='real' name='[PPGPointsPoints per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[RPGReboundsRebounds per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[SPGStealsSteals per game.]' role='measure' type='quantitative' />
            <column caption='Team1' datatype='string' name='[TEAM]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Det&quot;' value='28.Det' />
                <alias key='&quot;Gol&quot;' value='3.Gol' />
                <alias key='&quot;Hou&quot;' value='30.Hou' />
                <alias key='&quot;Ind&quot;' value='26.Ind' />
                <alias key='&quot;Mem&quot;' value='2.Mem' />
                <alias key='&quot;Mia&quot;' value='4.Mia' />
                <alias key='&quot;Mil&quot;' value='5.Mil' />
                <alias key='&quot;Okc&quot;' value='27.Okc' />
                <alias key='&quot;Orl&quot;' value='29.Orl' />
                <alias key='&quot;Pho&quot;' value='1.Pho' />
              </aliases>
            </column>
            <column-instance column='[FULL NAME]' derivation='None' name='[none:FULL NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[APGAssistsAssists per game.]' derivation='Sum' name='[sum:APGAssistsAssists per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BPGBlocksBlocks per game.]' derivation='Sum' name='[sum:BPGBlocksBlocks per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' derivation='Sum' name='[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' derivation='Sum' name='[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPGPointsPoints per game.]' derivation='Sum' name='[sum:PPGPointsPoints per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RPGReboundsRebounds per game.]' derivation='Sum' name='[sum:RPGReboundsRebounds per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SPGStealsSteals per game.]' derivation='Sum' name='[sum:SPGStealsSteals per game.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BPGBlocksBlocks per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:SPGStealsSteals per game.:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Andrew Wiggins&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Bam Adebayo&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cade Cunningham&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Caris LeVert&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Chris Paul&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Christian Wood&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cole Anthony&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Darius Bazley&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Deandre Ayton&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Desmond Bane&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Devin Booker&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Domantas Sabonis&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Franz Wagner&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Giannis Antetokounmpo&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Ja Morant&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jae&apos;Sean Tate&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jaren Jackson Jr.&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jerami Grant&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jimmy Butler&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jordan Poole&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Josh Giddey&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jrue Holiday&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Kevin Porter Jr.&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Khris Middleton&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Myles Turner&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Saddiq Bey&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Shai Gilgeous-Alexander&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Stephen Curry&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Tyler Herro&quot;' />
              <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Wendell Carter Jr.&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Det&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Gol&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Hou&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Ind&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Mem&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Mia&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Mil&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Okc&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Orl&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Pho&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]' value='21' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]' z-order='1' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values] + ([federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk] + [federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]))</rows>
        <cols>([federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk] / [federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk])</cols>
      </table>
      <simple-id uuid='{03773002-097B-4CC5-9CDF-E1A207D3DBEE}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' />
          </datasources>
          <datasource-dependencies datasource='federated.0kzed1m1o7u4ol1et66d00s36ojw'>
            <column datatype='real' name='[AGE]' role='measure' type='quantitative' />
            <column datatype='real' name='[APGAssistsAssists per game.]' role='measure' type='quantitative' />
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{57cb4c81-7e5a-4643-b286-318489976382}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[BPGBlocksBlocks per game.]' role='measure' type='quantitative' />
            <column caption='Player value total ' datatype='real' name='[Calculation_6613536086952435713]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[APGAssistsAssists per game.] + [BPGBlocksBlocks per game.] + [PPGPointsPoints per game.] + [RPGReboundsRebounds per game.] +  [SPGStealsSteals per game.]' />
            </column>
            <column caption='Full Name' datatype='string' name='[FULL NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[GP]' role='measure' type='quantitative' />
            <column datatype='real' name='[PPGPointsPoints per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[RPGReboundsRebounds per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[SPGStealsSteals per game.]' role='measure' type='quantitative' />
            <column caption='Team1' datatype='string' name='[TEAM]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Det&quot;' value='28.Det' />
                <alias key='&quot;Gol&quot;' value='3.Gol' />
                <alias key='&quot;Hou&quot;' value='30.Hou' />
                <alias key='&quot;Ind&quot;' value='26.Ind' />
                <alias key='&quot;Mem&quot;' value='2.Mem' />
                <alias key='&quot;Mia&quot;' value='4.Mia' />
                <alias key='&quot;Mil&quot;' value='5.Mil' />
                <alias key='&quot;Okc&quot;' value='27.Okc' />
                <alias key='&quot;Orl&quot;' value='29.Orl' />
                <alias key='&quot;Pho&quot;' value='1.Pho' />
              </aliases>
            </column>
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FULL NAME]' derivation='None' name='[none:FULL NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[GP]' derivation='None' name='[none:GP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[AGE]' derivation='Sum' name='[sum:AGE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6613536086952435713]' derivation='Sum' name='[sum:Calculation_6613536086952435713:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:AdhocCluster:2:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AdhocCluster:2:ok]' member='1' />
              <groupfilter function='member' level='[none:AdhocCluster:2:ok]' member='2' />
              <groupfilter function='member' level='[none:AdhocCluster:2:ok]' member='3' />
              <groupfilter function='member' level='[none:AdhocCluster:2:ok]' member='4' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:GP:qk]' included-values='in-range'>
            <min>30</min>
          </filter>
          <slices>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:GP:qk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:AdhocCluster:2:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:GP:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:AdhocCluster:2:ok]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:AGE:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:Calculation_6613536086952435713:qk]</rows>
        <cols>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:GP:qk]</cols>
      </table>
      <simple-id uuid='{327B9C53-9F2E-43FC-A720-F4B95EDAE5AF}' />
    </worksheet>
    <worksheet name='TOP VS BOT'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 and Bottom 5 Teams </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' />
          </datasources>
          <datasource-dependencies datasource='federated.0kzed1m1o7u4ol1et66d00s36ojw'>
            <column datatype='real' name='[2P%]' role='measure' type='quantitative' />
            <column datatype='real' name='[3P%]' role='measure' type='quantitative' />
            <column caption='Ast (Tt)' datatype='integer' name='[AST (TT)]' role='measure' type='quantitative' />
            <column caption='Blk (Tt)' datatype='integer' name='[BLK (TT)]' role='measure' type='quantitative' />
            <column caption='Pts (Tt)' datatype='integer' name='[PTS (TT)]' role='measure' type='quantitative' />
            <column caption='Stl (Tt)' datatype='integer' name='[STL (TT)]' role='measure' type='quantitative' />
            <column caption='Trb (Tt)' datatype='integer' name='[TRB (TT)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Boston Celtics&quot;' value='4.Boston Celtics' />
                <alias key='&quot;Chicago Bulls&quot;' value='5.Chicago Bulls' />
                <alias key='&quot;Detroit Pistons&quot;' value='28.Detroit Pistons' />
                <alias key='&quot;Golden State Warriors&quot;' value='3.Golden State Warriors' />
                <alias key='&quot;Houston Rockets&quot;' value='30.Houston Rockets' />
                <alias key='&quot;Indiana Pacers&quot;' value='26.Indiana Pacers' />
                <alias key='&quot;Memphis Grizzlies&quot;' value='2.Memphis Grizzlies' />
                <alias key='&quot;Miami Heat&quot;' value='4.Miami Heat' />
                <alias key='&quot;Milwaukee Bucks&quot;' value='5.Milwaukee Bucks' />
                <alias key='&quot;New York Knicks&quot;' value='12.New York Knicks' />
                <alias key='&quot;Oklahoma City Thunder&quot;' value='27.Oklahoma City Thunder' />
                <alias key='&quot;Orlando Magic&quot;' value='29.Orlando Magic' />
                <alias key='&quot;Philadelphia 76ers&quot;' value='3.Philadelphia 76ers' />
                <alias key='&quot;Phoenix Suns&quot;' value='1.Phoenix Suns' />
                <alias key='&quot;Washington Wizards&quot;' value='11.Washington Wizards' />
              </aliases>
            </column>
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[2P%]' derivation='Sum' name='[sum:2P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3P%]' derivation='Sum' name='[sum:3P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AST (TT)]' derivation='Sum' name='[sum:AST (TT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[BLK (TT)]' derivation='Sum' name='[sum:BLK (TT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[PTS (TT)]' derivation='Sum' name='[sum:PTS (TT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[STL (TT)]' derivation='Sum' name='[sum:STL (TT):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TRB (TT)]' derivation='Sum' name='[sum:TRB (TT):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:TRB (TT):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:AST (TT):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:STL (TT):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:BLK (TT):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PTS (TT):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:2P\%:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:3P\%:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Detroit Pistons&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Golden State Warriors&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Houston Rockets&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Indiana Pacers&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Memphis Grizzlies&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Miami Heat&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Milwaukee Bucks&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Oklahoma City Thunder&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Orlando Magic&quot;' />
              <groupfilter function='member' level='[none:Team:nk]' member='&quot;Phoenix Suns&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]</rows>
        <cols>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]</cols>
      </table>
      <simple-id uuid='{9075858D-A6B3-4A8C-B604-91A245DF007B}' />
    </worksheet>
    <worksheet name='Tabpy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kzed1m1o7u4ol1et66d00s36ojw'>
            <column caption='2p% (Tt)' datatype='real' name='[2P% (TT)]' role='measure' type='quantitative' />
            <column datatype='real' name='[2P%]' role='measure' type='quantitative' />
            <column caption='3p% (Tt)' datatype='real' name='[3P% (TT)]' role='measure' type='quantitative' />
            <column datatype='real' name='[3P%]' role='measure' type='quantitative' />
            <column caption='Team value' datatype='real' name='[Calculation_6700652592648146951]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([2P% (TT)]+[3P% (TT)]+[FT% (TT)])/3' />
            </column>
            <column caption='Ft% (Tt)' datatype='real' name='[FT% (TT)]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' datatype='integer' default-format='*0000' name='[Postal codes]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Teams]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal codes]' derivation='None' name='[none:Postal codes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Teams]' derivation='None' name='[none:Teams:nk]' pivot='key' type='nominal' />
            <column-instance column='[2P%]' derivation='Sum' name='[sum:2P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3P%]' derivation='Sum' name='[sum:3P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6700652592648146951]' derivation='Sum' name='[sum:Calculation_6700652592648146951:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Postal codes:ok]'>
            <groupfilter from='2114' function='range' level='[none:Postal codes:ok]' to='97227' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Teams:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Atlanta Hawks&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Boston Celtics&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Brooklyn Nets&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Charlotte Hornets&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Chicago Bulls&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Cleveland Cavaliers&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Dallas Mavericks&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Denver Nuggets&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Detroit Pistons&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Golden State Warriors&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Houston Rockets&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Indiana Pacers&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Los Angeles Clippers&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Los Angeles Lakers&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Memphis Grizzlies&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Miami Heat&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Milwaukee Bucks&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Minnesota Timberwolves&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;New Orleans Pelicans&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;New York Knicks&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Oklahoma City Thunder&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Orlando Magic&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Philadelphia 76ers&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Phoenix Suns&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Portland Trail Blazers&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Sacramento Kings&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;San Antonio Spurs&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Utah Jazz&quot;' />
              <groupfilter function='member' level='[none:Teams:nk]' member='&quot;Washington Wizards&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Postal codes:ok]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Teams:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[avg:Longitude:qk]' field-type='quantitative' max='-7661761.3154090829' min='-14045539.389279263' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[avg:Latitude:qk]' field-type='quantitative' max='6647630.6427095551' min='2477440.6869868846' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Teams:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Postal codes:ok]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Teams:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:2P%:qk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:3P%:qk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:Calculation_6700652592648146951:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3756906986236572' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[avg:Latitude:qk]</rows>
        <cols>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{0E3959DE-B5F6-4E26-AA67-D47A6F92B9F7}' />
    </worksheet>
    <worksheet name='Top'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 3 players from 5 highest ranked teams in league</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TPG (legit  NBA Stats 202122 All Player Statistics in one Page)' name='federated.0kzed1m1o7u4ol1et66d00s36ojw' />
          </datasources>
          <datasource-dependencies datasource='federated.0kzed1m1o7u4ol1et66d00s36ojw'>
            <column datatype='real' name='[APGAssistsAssists per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' role='measure' type='quantitative' />
            <column caption='Full Name' datatype='string' name='[FULL NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' role='measure' type='quantitative' />
            <column datatype='real' name='[PPGPointsPoints per game.]' role='measure' type='quantitative' />
            <column datatype='real' name='[RPGReboundsRebounds per game.]' role='measure' type='quantitative' />
            <column caption='Team1' datatype='string' name='[TEAM]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Det&quot;' value='28.Det' />
                <alias key='&quot;Gol&quot;' value='3.Gol' />
                <alias key='&quot;Hou&quot;' value='30.Hou' />
                <alias key='&quot;Ind&quot;' value='26.Ind' />
                <alias key='&quot;Mem&quot;' value='2.Mem' />
                <alias key='&quot;Mia&quot;' value='4.Mia' />
                <alias key='&quot;Mil&quot;' value='5.Mil' />
                <alias key='&quot;Okc&quot;' value='27.Okc' />
                <alias key='&quot;Orl&quot;' value='29.Orl' />
                <alias key='&quot;Pho&quot;' value='1.Pho' />
              </aliases>
            </column>
            <column-instance column='[PPGPointsPoints per game.]' derivation='Max' name='[max:PPGPointsPoints per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FULL NAME]' derivation='None' name='[none:FULL NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[APGAssistsAssists per game.]' derivation='Sum' name='[sum:APGAssistsAssists per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall]' derivation='Sum' name='[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio]' derivation='Sum' name='[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPGPointsPoints per game.]' derivation='Sum' name='[sum:PPGPointsPoints per game.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RPGReboundsRebounds per game.]' derivation='Sum' name='[sum:RPGReboundsRebounds per game.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[max:PPGPointsPoints per game.:qk]' included-values='in-range'>
            <min>10.0</min>
          </filter>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:FULL NAME:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Bobby Portis&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Bogdan Bogdanovic&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Brandon Clarke&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Buddy Hield&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cam Reddish&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cameron Johnson&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cameron Oliver&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Cameron Payne&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Chris Duarte&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Clint Capela&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Danilo Gallinari&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;De&apos;Andre Hunter&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Dennis Schroder&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Dillon Brooks&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Duncan Robinson&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Eric Gordon&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Frank Jackson&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Frank Kaminsky&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Garrison Mathews&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Gary Harris&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Grayson Allen&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Hamidou Diallo&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jalen Green&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jalen Smith&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Jalen Suggs&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;John Collins&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Justin Holiday&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Kevin Huerter&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Klay Thompson&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Luguentz Dort&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Malcolm Brogdon&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Marvin Bagley III&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Max Strus&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Mikal Bridges&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Mo Bamba&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Pat Connaughton&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Terrence Ross&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Trey Lyles&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Tyler Herro&quot;' />
                <groupfilter function='member' level='[none:FULL NAME:nk]' member='&quot;Tyrese Haliburton&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Gol&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Mem&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Mia&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Mil&quot;' />
              <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;Pho&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[max:PPGPointsPoints per game.:qk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</column>
            <column>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]' />
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]' />
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]' />
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]' />
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:APGAssistsAssists per game.:qk]' />
              <lod column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:RPGReboundsRebounds per game.:qk]' />
              <color column='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk] + ([federated.0kzed1m1o7u4ol1et66d00s36ojw].[Multiple Values] + ([federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:DRTGDefensive RatingIndividual defensive rating estimates how many points the player allowed per 100 possessions he individuall:qk] + [federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:ORTGOffensive RatingIndividual offensive rating is the number of points produced by a player per 100 total individual possessio:qk])))</rows>
        <cols>([federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk] / [federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk])</cols>
      </table>
      <simple-id uuid='{4251AEB2-65D3-4C69-A230-C656D64EEA70}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type-v2='layout-basic' w='87115' x='586' y='1042'>
              <zone h='97916' id='3' name='Sheet 5' w='87115' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97916' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='1042'>
              <zone h='21615' id='8' name='Sheet 5' pane-specification-id='2' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type-v2='color' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6771' id='9' name='Sheet 5' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type-v2='highlighter' w='11713' x='87701' y='22657'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6771' id='10' name='Sheet 5' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]' type-v2='highlighter' w='11713' x='87701' y='29428'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12110' id='15' type-v2='text' w='11713' x='87701' y='36199'>
                <formatted-text>
                  <run>The extreme peaks in the top 5 teams datasets is represented by MVP candidates for the 2021/2022 season. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='40886' id='16' type-v2='text' w='11713' x='87701' y='48309'>
                <formatted-text>
                  <run>Only the 3 most impactful players on the sampled teams are represented. This was based on their individual statistics and their NBA fantasy rankings. (A system that ranks NBA players based on their statistics.)

The value of the lower teams are lower than the higher ranked teams. Suggesting that their most reliable players are not performing at the same calibre of higher ranked teams. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='29' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='6771' id='9' name='Sheet 5' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type-v2='highlighter' w='11713' x='87701' y='22657'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='10' name='Sheet 5' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]' type-v2='highlighter' w='11713' x='87701' y='29428'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Sheet 5' w='87115' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21615' id='8' name='Sheet 5' pane-specification-id='2' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type-v2='color' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12110' id='15' type-v2='text' w='11713' x='87701' y='36199'>
                  <formatted-text>
                    <run>The extreme peaks in the top 5 teams datasets is represented by MVP candidates for the 2021/2022 season. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='40886' id='16' type-v2='text' w='11713' x='87701' y='48309'>
                  <formatted-text>
                    <run>Only the 3 most impactful players on the sampled teams are represented. This was based on their individual statistics and their NBA fantasy rankings. (A system that ranks NBA players based on their statistics.)

The value of the lower teams are lower than the higher ranked teams. Suggesting that their most reliable players are not performing at the same calibre of higher ranked teams. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{81DE7654-99B2-4DDF-B378-4A361D1B7107}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card type='measures' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:PPGPointsPoints per game.:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F5DE253-88FF-4222-9D2D-A3CC1C2B8633}' />
    </window>
    <window class='worksheet' name='Bottom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='69' type='filters' />
            <card size='346' type='marks' />
            <card size='70' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type='color' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:RANK:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4AA81FD7-A0BC-46A5-8F6F-6EE56A4DDF07}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type='color' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type='highlighter' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76BDCD72-E289-4903-A2E2-2F2F1CE13F3D}' />
    </window>
    <window class='worksheet' name='TOP VS BOT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='93'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type='color' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type='highlighter' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D8F6F29-B786-4B69-97C0-87721A4EF09C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]' type='color' />
          </strip>
          <strip size='160'>
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83DA1295-190B-438A-A774-7E0F5F1EC6B5}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{2CFD732B-3770-49FE-9182-1B6C616964CC}' />
    </window>
    <window class='worksheet' name='Tabpy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Teams:nk]' type='color' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Teams:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:GP:qk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:POS:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Postal codes:ok]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:Teams:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[sum:Calculation_6613536086952435713:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{412D328B-0D2D-459C-93CD-DE18C841F945}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:AdhocCluster:2:ok]' type='color' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]' type='highlighter' />
            <card param='[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:AdhocCluster:2:ok]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:FULL NAME:nk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:GP:qk]</field>
            <field>[federated.0kzed1m1o7u4ol1et66d00s36ojw].[none:TEAM:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F156EA01-6CBA-4881-86C6-88AAC660B47B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Bottom' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      f0/X+0V94Nl+9i7q9i55WZknac+Ppe3fBR+lAVDdRHfv3mViYuKtJa+r1+s8ePCAfD4PwN7e
      HtPT06fqPIlEgkgkIv5eX1+nXC6fql61Wo0ff/yRH374gXg8TrlcfuG1qtXqWwtBq1QqIiop
      HA6/spxcLndkpNGL2NvbE/sfx2F1dZW7d+/y/fffUygUjvzs/Pz8qQbK9fV1/vznPzM2Nnai
      UM3ToCgKi4uL/PnPf2ZxcVFEJqlEo9HnNkwbjQYLCwtvpT77+/vcvXuXv/3tb6TTaQqFAqFQ
      6NBnKpXKqfv1USiKwvb2Nn/5y18YHx9/ri/Nzc0dO3Jqa2uLTCZzovIjkQj5fJ5Wq3Uo1Pg4
      lMvlt95XTssHKwQ7ajNWURTu3bvHN998g9vtFhEUJpOJ/f19TCYTwWBQRDE0m02mp6cplUon
      UujWajXm5uaoVqt0d3czMzNDLBZjeHiYpaUlQqEQPp9PRNqk02m2trYoFou0tbURDAZZWVnB
      arVSKpVYWVlhb2+Pzs5OdDodFouFZDLJzMwMBoPh2BvGwWAQh8MhQv4ePXpEMBjEYDBQr9eZ
      mpoSUQiPHz9Gr9djtVoZGxujWq2+Eb9isVhkY2OD3t5eVlZWcDgc1Go1xsfHxYbj48ePxT36
      05/+RDKZpK2tTUQpvYpIJIJOp6Ner1Ov1wmHwywtLeH3+6lWq0xMTFCv13G73cCTQf3LL7/E
      6/WKsEhV5NVsNqnX60xMTKAoCpFIhL6+PmGU5+bmyGQyeL3eI/vH5uYmIyMjOJ1OgsGgiLhR
      2293d5fFxUURgLC4uEhnZycHBweUSiVisRj1ep3Hjx9jMpmOVKmGw2GSySS3bt1ic3MTeGIU
      z58/z+7urhCv6XQ6pqamyGQyeDweHj9+TCwWQ6PRYLfbWVhYYGtrC4/HQzKZJBgMEo1GSSQS
      xONxvF4va2trLC0tHRmGqQoqBwcHmZycZGBgQCTOm5iYQKPRMDc3x+LiIgaDAbPZzPj4OKVS
      CavVSigUYnl5WbT/xMQElUrlWM9kuVxmcnKSf/zHf6RYLBKPx9HpdORyOWKxGLFYjL6+PoLB
      IMvLyzidTprNJmtra6yuruJyudDr9UxOTjI/P09PT48Iy7VYLK9UC6+vr2MymbBarUxPTzM0
      NMTW1hazs7O0t7dTr9cPhV9Xq1UmJyfR6XRMT08TDAaFMn98fJxKpUJ7ezuhUEgYd3WjHaQQ
      7Eg0Gg3d3d3893//N/F4nGq1ytbWlog9L5fLrKyscPXqVaamppiZmSEQCOB0Ok88e7fb7WIA
      aTQamM1moWa1Wq0sLi6ysLBAX18fKysr9PX1sbe3RzqdZnd3l+HhYaanp2m1Wuj1egYGBpif
      nycUClEqlRgfH2d4ePhESsHu7m7m5uZ4+PAhJpMJv9/P+fPnRaoEVZDj8Xg4d+4cPT09jI2N
      0d3dzdLS0htZFajy+x9//JGVlRUUReHhw4cMDAwwMzNDrVaju7sbj8fD9PQ0fr9fDJwnIZPJ
      MDk5SbPZJBgM0tvby/j4OBMTE/j9fkKhkBBwNRoNfvjhB/793/+dkZERNjc3KZfLRKNR9vf3
      efDgAcPDw2IAWl9fJxqNsrq6KsIzX9U/Wq0WiUSCra0tWq0WJpOJK1euMDU1Ja41MjJCJpNh
      Y2ODc+fO8ejRI5aWlhgfH6ejo4Px8XFGRkZeGe5ZKBREyoXBwUERe7+2tsb+/r6IEtJqtYyM
      jJBIJIhGo5RKJUZHR8Vg2Gg08Hq9zM3NsbGxgd1uPxQWWy6XcTqdDA4OMj4+fmSdUqkUoVCI
      Wq1GuVxmY2OD+/fv8+mnn4oQY7Uvjo+P09/fL+q1vb3NwMAAy8vLjI2Nce7cORwOx7GeyWQy
      SU9PD3q9ns7OTorFIktLSzx69OhQiHd7ezv9/f2Mj4+TSqWIRqMMDg6ysLDAo0ePRP3q9Toz
      MzOMjo4yPT39Si9CrVZjYmKCe/fusb+/T7lcZmlpidHRUcbGxojFYuzv74tV0YMHDxgdHcVo
      NOL3++nv7ycQCDA+Ps7Q0JAwWtPT01y+fJm1tbX3kob/w1UoHIEqjhoaGuLevXuMjIwc8otq
      NBox4Gs0Gi5cuMDMzAwul4uOjo4T5UUxGAzodDoWFxfp7+9nbW2NbDZLNBoVg4bBYMDn8+F2
      u/F6vYRCIRGb39nZKYRbPT09dHR0sLW1hdFoRFEUhoaGmJiYYGBg4Ngzc4fDwT//8z8TDod5
      8OCBkPqbzWYWFhaE+rmjo0OIcFRXgVarpVwuv/bMQqPRcO7cOa5evSrufSwWEyGdqVSK2dlZ
      ER5qs9nEjPy41Go1xsbGuH37Ntlslkwmw9bWFnq9nng8LlIwqO4AnU7HlStXGBkZIRgMHprV
      VatVTCYTXq9XpP3Y3t7m97//vXi4E4kEbrf7yP6hqqa7urrEQFOv16lUKiSTSfr6+ujo6BCz
      fYPBIPIXff3117S1tTE0NMT4+DiDg4Ni9fIitFqtEN1VKhVMJhORSIRwOMy//uu/CoMQjUaF
      orlSqeD1enG5XJhMJvL5PP39/WJ1Yjab8fl8RCIRAoEA0WiUer3O/Pw8er3+la6zRCJBd3c3
      N2/eFC6X0dFRHjx4QHd3Nw6HQ8z+q9WqCEnOZDKHnsnLly+LdCZqapGjMBqNwrXUaDRErP1X
      X30lJhVqTiSLxUKhUBA6ADUku1Ao0NvbSyaTEd4ANUyzVCod2TcNBgOXLl3C4/FQKBTIZDJ0
      d3fjdrvFb1XDbNXfd//+fXp7e7FYLOj1ekwmE41Gg87OTqrVKslkEo/HI9rqfexLfJQrgFar
      xezsLHt7ezSbTcxmM+l0Wgie4HAGvlqtxsDAAKlUimq1euLyPvnkEx48eCBCU9WBNRAI4PP5
      Xvq9ZDLJ0tISBoPhpYOKqiA9iQgtEokQDAZFfLfdbhdiuVQqRW9vr1iuxmIx4vE4vb29GI1G
      zp0798YOmTCbzTgcDsxms1iVtbW10dfXJ5avqlGz2+2sr6+L9jkORqORr776iu3tbfEA+Xw+
      ITZqa2ujt7dXGDNFUYhGo+RyOSwWC1qtls3NTba3t8UDtry8LFTBX3/9NZOTkxSLRfr7+8nl
      cq/0XxuNRj799FMuXryITqcjn88L8ZbH42F7e1u4hlwul6ivqg+BJwN7T0/PK9vc5/OxublJ
      MBhkYWGB/v5+UW/VD67RaMTg+iLXWnt7O2trayLtx4tQXWyBQOBI7YFGo2FkZITR0VFhXFUX
      0PDwMJFIBIvFwt7eHolEQrifVDfo01QqFYaHh4nH48fy3Xs8Hg4ODlheXmZ+fl6sjJ4etGu1
      Gq1Wi87OzueeN3WCNDc3Rzgcxmq1kk6nCQaDZLPZV7olNRqNUC8bjUbcbjfhcJhgMCgmOJFI
      hLW1NZFlYHh4mN3dXWw2Gzs7O0JDsbi4yNra2pFjx7vio9QBKIpCMpkkm83S1taG1+slFotR
      rVZpa2sT+TfUZGjwZDC22Wz4fL4TpfItFArY7Xb29/fx+XxCzRmPx0Wmv0ajIXLiOBwO4TIa
      GxtjZGQEr9eLXq8XLgM1WZXZbCaZTFIoFIRw7TiUy2Xi8TiKotDd3Y1erycajWI2m9Hr9UKY
      1d7eLlwFTqeTSCSCXq8XCunXQVX6qik41FlQIpHAbDbj8XiEGMhqtWK1WolGo3g8nmPvAagp
      FVRxVT6fF7lzDAYDsVgMo9FIZ2cner2eTCYjDIzP56PRaAiRl8fjEUpWh8OBXq/H4XCQTqfR
      aDSk02mRGuOo/qFmtlQFhKlUSrgDOzo6xOaoz+c7dH6rOoCoytxisfjKNn9aCNfe3o7b7RZ9
      LJVKYTab0el0QiFuNptxuVzU63UcDocQlcViMRqNBoFAQAjkisUidrudYrEoFLiNRkMY2Ze1
      x9OCQbUP1Ot1UUeXyyXaxWaziX6pPicmk4lSqUSr1eLg4EAIFI/zTObzefb390X6l1KpJPq8
      +lxGo1GRVsJut9NsNkWZRqNRTAYCgYAQjarpY46iWCwKFXM2m8XlcpFIJMjlckIYqIr82tvb
      qdVqZDIZ3G43TqdT3Ad1NW61WvH5fGK/M5/Pi/4BUgj20QvBqtUqBwcHInunRCKRHBcpBPvI
      USXhEolE8qEiDcAxaDab5PN5EXanoijKK+N71Uykp9l7AIQ/sdlsimvU6/VjxbCrB0tL/n5R
      D4DJ5/PUajXR5sfJtPqx0mq1KJfL4hlQQzCP+r3qs3rae6J+v1QqvfKZbzabh1KLv+j9DwVp
      AF5Bs9nk3r17zM7OMjk5SS6XE2rLVqslsi+qfz/7/8XFRUqlEru7u+I99eFUB/ajBvOffvqJ
      TCbD9vY2f/zjH1EUhR9//FEYAbWcZ5Wi6kE3qVTqUDkv+pxURn68lEolvv/+e+bn59nc3CSb
      zZJOp5mfnxdZMY9SDn+MZLNZ/u3f/k34+//6179y9+5dgOeeCbXfP53c7zR9vtVq8T//8z/M
      zMzw7bffks1mX/hcNZtNcb7By54zNSz8Q3j+Psow0HeJmjP+H/7hH6jX65hMJu7fv08ymeTK
      lSvE43H8fj8TExOsr6/zL//yL6yurrK9vc3169eBJ0ZEDRH8z//8T1qtFr/4xS9EnHJXV5cQ
      dT2LurmcTqfx+Xwkk0lxze+++45MJsOvfvUr4vE4oVCIQCAgNkLPnz+PVqtleXlZqBd/85vf
      8OOPP5LNZvn5z3/OwsICRqORn//8528tW6Lk7bGzs8Pg4CAXLlwAYHd3l3K5zE8//UQ0GhXR
      TZ9//jn37t3j5s2b7yQ//tvG7/cTj8dFam2DwUAqlWJycpJMJsOdO3fY2dkhGo2Sz+f5/e9/
      TyKRoK+vj2+//RaDwcCNGzdOlP3X4XBw48YNkeZ7c3OTvb09tFotN2/eZGJigmq1ytDQEPAk
      ZFY9gGlqagqdTsfPfvYzxsbGKBaL9PX1MTs7i91u5/bt2691FvlpkSuAV6Cm+U0mk/zXf/0X
      Ozs7ZDIZrl+/zvnz56lUKjgcDkZHRxkZGcHv93P16lUCgYA4wUtRnhwvGI1G0Wq1DA8Pi4NS
      HA6H+NyL6OrqIhKJkM1mGRkZYWtrC6vVitFoFDHE6vsXL15kdHSUbDbLL3/5S3FKVjgc5p/+
      6Z/47LPPxDmxv/vd70R89Pnz5187bbXk/aBG1jz9t6IoXLx4kTt37jAyMkI2mxXnNP89DP7w
      JLw1k8mQTCbFRqnNZsPtdouInFwux+9+9ztx/Gu1WmV9fZ3R0VF+/etfn7jPZzIZ/uM//oPV
      1VUGBgZIJBL8+te/pqenh2AwiNPp5De/+Q09PT3E43EePHjAF198QTAYpLu7Wyj1L1y4wO3b
      t9HpdOh0ukPHnb5rpAF4BRaLRcjlP/vsM7RaLS6XC5fLJULX1PNfb9y4gaIoTExM8Pnnnz8n
      LFFj2bu6uvjFL37BlStXuHDhAvfv33+pG8jtdrOzs4PdbsfhcLC3t4fL5WJ1dRWbzcbQ0JA4
      V1dNY+Dz+Q6FWqq5+6vVqsgXr8bw37p1i/39fZHXR/JxYbfbiUQitFqtQ/s9Wq2WZrMp9Blz
      c3OHjov82NHr9Xi9XqHuhifpPLxeL+fPn0ev15PP50XosIp6WM9pcDqd3LlzB0VRxL1WdRDq
      4A5P3EVqSGehUMBgMOB0Orly5Yo4vEjVK9y6dUucn/w++ChzAb1L9Hq9yLWSTCYZGhqi2WyK
      AzvUA+V3dnbEoePb29tkMhlx4Ifb7aZer9PX18fu7i7xeBybzSYG3o6ODrq7u18YC60KfXp7
      e3G73cRiMS5evIjNZmN5eZl8Pi+OHlRVmNVqFa/XK46j6+joYHp6mnK5zOjoKOVymc7OTgqF
      AjMzM1SrVfr7+9963hHJm6etrY1EIsHi4iLVapX29nb0er1IwWG323G73aytrfHFF1/8XawA
      VPV3V1cXuVyOwcFBisUigUCA1dVVcrkcfX19+Hw+lpeXSSQSfPrpp5TLZYaGhlhZWRFHiR73
      7G5FUSgWiwwMDOB2u9nc3MTv94vkfKOjoySTSZaXl4UI89q1a6ysrDA0NCQEZ36/H4PBwNLS
      EhqNhuXlZfR6PYODg4fa5l3lApI6gGPw9ObZSdJIvOxarVZLXKfZbApZ+2mv86rvqptTWq32
      ufqrEQl/DwPDWeVlfUE9fU01BOpM+e8ZtZ8DTE5Oitn+jRs3xL1Rn+eXnTt+Ep5OS3HUddUV
      vlarPdReL3supRDsAzIAEsnHiqI8OYxeTY1xlqjX61SrVWw222sP9O+ad2UAZBSQRPJ3jLo/
      dBZRUzdIXo40ABLJB06z2RQiJo1GIw6Rf1X+mmc5ODh4ZbZTydlC9gSJ5AOnXC4zPT3NH//4
      R2ZnZ0kkEqyvr4uQzxcdG9lsNg8JDhuNBrOzs+J19buqEOldHSO4v6YhAAACH0lEQVQp+bCQ
      KwCJ5AOnra2N69evU6vV+PLLL0kmk8zPzxOJRES++Y6ODprNJtlslkgkQrVaJZ/P89vf/lac
      dnZwcEChUODu3bu0Wi1u3rwpxFKXL18+E5vEksPIFYBE8hGiiplyuZzI/aMee9loNPjmm28Y
      HBwknU5Tq9X47W9/S09PjzgUZnBwkNnZWQ4ODrh+/bpQEkvOFtIASCQfIS8K+XxWCKaiJk5T
      jyW1Wq309vZy7do1nE4n7e3tH12UjOTNIA2ARPIRoNVqxUEtRqMRl8uFVqvF4/Hg8/mYm5tj
      bW0Nh8MhPudyuXA6nbjdbv7yl7/QarXo7e2l1WqJZHGqoFFyNpE6AInk7wBVUPSimbwqBHxa
      sNRqteTA/wEjdQASieTYvOos36eTjamhpBKJdAFJJBLJGUUaAIlEIjmjSAMgkUgkZxRpACQS
      ieSMIg2ARCKRnFGkAZBIJJIzijQAEolEckaRBkAikUjOKNIASCQSyRlFGgCJRCI5o0gDIJFI
      JGcUaQAkEonkjCINgEQikZxRpAGQSCSSM4o0ABKJRHJGkQZAIpFIzijSAEgkEskZRRoAiUQi
      OaNIAyCRSCRnFGkAJBKJ5IwiDYBEIpGcUaQBkEgkkjOKNAASiURyRpEGQCKRSM4o0gBIJBLJ
      GUUaAIlEIjmjSAMgkUgkZxRpACQSieSMIg2ARCKRnFGkAZBIJJIzijQAEolEckb5fzKSSpi/
      4CaAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
      ACX+H26+hsWsHPMNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 7' width='384'>
      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
      TkNDQ+Mu5v8HSkEaeftnT+wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='TOP VS BOT' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Tabpy' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Top' width='384'>
      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
      OACsXLmSw4cP09DQwK9//evyiqDi4ZRXda4EEh6mP3NHj1mK6um+LzDCnqUtRDWqGgV07tw5
      uru7qa+vp6+vj2w2SyQS8SpvQsxKp0Nz2DVno2fpfy6QYo1nqYtaUlUAWL58OW+88Qaf+tSn
      OH78OMFg0Kt8CTFr9elhjkSaPUt/hy7fW1FSVQBwXZeXXnqJWCxGd3c3lmXJchBCCFGjKg4A
      Z86c4d///d9ZuHAhgUCAixcvsmnTporea9s2juOUZw0XCgUMw5ARREIIMY0qDgBNTU08/vjj
      tLW1EY/H+dznPlfRSKAzZ85w5coVstksjz32GIODg/T392OaJjt27JAJZUIIMU0qDgB1dXW0
      trby3nvvoaoqqVSKz372s3dsAlq8eDFLly7l6NGj5HI5ent72blzJydOnGBoaEgCgBAzzJng
      HLoj8z1L/39SFGQQ+cxQVR/AyZMneeqpp2hsbETX9YqacBRF4eDBg5imydq1a7l69SqqqhII
      BCgWiziOgzU+M9K2bQqFQvm9llWscneqY1nWpO3dzHG8veexaZoUCtPTh+K67k1lXSqLic+0
      WPS27ItFc8qyd13Xw627U27b9HAWMIBtO5O2f+tx7+1MYas49XG/O9rGkTnenZg9W7QJf8T2
      bcfxbLsAzk3H/S1l7/Fxb9+hzvH6PuulOufG9qu+JeS7775LKpWirq6OHTt23PEK4MKFCwA8
      +eSTqKparvDT6TSJRAJVVctNSZqm4ff7y+8t6t6OFdd1fdL2bqaq3lbOPp9vyu17SVGUSdue
      KIuJAOD1Kq+GMfW+e3urUWXKbft83lbAmqZO2v7Nx72uV/W1rJpu3Om497Zvzu/34fff/hrA
      6wCg3nTc31L2Hh/32h3qHK8H1dxc51R8pJmmyaZNm2hrawNKt4Ss5Eva3d3N2NgYu3fvZuXK
      lSxZsoQ333wTn89HIjH1ZJszwQb+fe4TlWaxap8LN7LFs9SFEGJmqzgAvP7664RCId5//30A
      5syZUw4GU9m2bdstz7W2tqJp2h3PNNJ6gHPBhkqzWLVhTcZDCyFmr4oDwDPPPIOqqixfvpxC
      oUBDQ8NdXyrKTWSEEGL6VRwA/H4/e/fu5dChQ0QiERzH4aWXXpKJYEIIUaOqOoW/cuUKL774
      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
      jtfrpdVqqc+t1WqJxWI0Gg2MRiP5fJ5MJoMsy6RSKfR6PVqtlv39fdrtNhaLhXw+Ty6Xo9/v
      YzQaSaVS6jvyer2P1GN9fR273U61WiWZTGIwGNDr9ciyzK1bt5BlmYmJCdbX11lfX2d5eZlc
      Lkcmk8FisdBut+l0OhSLRVqtFolEgtHRUUZGRigUCqRSKUZHR4nFYmxtbWG1WjGbzS98D7Va
      jZ2dHbxeL7FYDEmSsNls1Go1arUavV6Per1OIpHAbDZTr9fJZrNUKhXsdvtz7y9JEna7/ZH/
      q1Qq3L59G6PRiNvtplAokE6n6fV6mM1mJEni8PCQnZ0dAoEArVaLQqGAyWRif3+fbrfL6Ogo
      nU6HXq9HtVpFp9NRr9cxGAxD9Liv+fjjj5mfn6dQKKjP1uv1aDQa6jcXj8cJhUJq/3pam+t0
      uqHKvXfvHmazGZvNRq/X4969e1SrVex2O/V6ncPDQ0wmE91ul2QySalUwmazsb+/T7lcpt1u
      Y7PZaDQa7O/vYzQa6fV6FAoFMpkMZrP5ke/gaW3/OIqicOfOHebm5ohGoxgMBlqtFslkEr1e
      z+joKKlUimw2S6/XI5VKYbFYXsqq9uOPPyYQCKAoCv1+n3Q6TalUotlsUigUcDgcahu3223y
      +Tz9fp92u43BYKDf71OtVtUx63G+dwagUqlgtVo5e/YsFouFg4MDms0mlUoFnU7Hl19+SSKR
      wOPxsLu7i8lkYnNzE6PRiNVqRa/Xk8vlMBgMWK1W9vf3cTqdNBoNNjc3MRgM5HI57HY76+vr
      OBwO2u32EwagVqvR7XZZXFyk0+nQarX48ssvMRgM7O7uqoroWCxGv9/n7t272Gw2tre38Xg8
      3LlzB5vNRrlcZmxsjP/6r//CYDAQjUZRFIWtrS2mp6eHXgIOXva5c+eIRCK4XC4++ugjtFot
      hUKBWCzG+Pi42haxWAydTscXX3yByWSiUCjg8/meef+BARgMZhcuXECWZYrFIltbW+j1enZ2
      dmg2m0iShEajQa/X8/HHH2MwGLh37x5jY2NEIhEKhQKyLBONRrHb7dy+fRur1YokSbRaLfb3
      99Fqteh0uifqFI/HOXPmDIVCgXq9TigU4ty5c/T7fXK5HK1Wi5mZGcLhMCMjI4yNjbG5ucnI
      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
      M4IAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
